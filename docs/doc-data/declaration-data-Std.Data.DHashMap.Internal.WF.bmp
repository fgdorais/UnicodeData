{"name":"Std.Data.DHashMap.Internal.WF","instances":[],"imports":["Std.Data.DHashMap.Basic","Std.Data.DHashMap.Internal.Model","Std.Data.DHashMap.Internal.AssocList.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L741-L744","name":"Std.DHashMap.Internal.Raw₀.Const.wfImp_insertManyIfNewUnit","line":741,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertManyIfNewUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertManyIfNewUnit\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">wfImp_insertManyIfNewUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">ρ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\">ρ</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.insertManyIfNewUnit\">Std.DHashMap.Internal.Raw₀.Const.insertManyIfNewUnit</a> <span class=\"fn\">m</span> <span class=\"fn\">l</span>)</span>.val</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L736-L739","name":"Std.DHashMap.Internal.Raw₀.Const.wfImp_insertMany","line":736,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertMany","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertMany\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">wfImp_insertMany</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">ρ</span> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\">ρ</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.insertMany\">Std.DHashMap.Internal.Raw₀.Const.insertMany</a> <span class=\"fn\">m</span> <span class=\"fn\">l</span>)</span>.val</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L731-L734","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertMany","line":731,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertMany","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertMany\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertMany</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">ρ</span> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\">ρ</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertMany</span> <span class=\"fn\">l</span>)</span>.val</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L713-L725","name":"Std.DHashMap.Internal.Raw.WF.out","line":713,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.WF.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.WF.out\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">WF</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i₁ : <span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i₂ : <span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span>.WF</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L704-L707","name":"Std.DHashMap.Internal.Raw₀.wfImp_filter","line":704,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filter\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filter\">Std.DHashMap.Internal.Raw₀.filter</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L698-L702","name":"Std.DHashMap.Internal.Raw₀.toListModel_filter","line":698,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filter\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filter\">Std.DHashMap.Internal.Raw₀.filter</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filter\">List.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L690-L694","name":"Std.DHashMap.Internal.Raw₀.wfImp_filterₘ","line":690,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filterₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterₘ</span> <span class=\"fn\">f</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L683-L688","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_filterₘ","line":683,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_filterₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#ReflBEq\">ReflBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L678-L681","name":"Std.DHashMap.Internal.Raw₀.toListModel_filterₘ","line":678,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filterₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filter\">List.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L671-L674","name":"Std.DHashMap.Internal.Raw₀.wfImp_map","line":671,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_map\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.map\">Std.DHashMap.Internal.Raw₀.map</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L665-L669","name":"Std.DHashMap.Internal.Raw₀.toListModel_map","line":665,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_map\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.map\">Std.DHashMap.Internal.Raw₀.map</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L657-L661","name":"Std.DHashMap.Internal.Raw₀.wfImp_mapₘ","line":657,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_mapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_mapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_mapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.mapₘ</span> <span class=\"fn\">f</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L650-L655","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_mapₘ","line":650,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_mapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_mapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_mapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#ReflBEq\">ReflBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.mapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L645-L648","name":"Std.DHashMap.Internal.Raw₀.toListModel_mapₘ","line":645,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_mapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_mapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_mapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.mapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L637-L641","name":"Std.DHashMap.Internal.Raw₀.wfImp_filterMap","line":637,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMap\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filterMap\">Std.DHashMap.Internal.Raw₀.filterMap</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L631-L635","name":"Std.DHashMap.Internal.Raw₀.toListModel_filterMap","line":631,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMap\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filterMap\">Std.DHashMap.Internal.Raw₀.filterMap</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filterMap\">List.filterMap</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\">x</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span>)</span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L623-L627","name":"Std.DHashMap.Internal.Raw₀.wfImp_filterMapₘ","line":623,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filterMapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterMapₘ</span> <span class=\"fn\">f</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L614-L621","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_filterMapₘ","line":614,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterMapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterMapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_filterMapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#ReflBEq\">ReflBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterMapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L608-L612","name":"Std.DHashMap.Internal.Raw₀.toListModel_filterMapₘ","line":608,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filterMapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterMapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filterMap\">List.filterMap</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\">x</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span>)</span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L601-L604","name":"Std.DHashMap.Internal.Raw₀.wfImp_erase","line":601,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_erase\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.erase</span> <span class=\"fn\">a</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L595-L599","name":"Std.DHashMap.Internal.Raw₀.toListModel_erase","line":595,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_erase\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.erase</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L586-L591","name":"Std.DHashMap.Internal.Raw₀.wfImp_eraseₘ","line":586,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_eraseₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘ</span> <span class=\"fn\">a</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L577-L584","name":"Std.DHashMap.Internal.Raw₀.toListModel_eraseₘ","line":577,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_eraseₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘ</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L571-L575","name":"Std.DHashMap.Internal.Raw₀.toListModel_perm_eraseKey_of_containsₘ_eq_false","line":571,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_perm_eraseKey_of_containsₘ_eq_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_perm_eraseKey_of_containsₘ_eq_false\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_perm_eraseKey_of_containsₘ_eq_false</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L562-L569","name":"Std.DHashMap.Internal.Raw₀.wfImp_eraseₘaux","line":562,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘaux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘaux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_eraseₘaux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘaux</span> <span class=\"fn\">a</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L556-L560","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_eraseₘaux","line":556,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_eraseₘaux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_eraseₘaux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_eraseₘaux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘaux</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L550-L554","name":"Std.DHashMap.Internal.Raw₀.toListModel_eraseₘaux","line":550,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘaux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘaux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_eraseₘaux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘaux</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L542-L546","name":"Std.DHashMap.Internal.Raw₀.Const.wfImp_getThenInsertIfNew?","line":542,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">wfImp_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?\">Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L535-L540","name":"Std.DHashMap.Internal.Raw₀.Const.toListModel_getThenInsertIfNew?","line":535,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.toListModel_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.toListModel_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">toListModel_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?\">Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L528-L531","name":"Std.DHashMap.Internal.Raw₀.wfImp_getThenInsertIfNew?","line":528,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.getThenInsertIfNew?</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L521-L526","name":"Std.DHashMap.Internal.Raw₀.toListModel_getThenInsertIfNew?","line":521,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.getThenInsertIfNew?</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L513-L517","name":"Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsertIfNew","line":513,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_containsThenInsertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L506-L511","name":"Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsertIfNew","line":506,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_containsThenInsertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L499-L502","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertIfNew","line":499,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L492-L497","name":"Std.DHashMap.Internal.Raw₀.toListModel_insertIfNew","line":492,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L482-L488","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertIfNewₘ","line":482,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNewₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNewₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertIfNewₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNewₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L473-L480","name":"Std.DHashMap.Internal.Raw₀.toListModel_insertIfNewₘ","line":473,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNewₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNewₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insertIfNewₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNewₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L466-L469","name":"Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsert","line":466,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_containsThenInsert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L460-L464","name":"Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsert","line":460,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_containsThenInsert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntry\">Std.DHashMap.Internal.List.insertEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L453-L456","name":"Std.DHashMap.Internal.Raw₀.wfImp_insert","line":453,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L447-L451","name":"Std.DHashMap.Internal.Raw₀.toListModel_insert","line":447,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntry\">Std.DHashMap.Internal.List.insertEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L437-L443","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertₘ","line":437,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L422-L435","name":"Std.DHashMap.Internal.Raw₀.toListModel_insertₘ","line":422,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insertₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntry\">Std.DHashMap.Internal.List.insertEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L411-L420","name":"Std.DHashMap.Internal.Raw₀.wfImp_consₘ","line":411,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_consₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_consₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_consₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.consₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L403-L409","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_consₘ","line":403,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_consₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_consₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_consₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.consₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L398-L401","name":"Std.DHashMap.Internal.Raw₀.toListModel_consₘ","line":398,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_consₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_consₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_consₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.consₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">b</span>⟩</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L389-L394","name":"Std.DHashMap.Internal.Raw₀.wfImp_replaceₘ","line":389,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_replaceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_replaceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_replaceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.replaceₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L384-L387","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_replaceₘ","line":384,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_replaceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_replaceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_replaceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.replaceₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L378-L382","name":"Std.DHashMap.Internal.Raw₀.toListModel_replaceₘ","line":378,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_replaceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_replaceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_replaceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.replaceₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.replaceEntry\">Std.DHashMap.Internal.List.replaceEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L369-L372","name":"Std.DHashMap.Internal.Raw₀.Const.getD_eq_getValueD","line":369,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getD_eq_getValueD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getD_eq_getValueD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">getD_eq_getValueD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.getD\">Std.DHashMap.Internal.Raw₀.Const.getD</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueD\">Std.DHashMap.Internal.List.getValueD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L364-L367","name":"Std.DHashMap.Internal.Raw₀.Const.getDₘ_eq_getValueD","line":364,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getDₘ_eq_getValueD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getDₘ_eq_getValueD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">getDₘ_eq_getValueD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.getDₘ\">Std.DHashMap.Internal.Raw₀.Const.getDₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueD\">Std.DHashMap.Internal.List.getValueD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L359-L362","name":"Std.DHashMap.Internal.Raw₀.Const.get!_eq_getValue!","line":359,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!_eq_getValue!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!_eq_getValue!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get!_eq_getValue!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.get!\">Std.DHashMap.Internal.Raw₀.Const.get!</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue!\">Std.DHashMap.Internal.List.getValue!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L354-L357","name":"Std.DHashMap.Internal.Raw₀.Const.get!ₘ_eq_getValue!","line":354,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!ₘ_eq_getValue!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!ₘ_eq_getValue!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get!ₘ_eq_getValue!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.get!ₘ\">Std.DHashMap.Internal.Raw₀.Const.get!ₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue!\">Std.DHashMap.Internal.List.getValue!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L349-L352","name":"Std.DHashMap.Internal.Raw₀.Const.get_eq_getValue","line":349,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get_eq_getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get_eq_getValue\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get_eq_getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.get\">Std.DHashMap.Internal.Raw₀.Const.get</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue\">Std.DHashMap.Internal.List.getValue</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L343-L347","name":"Std.DHashMap.Internal.Raw₀.Const.getₘ_eq_getValue","line":343,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getₘ_eq_getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getₘ_eq_getValue\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">getₘ_eq_getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.getₘ\">Std.DHashMap.Internal.Raw₀.Const.getₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue\">Std.DHashMap.Internal.List.getValue</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L338-L341","name":"Std.DHashMap.Internal.Raw₀.Const.get?_eq_getValue?","line":338,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?_eq_getValue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?_eq_getValue?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get?_eq_getValue?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.get?\">Std.DHashMap.Internal.Raw₀.Const.get?</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue?\">Std.DHashMap.Internal.List.getValue?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L333-L336","name":"Std.DHashMap.Internal.Raw₀.Const.get?ₘ_eq_getValue?","line":333,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?ₘ_eq_getValue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?ₘ_eq_getValue?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get?ₘ_eq_getValue?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.get?ₘ\">Std.DHashMap.Internal.Raw₀.Const.get?ₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue?\">Std.DHashMap.Internal.List.getValue?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L324-L327","name":"Std.DHashMap.Internal.Raw₀.getKeyD_eq_getKeyD","line":324,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyD_eq_getKeyD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyD_eq_getKeyD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKeyD_eq_getKeyD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKeyD</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKeyD\">Std.DHashMap.Internal.List.getKeyD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L319-L322","name":"Std.DHashMap.Internal.Raw₀.getKeyDₘ_eq_getKeyD","line":319,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyDₘ_eq_getKeyD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyDₘ_eq_getKeyD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKeyDₘ_eq_getKeyD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKeyDₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKeyD\">Std.DHashMap.Internal.List.getKeyD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L314-L317","name":"Std.DHashMap.Internal.Raw₀.getKey!_eq_getKey!","line":314,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!_eq_getKey!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!_eq_getKey!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey!_eq_getKey!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey!</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey!\">Std.DHashMap.Internal.List.getKey!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L309-L312","name":"Std.DHashMap.Internal.Raw₀.getKey!ₘ_eq_getKey!","line":309,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!ₘ_eq_getKey!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!ₘ_eq_getKey!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey!ₘ_eq_getKey!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey!ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey!\">Std.DHashMap.Internal.List.getKey!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L304-L307","name":"Std.DHashMap.Internal.Raw₀.getKey_eq_getKey","line":304,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey_eq_getKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey_eq_getKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey_eq_getKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey\">Std.DHashMap.Internal.List.getKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L298-L302","name":"Std.DHashMap.Internal.Raw₀.getKeyₘ_eq_getKey","line":298,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyₘ_eq_getKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyₘ_eq_getKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKeyₘ_eq_getKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKeyₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey\">Std.DHashMap.Internal.List.getKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L293-L296","name":"Std.DHashMap.Internal.Raw₀.getKey?_eq_getKey?","line":293,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?_eq_getKey?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?_eq_getKey?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey?_eq_getKey?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey?</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey?\">Std.DHashMap.Internal.List.getKey?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L288-L291","name":"Std.DHashMap.Internal.Raw₀.getKey?ₘ_eq_getKey?","line":288,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?ₘ_eq_getKey?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?ₘ_eq_getKey?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey?ₘ_eq_getKey?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey?ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey?\">Std.DHashMap.Internal.List.getKey?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L283-L286","name":"Std.DHashMap.Internal.Raw₀.getD_eq_getValueCastD","line":283,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getD_eq_getValueCastD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getD_eq_getValueCastD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getD_eq_getValueCastD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getD</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCastD\">Std.DHashMap.Internal.List.getValueCastD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L278-L281","name":"Std.DHashMap.Internal.Raw₀.getDₘ_eq_getValueCastD","line":278,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getDₘ_eq_getValueCastD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getDₘ_eq_getValueCastD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getDₘ_eq_getValueCastD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getDₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCastD\">Std.DHashMap.Internal.List.getValueCastD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L274-L276","name":"Std.DHashMap.Internal.Raw₀.get!_eq_getValueCast!","line":274,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!_eq_getValueCast!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!_eq_getValueCast!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get!_eq_getValueCast!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get!</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast!\">Std.DHashMap.Internal.List.getValueCast!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L269-L272","name":"Std.DHashMap.Internal.Raw₀.get!ₘ_eq_getValueCast!","line":269,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!ₘ_eq_getValueCast!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!ₘ_eq_getValueCast!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get!ₘ_eq_getValueCast!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get!ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast!\">Std.DHashMap.Internal.List.getValueCast!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L264-L267","name":"Std.DHashMap.Internal.Raw₀.get_eq_getValueCast","line":264,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get_eq_getValueCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get_eq_getValueCast\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get_eq_getValueCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast\">Std.DHashMap.Internal.List.getValueCast</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L258-L262","name":"Std.DHashMap.Internal.Raw₀.getₘ_eq_getValue","line":258,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getₘ_eq_getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getₘ_eq_getValue\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getₘ_eq_getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast\">Std.DHashMap.Internal.List.getValueCast</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L253-L256","name":"Std.DHashMap.Internal.Raw₀.get?_eq_getValueCast?","line":253,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?_eq_getValueCast?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?_eq_getValueCast?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get?_eq_getValueCast?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get?</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast?\">Std.DHashMap.Internal.List.getValueCast?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L247-L251","name":"Std.DHashMap.Internal.Raw₀.get?ₘ_eq_getValueCast?","line":247,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?ₘ_eq_getValueCast?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?ₘ_eq_getValueCast?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get?ₘ_eq_getValueCast?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get?ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast?\">Std.DHashMap.Internal.List.getValueCast?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L242-L245","name":"Std.DHashMap.Internal.Raw₀.contains_eq_containsKey","line":242,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.contains_eq_containsKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.contains_eq_containsKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">contains_eq_containsKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.containsKey\">Std.DHashMap.Internal.List.containsKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L236-L240","name":"Std.DHashMap.Internal.Raw₀.containsₘ_eq_containsKey","line":236,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.containsₘ_eq_containsKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.containsₘ_eq_containsKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">containsₘ_eq_containsKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.containsKey\">Std.DHashMap.Internal.List.containsKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L219-L232","name":"Std.DHashMap.Internal.Raw₀.wfImp_expandIfNecessary","line":219,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_expandIfNecessary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_expandIfNecessary\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_expandIfNecessary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.expandIfNecessary</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L210-L217","name":"Std.DHashMap.Internal.Raw₀.toListModel_expandIfNecessary","line":210,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expandIfNecessary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expandIfNecessary\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_expandIfNecessary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.expandIfNecessary</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L204-L208","name":"Std.DHashMap.Internal.Raw₀.toListModel_expand","line":204,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expand\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_expand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{buckets : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand\">Std.DHashMap.Internal.Raw₀.expand</a> <span class=\"fn\">buckets</span>)</span>.val</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">buckets</span>.val</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L200-L202","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_expand","line":200,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_expand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_expand\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_expand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{buckets : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand\">Std.DHashMap.Internal.Raw₀.expand</a> <span class=\"fn\">buckets</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L180-L198","name":"Std.DHashMap.Internal.Raw₀.expand.go_eq","line":180,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_eq\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">expand</span>.<span class=\"name\">go_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(source : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">0</span> <span class=\"fn\">source</span> <span class=\"fn\">target</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">acc</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span>\n    <span class=\"fn\">target</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\">source</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L174-L178","name":"Std.DHashMap.Internal.Raw₀.expand.go_neg","line":174,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_neg\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">expand</span>.<span class=\"name\">go_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{source : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">source</span>.size</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">i</span> <span class=\"fn\">source</span> <span class=\"fn\">target</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">target</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L167-L172","name":"Std.DHashMap.Internal.Raw₀.expand.go_pos","line":167,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_pos\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">expand</span>.<span class=\"name\">go_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{source : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">source</span>.size</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">i</span> <span class=\"fn\">source</span> <span class=\"fn\">target</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">source</span>.set</span> <span class=\"fn\">i</span> <span class=\"fn\">Std.DHashMap.Internal.AssocList.nil</span> <span class=\"fn\">h</span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList.foldl\">Std.DHashMap.Internal.AssocList.foldl</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span>)</span> <span class=\"fn\">target</span> <span class=\"fn\"><span class=\"fn\">source</span>[<span class=\"fn\">i</span>]</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L156-L165","name":"Std.DHashMap.Internal.Raw₀.toListModel_foldl_reinsertAux","line":156,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_foldl_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_foldl_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_foldl_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a>\n      <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a>\n          <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">acc</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span>\n          <span class=\"fn\">target</span> <span class=\"fn\">l</span>)</span>.val</span>)</span>.Perm</span>\n  <span class=\"fn\">(<span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">target</span>.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L148-L154","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_foldl_reinsertAux","line":148,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_foldl_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_foldl_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_foldl_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">target</span>.val</span></span> →\n  <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a>\n        <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt;\n          <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">acc</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span>\n        <span class=\"fn\">target</span> <span class=\"fn\">l</span>)</span>.val</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L141-L146","name":"Std.DHashMap.Internal.Raw₀.toListModel_reinsertAux","line":141,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">data</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>)</span>.Perm</span>\n  <span class=\"fn\">(<span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">b</span>⟩</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">data</span>.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L129-L137","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_reinsertAux","line":129,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">data</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">data</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L124-L127","name":"Std.DHashMap.Internal.Raw₀.wfImp_empty","line":124,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_empty\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.empty\">Std.DHashMap.Internal.Raw₀.empty</a> <span class=\"fn\">c</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L120-L122","name":"Std.DHashMap.Internal.Raw₀.toListModel_buckets_empty","line":120,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_buckets_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_buckets_empty\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_buckets_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.empty\">Std.DHashMap.Internal.Raw₀.empty</a> <span class=\"fn\">c</span>)</span>.val</span>.buckets</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L109-L112","name":"Std.DHashMap.Internal.Raw.pairwise_keys_iff_pairwise_keys","line":109,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.pairwise_keys_iff_pairwise_keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.pairwise_keys_iff_pairwise_keys\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">pairwise_keys_iff_pairwise_keys</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> <span class=\"fn\">b</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span> <span class=\"fn\"><span class=\"fn\">m</span>.keys</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> <span class=\"fn\">b</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L105-L107","name":"Std.DHashMap.Internal.Raw.mem_keys_iff_contains_keys","line":105,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.mem_keys_iff_contains_keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.mem_keys_iff_contains_keys\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">mem_keys_iff_contains_keys</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.keys</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>)</span>.contains</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L101-L103","name":"Std.DHashMap.Internal.Raw.contains_keys_eq_contains_keys","line":101,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.contains_keys_eq_contains_keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.contains_keys_eq_contains_keys\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">contains_keys_eq_contains_keys</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.keys</span>.contains</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>)</span>.contains</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L97-L99","name":"Std.DHashMap.Internal.Raw.isEmpty_keys_eq_isEmpty_keys","line":97,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.isEmpty_keys_eq_isEmpty_keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.isEmpty_keys_eq_isEmpty_keys\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">isEmpty_keys_eq_isEmpty_keys</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.keys</span>.isEmpty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>)</span>.isEmpty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L93-L95","name":"Std.DHashMap.Internal.Raw.length_keys_eq_length_keys","line":93,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.length_keys_eq_length_keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.length_keys_eq_length_keys\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">length_keys_eq_length_keys</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.keys</span>.length</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>)</span>.length</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L89-L91","name":"Std.DHashMap.Internal.Raw.keys_perm_keys_toListModel","line":89,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.keys_perm_keys_toListModel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.keys_perm_keys_toListModel\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">keys_perm_keys_toListModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.keys</span>.Perm</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L86-L87","name":"Std.DHashMap.Internal.Raw.toList_perm_toListModel","line":86,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.toList_perm_toListModel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.toList_perm_toListModel\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">toList_perm_toListModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.toList</span>.Perm</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L82-L84","name":"Std.DHashMap.Internal.Raw.fold_cons_key","line":82,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_cons_key","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_cons_key\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">fold_cons_key</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{acc : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Raw.html#Std.DHashMap.Raw.fold\">Std.DHashMap.Raw.fold</a> <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">k</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">acc</span></span>)</span> <span class=\"fn\">acc</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Defs.html#Std.DHashMap.Internal.List.keys\">Std.DHashMap.Internal.List.keys</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">l</span>.buckets</span>)</span>.reverse</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">acc</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L78-L80","name":"Std.DHashMap.Internal.Raw.fold_cons","line":78,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_cons\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">fold_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{acc : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Raw.html#Std.DHashMap.Raw.fold\">Std.DHashMap.Raw.fold</a> <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>) (<span class=\"fn\">k</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">⟨<span class=\"fn\">k</span>, <span class=\"fn\">v</span>⟩</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">acc</span></span>)</span> <span class=\"fn\">acc</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">l</span>.buckets</span>)</span>.reverse</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">acc</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L67-L76","name":"Std.DHashMap.Internal.Raw.fold_cons_apply","line":67,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_cons_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_cons_apply\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">fold_cons_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{γ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{acc : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Raw.html#Std.DHashMap.Raw.fold\">Std.DHashMap.Raw.fold</a> <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">γ</span></span>) (<span class=\"fn\">k</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">acc</span></span>)</span> <span class=\"fn\">acc</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">l</span>.buckets</span>)</span>.reverse</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">acc</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L62-L65","name":"Std.DHashMap.Internal.Raw.fold_eq","line":62,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.fold_eq\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">fold_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{γ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\">γ</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{init : <span class=\"fn\">γ</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Raw.html#Std.DHashMap.Raw.fold\">Std.DHashMap.Raw.fold</a> <span class=\"fn\">f</span> <span class=\"fn\">init</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/Array/Basic.html#Array.foldl\">Array.foldl</a> <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">γ</span>) (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList.foldl\">Std.DHashMap.Internal.AssocList.foldl</a> <span class=\"fn\">f</span> <span class=\"fn\">acc</span> <span class=\"fn\">l</span></span>)</span>\n    <span class=\"fn\">init</span> <span class=\"fn\"><span class=\"fn\">l</span>.buckets</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L57-L60","name":"Std.DHashMap.Internal.Raw.isEmpty_eq_isEmpty","line":57,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.isEmpty_eq_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.isEmpty_eq_isEmpty\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">isEmpty_eq_isEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.isEmpty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>.isEmpty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L53-L55","name":"Std.DHashMap.Internal.Raw.size_eq_length","line":53,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.size_eq_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.size_eq_length\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">size_eq_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.size</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>.length</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L38-L49","name":"Std.DHashMap.Internal.computeSize_eq","line":38,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.computeSize_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.computeSize_eq\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">computeSize_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{buckets : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.computeSize\">Std.DHashMap.Internal.computeSize</a> <span class=\"fn\">buckets</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\">buckets</span>)</span>.length</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Data/DHashMap/Internal/WF.lean#L31-L36","name":"Std.DHashMap.Internal.toListModel_mkArray_nil","line":31,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.toListModel_mkArray_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.toListModel_mkArray_nil\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">toListModel_mkArray_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\">(<a href=\"./Init/Data/Array/Basic.html#Array.mkArray\">mkArray</a> <span class=\"fn\">c</span> <span class=\"fn\">Std.DHashMap.Internal.AssocList.nil</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"}]}