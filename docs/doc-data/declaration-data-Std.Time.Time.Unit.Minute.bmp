{"name":"Std.Time.Time.Unit.Minute","instances":[{"typeNames":["Std.Time.Minute.Ordinal"],"name":"Std.Time.Minute.instOrdinalRepr","className":"Repr"},{"typeNames":["Std.Time.Minute.Ordinal"],"name":"Std.Time.Minute.instOrdinalBEq","className":"BEq"},{"typeNames":["Std.Time.Minute.Ordinal"],"name":"Std.Time.Minute.instOrdinalLE","className":"LE"},{"typeNames":["Std.Time.Minute.Ordinal"],"name":"Std.Time.Minute.instOrdinalLT","className":"LT"},{"typeNames":["Std.Time.Minute.Ordinal"],"name":"Std.Time.Minute.instOfNatOrdinal","className":"OfNat"},{"typeNames":["Std.Time.Minute.Ordinal"],"name":"Std.Time.Minute.instInhabitedOrdinal","className":"Inhabited"},{"typeNames":["LE.le"],"name":"Std.Time.Minute.instDecidableLeOrdinal","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Minute.instDecidableLtOrdinal","className":"Decidable"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetRepr","className":"Repr"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetBEq","className":"BEq"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetInhabited","className":"Inhabited"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetAdd","className":"Add"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetSub","className":"Sub"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetNeg","className":"Neg"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOffsetToString","className":"ToString"},{"typeNames":["Std.Time.Minute.Offset"],"name":"Std.Time.Minute.instOfNatOffset","className":"OfNat"}],"imports":["Std.Internal.Rat","Std.Time.Internal","Std.Time.Time.Unit.Second"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L86-L91","name":"Std.Time.Minute.Offset.ofInt","line":86,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset.ofInt","doc":"Creates an `Offset` from an integer.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L79-L84","name":"Std.Time.Minute.Offset.ofNat","line":79,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset.ofNat","doc":"Creates an `Offset` from a natural number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L69-L74","name":"Std.Time.Minute.Ordinal.toOffset","line":69,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.toOffset","doc":"Converts an `Ordinal` to an `Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L62-L67","name":"Std.Time.Minute.Ordinal.ofFin","line":62,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.ofFin","doc":"Creates an `Ordinal` from a `Fin`, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">60</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L55-L60","name":"Std.Time.Minute.Ordinal.ofNat","line":55,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.ofNat","doc":"Creates an `Ordinal` from a natural number, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">59</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L48-L53","name":"Std.Time.Minute.Ordinal.ofInt","line":48,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.ofInt","doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">59</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L43-L44","name":"Std.Time.Minute.instOfNatOffset","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOfNatOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetToString","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetNeg","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetSub","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetAdd","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetInhabited","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetBEq","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L41-L41","name":"Std.Time.Minute.instOffsetRepr","line":41,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOffsetRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOffsetRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L37-L41","name":"Std.Time.Minute.Offset","line":37,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset","doc":"`Offset` represents a duration offset in minutes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L34-L35","name":"Std.Time.Minute.instDecidableLtOrdinal","line":34,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instDecidableLtOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L31-L32","name":"Std.Time.Minute.instDecidableLeOrdinal","line":31,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instDecidableLeOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L28-L29","name":"Std.Time.Minute.instInhabitedOrdinal","line":28,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instInhabitedOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L25-L26","name":"Std.Time.Minute.instOfNatOrdinal","line":25,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOfNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L23-L23","name":"Std.Time.Minute.instOrdinalLT","line":23,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOrdinalLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L23-L23","name":"Std.Time.Minute.instOrdinalLE","line":23,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOrdinalLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L23-L23","name":"Std.Time.Minute.instOrdinalBEq","line":23,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOrdinalBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L23-L23","name":"Std.Time.Minute.instOrdinalRepr","line":23,"kind":"instance","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.instOrdinalRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">instOrdinalRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Minute.lean#L19-L23","name":"Std.Time.Minute.Ordinal","line":19,"kind":"def","docLink":"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal","doc":"`Ordinal` represents a bounded value for minutes, ranging from 0 to 59. This is useful for representing the minute component of a time.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Minute</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}