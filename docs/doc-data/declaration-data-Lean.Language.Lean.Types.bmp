{"name":"Lean.Language.Lean.Types","instances":[{"typeNames":["Lean.Language.Lean.CommandFinishedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderProcessedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","className":"Lean.Language.ToSnapshotTree"}],"imports":["Lean.Language.Basic","Lean.Elab.Command"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L108-L109","name":"Lean.Language.Lean.InitialSnapshot","line":108,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot","doc":"Initial snapshot of the Lean language processor: a \"header parsed\" snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.InitialSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">InitialSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L103-L106","name":"Lean.Language.Lean.HeaderParsedSnapshot.processedResult","line":103,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult","doc":"Shortcut accessor to the final header state, if successful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">processedResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(snap : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L99-L101","name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","line":99,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L97-L97","name":"Lean.Language.Lean.HeaderParsedSnapshot.cancelTk?","line":97,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.cancelTk?","doc":"Cancellation token for interrupting processing of this run. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.cancelTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">cancelTk?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L94-L94","name":"Lean.Language.Lean.HeaderParsedSnapshot.result?","line":94,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?","doc":"State after successful parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L92-L92","name":"Lean.Language.Lean.HeaderParsedSnapshot.stx","line":92,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx","doc":"Resulting syntax tree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L90-L90","name":"Lean.Language.Lean.HeaderParsedSnapshot.ictx","line":90,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx","doc":"Parser input context supplied by the driver, stored here for incremental parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">ictx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L88-L88","name":"Lean.Language.Lean.HeaderParsedSnapshot.mk","line":88,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ictx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(result? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cancelTk? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L87-L97","name":"Lean.Language.Lean.HeaderParsedSnapshot","line":87,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot","doc":"State after the module header has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L85-L85","name":"Lean.Language.Lean.HeaderParsedState.processedSnap","line":85,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap","doc":"Header processing task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.processedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">processedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L83-L83","name":"Lean.Language.Lean.HeaderParsedState.parserState","line":83,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L81-L81","name":"Lean.Language.Lean.HeaderParsedState.mk","line":81,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(processedSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L80-L85","name":"Lean.Language.Lean.HeaderParsedState","line":80,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState","doc":"State after successfully parsing the module header. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderParsedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L76-L78","name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","line":76,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderProcessedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L74-L74","name":"Lean.Language.Lean.HeaderProcessedSnapshot.result?","line":74,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L72-L72","name":"Lean.Language.Lean.HeaderProcessedSnapshot.mk","line":72,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(result? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L71-L75","name":"Lean.Language.Lean.HeaderProcessedSnapshot","line":71,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot","doc":"State after the module header has been processed including imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L69-L69","name":"Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","line":69,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","doc":"First command task (there is always at least a terminal command). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">firstCmdSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L67-L67","name":"Lean.Language.Lean.HeaderProcessedState.cmdState","line":67,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState","doc":"The resulting initial elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L65-L65","name":"Lean.Language.Lean.HeaderProcessedState.mk","line":65,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cmdState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(firstCmdSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L64-L69","name":"Lean.Language.Lean.HeaderProcessedState","line":64,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.HeaderProcessedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L58-L62","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","line":58,"kind":"opaque","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">Lean.Language.SnapshotTree</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L56-L62","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","line":56,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L55-L55","name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","line":55,"kind":"theorem","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L54-L54","name":"Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","line":54,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","doc":"Next command, unless this is a terminal command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">nextCmdSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L52-L52","name":"Lean.Language.Lean.CommandParsedSnapshot.tacticCache","line":52,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.tacticCache","doc":"Cache for `save`; to be replaced with incrementality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.tacticCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">tacticCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L50-L50","name":"Lean.Language.Lean.CommandParsedSnapshot.reportSnap","line":50,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.reportSnap","doc":"Additional, untyped snapshots used for reporting, not reuse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.reportSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">reportSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">Lean.Language.SnapshotTree</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L48-L48","name":"Lean.Language.Lean.CommandParsedSnapshot.finishedSnap","line":48,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.finishedSnap","doc":"State after processing is finished. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.finishedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">finishedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L46-L46","name":"Lean.Language.Lean.CommandParsedSnapshot.elabSnap","line":46,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap","doc":"Snapshot for incremental reporting and reuse during elaboration, type dependent on specific\nelaborator.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">Lean.Language.DynamicSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L41-L41","name":"Lean.Language.Lean.CommandParsedSnapshot.parserState","line":41,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L39-L39","name":"Lean.Language.Lean.CommandParsedSnapshot.stx","line":39,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx","doc":"Syntax tree of the command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L37-L37","name":"Lean.Language.Lean.CommandParsedSnapshot.mk","line":37,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elabSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">Lean.Language.DynamicSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(finishedSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(reportSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">Lean.Language.SnapshotTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticCache : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextCmdSnap? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L36-L55","name":"Lean.Language.Lean.CommandParsedSnapshot","line":36,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot","doc":"State after a command has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L33-L34","name":"Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","line":33,"kind":"instance","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandFinishedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L32-L32","name":"Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","line":32,"kind":"theorem","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.instNonemptyCommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandFinishedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L31-L31","name":"Lean.Language.Lean.CommandFinishedSnapshot.cmdState","line":31,"kind":"def","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.cmdState","doc":"Resulting elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L29-L29","name":"Lean.Language.Lean.CommandFinishedSnapshot.mk","line":29,"kind":"ctor","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmdState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Language/Lean/Types.lean#L28-L32","name":"Lean.Language.Lean.CommandFinishedSnapshot","line":28,"kind":"structure","docLink":"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot","doc":"Snapshot after elaboration of the entire command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}