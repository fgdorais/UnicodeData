{"name":"Std.Time.Date.Unit.Day","instances":[{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalRepr","className":"Repr"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalBEq","className":"BEq"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalLE","className":"LE"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOrdinalLT","className":"LT"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instOfNatOrdinal","className":"OfNat"},{"typeNames":["LE.le"],"name":"Std.Time.Day.instDecidableLeOrdinal","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Day.instDecidableLtOrdinal","className":"Decidable"},{"typeNames":["Std.Time.Day.Ordinal"],"name":"Std.Time.Day.instInhabitedOrdinal","className":"Inhabited"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetRepr","className":"Repr"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetBEq","className":"BEq"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetInhabited","className":"Inhabited"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetAdd","className":"Add"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetSub","className":"Sub"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetNeg","className":"Neg"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetLE","className":"LE"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetLT","className":"LT"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOffsetToString","className":"ToString"},{"typeNames":["Std.Time.Day.Offset"],"name":"Std.Time.Day.instOfNatOffset","className":"OfNat"},{"typeNames":["LE.le"],"name":"Std.Time.Day.instDecidableLeOffset","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Day.instDecidableLtOffset","className":"Decidable"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instReprOfYear","className":"Repr"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instToStringOfYear","className":"ToString"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instOfNatOfYear","className":"OfNat"},{"typeNames":["Std.Time.Day.Ordinal.OfYear"],"name":"Std.Time.Day.Ordinal.instInhabitedOfYear","className":"Inhabited"}],"imports":["Std.Time.Time"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L211-L216","name":"Std.Time.Day.Offset.ofHours","line":211,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofHours","doc":"Convert `Hour.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hours : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L204-L209","name":"Std.Time.Day.Offset.toHours","line":204,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toHours","doc":"Convert `Day.Offset` into `Hour.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L197-L202","name":"Std.Time.Day.Offset.ofMinutes","line":197,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMinutes","doc":"Convert `Minute.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(minutes : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L190-L195","name":"Std.Time.Day.Offset.toMinutes","line":190,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMinutes","doc":"Convert `Day.Offset` into `Minute.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L183-L188","name":"Std.Time.Day.Offset.ofSeconds","line":183,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofSeconds","doc":"Convert `Second.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(secs : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L176-L181","name":"Std.Time.Day.Offset.toSeconds","line":176,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toSeconds","doc":"Convert `Day.Offset` into `Second.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L169-L174","name":"Std.Time.Day.Offset.ofMilliseconds","line":169,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMilliseconds","doc":"Convert `Millisecond.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ms : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L162-L167","name":"Std.Time.Day.Offset.toMilliseconds","line":162,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMilliseconds","doc":"Convert `Day.Offset` into `Millisecond.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L155-L160","name":"Std.Time.Day.Offset.ofNanoseconds","line":155,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNanoseconds","doc":"Convert `Nanosecond.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ns : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L148-L153","name":"Std.Time.Day.Offset.toNanoseconds","line":148,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toNanoseconds","doc":"Convert `Day.Offset` into `Nanosecond.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L141-L146","name":"Std.Time.Day.Offset.ofInt","line":141,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofInt","doc":"Creates an `Offset` from an integer.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L134-L139","name":"Std.Time.Day.Offset.ofNat","line":134,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNat","doc":"Creates an `Offset` from a natural number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L127-L132","name":"Std.Time.Day.Offset.toOrdinal","line":127,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toOrdinal","doc":"Converts an `Offset` to an `Ordinal`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset.toOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(off : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">off</span>.val</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">off</span>.val</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L116-L120","name":"Std.Time.Day.Ordinal.OfYear.toOffset","line":116,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.toOffset","doc":"Converts an `OfYear` ordinal to a `Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span>.<span class=\"name\">toOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ofYear : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L107-L112","name":"Std.Time.Day.Ordinal.toOffset","line":107,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.toOffset","doc":"Converts an `Ordinal` to an `Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L99-L105","name":"Std.Time.Day.Ordinal.ofFin","line":99,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofFin","doc":"Creates an ordinal from a `Fin` value, ensuring it is within the valid range for days of the month (1 to 31).\nIf the `Fin` value is 0, it is converted to 1.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">32</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L91-L97","name":"Std.Time.Day.Ordinal.ofNat","line":91,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofNat","doc":"Creates an ordinal from a natural number, ensuring the number is within the valid range\nfor days of a month (1 to 31).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span></span>)</span> <a href=\"./Std/Time/Date/Unit/Day.html#_auto._@.Std.Time.Date.Unit.Day._hyg.417\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L86-L89","name":"Std.Time.Day.Ordinal.instInhabitedOfYear","line":86,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instInhabitedOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instInhabitedOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instInhabitedOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L81-L84","name":"Std.Time.Day.Ordinal.instOfNatOfYear","line":81,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOfNatOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instOfNatOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOfNatOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L71-L77","name":"Std.Time.Day.Ordinal.OfYear.ofNat","line":71,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.ofNat","doc":"Creates an ordinal for a specific day within the year, ensuring that the provided day (`data`)\nis within the valid range for the year, which can be 1 to 365 or 366 for leap years.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span>.<span class=\"name\">ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">leap</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> then <span class=\"fn\">366</span> else <span class=\"fn\">365</span></span></span>)</span> <a href=\"./Std/Time/Date/Unit/Day.html#_auto._@.Std.Time.Date.Unit.Day._hyg.267\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L66-L67","name":"Std.Time.Day.Ordinal.instToStringOfYear","line":66,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instToStringOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instToStringOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instToStringOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L63-L64","name":"Std.Time.Day.Ordinal.instReprOfYear","line":63,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instReprOfYear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.instReprOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instReprOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\">leap</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L57-L61","name":"Std.Time.Day.Ordinal.OfYear","line":57,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear","doc":"`OfYear` represents the day ordinal within a year, which can be bounded between 1 and 365 or 366,\ndepending on whether it's a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(leap : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L50-L55","name":"Std.Time.Day.Ordinal.ofInt","line":50,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofInt","doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">31</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L45-L46","name":"Std.Time.Day.instDecidableLtOffset","line":45,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L42-L43","name":"Std.Time.Day.instDecidableLeOffset","line":42,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L40-L40","name":"Std.Time.Day.instOfNatOffset","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetToString","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetLT","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetLE","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetNeg","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetSub","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetAdd","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetInhabited","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetBEq","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L38-L38","name":"Std.Time.Day.instOffsetRepr","line":38,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOffsetRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOffsetRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L33-L38","name":"Std.Time.Day.Offset","line":33,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset","doc":"`Offset` represents an offset in days. It is defined as an `Int` with a base unit of 86400\n(the number of seconds in a day).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L31-L31","name":"Std.Time.Day.instInhabitedOrdinal","line":31,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L28-L29","name":"Std.Time.Day.instDecidableLtOrdinal","line":28,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L25-L26","name":"Std.Time.Day.instDecidableLeOrdinal","line":25,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L22-L23","name":"Std.Time.Day.instOfNatOrdinal","line":22,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalLT","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalLE","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalBEq","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L20-L20","name":"Std.Time.Day.instOrdinalRepr","line":20,"kind":"instance","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.instOrdinalRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">instOrdinalRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Day.lean#L16-L20","name":"Std.Time.Day.Ordinal","line":16,"kind":"def","docLink":"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal","doc":"`Ordinal` represents a bounded value for days, which ranges between 1 and 31.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Day</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}