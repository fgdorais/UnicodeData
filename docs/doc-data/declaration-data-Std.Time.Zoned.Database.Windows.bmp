{"name":"Std.Time.Zoned.Database.Windows","instances":[{"typeNames":["Std.Time.Database.WindowsDb"],"name":"Std.Time.Database.WindowsDb.inst","className":"Std.Time.Database"}],"imports":["Std.Time.DateTime","Std.Time.Zoned.TimeZone","Std.Time.Zoned.ZoneRules","Std.Time.Zoned.Database.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L87-L89","name":"Std.Time.Database.WindowsDb.inst","line":87,"kind":"instance","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.inst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.inst\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span>.<span class=\"name\">inst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/Database/Basic.html#Std.Time.Database\">Std.Time.Database</a> <a href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\">Std.Time.Database.WindowsDb</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L81-L85","name":"Std.Time.Database.WindowsDb.default","line":81,"kind":"def","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.default","doc":"Returns a default `WindowsDb` instance.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.default\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\">Std.Time.Database.WindowsDb</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L76-L76","name":"Std.Time.Database.WindowsDb.mk","line":76,"kind":"ctor","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\">Std.Time.Database.WindowsDb</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L73-L76","name":"Std.Time.Database.WindowsDb","line":73,"kind":"structure","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb","doc":"Represents a Time Zone Database that we get from ICU available on Windows SDK.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.WindowsDb\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">WindowsDb</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L61-L69","name":"Std.Time.Database.Windows.getZoneRules.toLocalTime","line":61,"kind":"def","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getZoneRules.toLocalTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getZoneRules.toLocalTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getZoneRules</span>.<span class=\"name\">toLocalTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(res : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.LocalTimeType\">Std.Time.TimeZone.LocalTimeType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L32-L69","name":"Std.Time.Database.Windows.getZoneRules","line":32,"kind":"def","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getZoneRules","doc":"Retrieves the timezone rules, including all transitions, for a given timezone identifier.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getZoneRules\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getZoneRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Std/Time/Zoned/ZoneRules.html#Std.Time.TimeZone.ZoneRules\">Std.Time.TimeZone.ZoneRules</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L26-L30","name":"Std.Time.Database.Windows.getLocalTimeZoneIdentifierAt","line":26,"kind":"opaque","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getLocalTimeZoneIdentifierAt","doc":"Fetches the timezone at a timestamp.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getLocalTimeZoneIdentifierAt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getLocalTimeZoneIdentifierAt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/Database/Windows.lean#L20-L24","name":"Std.Time.Database.Windows.getNextTransition","line":20,"kind":"opaque","docLink":"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getNextTransition","doc":"Fetches the next timezone transition for a given timezone identifier and timestamp.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/Database/Windows.html#Std.Time.Database.Windows.getNextTransition\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Database</span>.<span class=\"name\">Windows</span>.<span class=\"name\">getNextTransition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span>)</span></span></span></span></span></div></div>"}]}