{"name":"Init.Data.Nat.Linear","instances":[{"typeNames":["Nat.Linear.Expr"],"name":"Nat.Linear.instInhabitedExpr","className":"Inhabited"},{"typeNames":["Nat.Linear.PolyCnstr"],"name":"Nat.Linear.instBEqPolyCnstr","className":"BEq"}],"imports":["Init.ByCases","Init.Data.Prod","Init.Data.RArray"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L721-L723","name":"Nat.elimOffset","line":721,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.elimOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.elimOffset\"><span class=\"name\">Nat</span>.<span class=\"name\">elimOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L714-L717","name":"Nat.Linear.Expr.eq_of_toNormPoly_eq","line":714,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e' : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.toNormPoly</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">e'</span>.toPoly</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L709-L712","name":"Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","line":709,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L704-L707","name":"Nat.Linear.Poly.denote_toExpr","line":704,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">p</span>.toExpr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L697-L700","name":"Nat.Linear.Poly.denote_toExpr_go","line":697,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_toExpr_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go\">Nat.Linear.Poly.toExpr.go</a> <span class=\"fn\">e</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L689-L693","name":"Nat.Linear.denote_monomialToExpr","line":689,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.denote_monomialToExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.denote_monomialToExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">denote_monomialToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr\">Nat.Linear.monomialToExpr</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Nat.Linear.Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L685-L687","name":"Nat.Linear.Certificate.of_combine_isUnsat","line":685,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine_isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">of_combine_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.combine</span>.isUnsat</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\">Nat.Linear.Certificate.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">cs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L676-L683","name":"Nat.Linear.Certificate.of_combine","line":676,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">of_combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">cs</span>.combine</span></span> → <a href=\"./Init/Prelude.html#False\">False</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\">Nat.Linear.Certificate.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">cs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L665-L674","name":"Nat.Linear.Certificate.of_combineHyps","line":665,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combineHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combineHyps\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">of_combineHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps\">Nat.Linear.Certificate.combineHyps</a> <span class=\"fn\">c</span> <span class=\"fn\">cs</span>)</span></span> → <a href=\"./Init/Prelude.html#False\">False</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\">Nat.Linear.Certificate.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">cs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L660-L663","name":"Nat.Linear.ExprCnstr.eq_true_of_isValid","line":660,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span>.isValid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L655-L658","name":"Nat.Linear.ExprCnstr.eq_false_of_isUnsat","line":655,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span>.isUnsat</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L646-L653","name":"Nat.Linear.PolyCnstr.eq_true_of_isValid","line":646,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.isValid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L635-L644","name":"Nat.Linear.PolyCnstr.eq_false_of_isUnsat","line":635,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.isUnsat</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L626-L633","name":"Nat.Linear.Poly.of_isNonZero","line":626,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.isNonZero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L620-L624","name":"Nat.Linear.Poly.of_isZero","line":620,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.isZero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L613-L618","name":"Nat.Linear.Poly.isNum?_eq_some","line":613,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?_eq_some\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNum?_eq_some</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.isNum?</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">k</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L601-L609","name":"Nat.Linear.PolyCnstr.denote_combine","line":601,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote_combine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c₁</span>.combine</span> <span class=\"fn\">c₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L585-L595","name":"Nat.Linear.PolyCnstr.denote_mul","line":585,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul\">Nat.Linear.PolyCnstr.mul</a> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L575-L578","name":"Nat.Linear.Poly.mul.go_denote","line":575,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go_denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go_denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul</span>.<span class=\"name\">go_denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go\">Nat.Linear.Poly.mul.go</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L566-L571","name":"Nat.Linear.ExprCnstr.denote_toNormPoly","line":566,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L557-L562","name":"Nat.Linear.ExprCnstr.denote_toPoly","line":557,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L554-L555","name":"Nat.Linear.ExprCnstr.toPoly_norm_eq","line":554,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly_norm_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span>.norm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L551-L552","name":"Nat.Linear.Expr.of_cancel_lt","line":551,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.inc</span>.toNormPoly</span>.cancel</span> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.inc</span>.toPoly</span>, <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L545-L549","name":"Nat.Linear.Expr.of_cancel_le","line":545,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.toNormPoly</span>.cancel</span> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span>, <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L539-L543","name":"Nat.Linear.Expr.of_cancel_eq","line":539,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.toNormPoly</span>.cancel</span> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span>, <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L533-L537","name":"Nat.Linear.Expr.eq_of_toNormPoly","line":533,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.toNormPoly</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L528-L529","name":"Nat.Linear.Expr.denote_toPoly","line":528,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">e</span>.toPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L511-L526","name":"Nat.Linear.Expr.denote_toPoly_go","line":511,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go\">Nat.Linear.Expr.toPoly.go</a> <span class=\"fn\">k</span> <span class=\"fn\">e</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L506-L507","name":"Nat.Linear.Poly.denote_combine","line":506,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.combine</span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L496-L504","name":"Nat.Linear.Poly.denote_combineAux","line":496,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combineAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combineAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_combineAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux\">Nat.Linear.Poly.combineAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L491-L492","name":"Nat.Linear.Poly.denote_le_cancel_eq","line":491,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L486-L489","name":"Nat.Linear.Poly.of_denote_le_cancel","line":486,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L483-L484","name":"Nat.Linear.Poly.denote_le_cancel","line":483,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L450-L481","name":"Nat.Linear.Poly.of_denote_le_cancelAux","line":450,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L416-L448","name":"Nat.Linear.Poly.denote_le_cancelAux","line":416,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L411-L412","name":"Nat.Linear.Poly.denote_eq_cancel_eq","line":411,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L406-L409","name":"Nat.Linear.Poly.of_denote_eq_cancel","line":406,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L403-L404","name":"Nat.Linear.Poly.denote_eq_cancel","line":403,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L372-L401","name":"Nat.Linear.Poly.of_denote_eq_cancelAux","line":372,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L338-L370","name":"Nat.Linear.Poly.denote_eq_cancelAux","line":338,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L323-L329","name":"Nat.Linear.Poly.denote_mul","line":323,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul\">Nat.Linear.Poly.mul</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L318-L319","name":"Nat.Linear.Poly.denote_reverse","line":318,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_reverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L311-L314","name":"Nat.Linear.Poly.denote_reverseAux","line":311,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverseAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverseAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_reverseAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.reverseAux\">List.reverseAux</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L304-L307","name":"Nat.Linear.Poly.denote_cons","line":304,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_cons</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">k</span>, <span class=\"fn\">v</span>)</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Nat.Linear.Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L297-L300","name":"Nat.Linear.Poly.denote_append","line":297,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L292-L293","name":"Nat.Linear.Poly.denote_sort","line":292,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_sort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">m</span>.norm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L285-L288","name":"Nat.Linear.Poly.denote_norm_go","line":285,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_norm_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_norm_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_norm_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go\">Nat.Linear.Poly.norm.go</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L270-L281","name":"Nat.Linear.Poly.denote_insert","line":270,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insert\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert\">Nat.Linear.Poly.insert</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Nat.Linear.Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L263-L264","name":"Nat.Linear.PolyCnstr.toExpr","line":263,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L258-L261","name":"Nat.Linear.Poly.toExpr.go","line":258,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L253-L261","name":"Nat.Linear.Poly.toExpr","line":253,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L245-L251","name":"Nat.Linear.monomialToExpr","line":245,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">monomialToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L240-L243","name":"Nat.Linear.Certificate.denote","line":240,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L235-L238","name":"Nat.Linear.Certificate.combine","line":235,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L230-L233","name":"Nat.Linear.Certificate.combineHyps","line":230,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">combineHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L228-L228","name":"Nat.Linear.Certificate","line":228,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L224-L226","name":"Nat.Linear.ExprCnstr.toNormPoly","line":224,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L221-L222","name":"Nat.Linear.ExprCnstr.toPoly","line":221,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L215-L219","name":"Nat.Linear.ExprCnstr.denote","line":215,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L209-L213","name":"Nat.Linear.PolyCnstr.isValid","line":209,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L203-L207","name":"Nat.Linear.PolyCnstr.isUnsat","line":203,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L199-L201","name":"Nat.Linear.PolyCnstr.norm","line":199,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L193-L197","name":"Nat.Linear.PolyCnstr.denote","line":193,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L191-L191","name":"Nat.Linear.ExprCnstr.rhs","line":191,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L190-L190","name":"Nat.Linear.ExprCnstr.lhs","line":190,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L189-L189","name":"Nat.Linear.ExprCnstr.eq","line":189,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L188-L188","name":"Nat.Linear.ExprCnstr.mk","line":188,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eq : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L188-L191","name":"Nat.Linear.ExprCnstr","line":188,"kind":"structure","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L184-L186","name":"Nat.Linear.PolyCnstr.combine","line":184,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L181-L182","name":"Nat.Linear.PolyCnstr.mul","line":181,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L168-L179","name":"Nat.Linear.instLawfulBEqPolyCnstr","line":168,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instLawfulBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L165-L165","name":"Nat.Linear.instBEqPolyCnstr","line":165,"kind":"instance","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L164-L164","name":"Nat.Linear.PolyCnstr.rhs","line":164,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L163-L163","name":"Nat.Linear.PolyCnstr.lhs","line":163,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L162-L162","name":"Nat.Linear.PolyCnstr.eq","line":162,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L161-L161","name":"Nat.Linear.PolyCnstr.mk","line":161,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eq : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L161-L165","name":"Nat.Linear.PolyCnstr","line":161,"kind":"structure","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L158-L159","name":"Nat.Linear.Expr.inc","line":158,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">inc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L155-L156","name":"Nat.Linear.Expr.toNormPoly","line":155,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L148-L153","name":"Nat.Linear.Expr.toPoly.go","line":148,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(coeff : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L143-L153","name":"Nat.Linear.Expr.toPoly","line":143,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L140-L141","name":"Nat.Linear.Poly.combine","line":140,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L125-L138","name":"Nat.Linear.Poly.combineAux","line":125,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combineAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L123-L123","name":"Nat.Linear.Poly.denote_le","line":123,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mp : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L121-L121","name":"Nat.Linear.Poly.denote_eq","line":121,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mp : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L116-L119","name":"Nat.Linear.Poly.isNonZero","line":116,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L111-L114","name":"Nat.Linear.Poly.isZero","line":111,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L105-L109","name":"Nat.Linear.Poly.isNum?","line":105,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNum?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L102-L103","name":"Nat.Linear.Poly.cancel","line":102,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L100-L100","name":"Nat.Linear.hugeFuel","line":100,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">hugeFuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L81-L98","name":"Nat.Linear.Poly.cancelAux","line":81,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₁ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L77-L79","name":"Nat.Linear.Poly.mul.go","line":77,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L69-L79","name":"Nat.Linear.Poly.mul","line":69,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L64-L67","name":"Nat.Linear.Poly.norm.go","line":64,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L62-L67","name":"Nat.Linear.Poly.norm","line":62,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L51-L60","name":"Nat.Linear.Poly.insert","line":51,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L46-L49","name":"Nat.Linear.Poly.denote","line":46,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L44-L44","name":"Nat.Linear.Poly","line":44,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L37-L42","name":"Nat.Linear.Expr.denote","line":37,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L35-L35","name":"Nat.Linear.instInhabitedExpr","line":35,"kind":"instance","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L34-L34","name":"Nat.Linear.Expr.mulR","line":34,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulR</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L33-L33","name":"Nat.Linear.Expr.mulL","line":33,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulL</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L32-L32","name":"Nat.Linear.Expr.add","line":32,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L31-L31","name":"Nat.Linear.Expr.var","line":31,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L30-L30","name":"Nat.Linear.Expr.num","line":30,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L29-L35","name":"Nat.Linear.Expr","line":29,"kind":"inductive","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L26-L27","name":"Nat.Linear.Var.denote","line":26,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L21-L24","name":"Nat.Linear.fixedVar","line":21,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar","doc":"When encoding polynomials. We use `fixedVar` for encoding numerals.\nThe denotation of `fixedVar` is always `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">fixedVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L19-L19","name":"Nat.Linear.Context","line":19,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/Nat/Linear.lean#L17-L17","name":"Nat.Linear.Var","line":17,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}