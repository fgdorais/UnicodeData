{"name":"Std.Time.Date.PlainDate","instances":[{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instReprPlainDate","className":"Repr"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instInhabitedPlainDate","className":"Inhabited"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.instBEqPlainDate","className":"BEq"},{"typeNames":["Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instInhabited","className":"Inhabited"},{"typeNames":["Std.Time.PlainDate","Std.Time.Day.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHAddOffset","className":"HAdd"},{"typeNames":["Std.Time.PlainDate","Std.Time.Day.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHSubOffset","className":"HSub"},{"typeNames":["Std.Time.PlainDate","Std.Time.Week.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHAddOffset_1","className":"HAdd"},{"typeNames":["Std.Time.PlainDate","Std.Time.Week.Offset","Std.Time.PlainDate"],"name":"Std.Time.PlainDate.instHSubOffset_1","className":"HSub"}],"imports":["Std.Time.Internal","Std.Time.Date.Basic","Std.Internal.Rat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L349-L350","name":"Std.Time.PlainDate.instHSubOffset_1","line":349,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L346-L347","name":"Std.Time.PlainDate.instHAddOffset_1","line":346,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L343-L344","name":"Std.Time.PlainDate.instHSubOffset","line":343,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L340-L341","name":"Std.Time.PlainDate.instHAddOffset","line":340,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L319-L338","name":"Std.Time.PlainDate.weekOfYear","line":319,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfYear","doc":"Calculates the week of the year starting Monday for a given year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L300-L317","name":"Std.Time.PlainDate.withWeekday","line":300,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withWeekday","doc":"Sets the date to the specified `desiredWeekday`. If the `desiredWeekday` is the same as the current weekday,\nthe original `date` is returned without modification. If the `desiredWeekday` is in the future, the\nfunction adjusts the date forward to the next occurrence of that weekday.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(desiredWeekday : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L290-L298","name":"Std.Time.PlainDate.alignedWeekOfMonth","line":290,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.alignedWeekOfMonth","doc":"Determines the week of the month for the given `PlainDate`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Std.Time.Week.Ordinal.OfMonth</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L282-L288","name":"Std.Time.PlainDate.weekday","line":282,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekday","doc":"Calculates the `Weekday` of a given `PlainDate` using Zeller's Congruence for the Gregorian calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L274-L280","name":"Std.Time.PlainDate.withMonthRollOver","line":274,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthRollOver","doc":"Creates a new `PlainDate` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L266-L272","name":"Std.Time.PlainDate.withMonthClip","line":266,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthClip","doc":"Creates a new `PlainDate` by adjusting the month to the given `month` value.\nThe day remains unchanged, and any invalid days for the new month will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L258-L264","name":"Std.Time.PlainDate.withDaysRollOver","line":258,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysRollOver","doc":"Creates a new `PlainDate` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L250-L256","name":"Std.Time.PlainDate.withDaysClip","line":250,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysClip","doc":"Creates a new `PlainDate` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L243-L248","name":"Std.Time.PlainDate.subYearsClip","line":243,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsClip","doc":"Subtracts `Year.Offset` from a `PlainDate`, clipping the day to the last valid day of the month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L236-L241","name":"Std.Time.PlainDate.addYearsClip","line":236,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsClip","doc":"Adds `Year.Offset` to a `PlainDate`, clipping the day to the last valid day of the month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L229-L234","name":"Std.Time.PlainDate.subYearsRollOver","line":229,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsRollOver","doc":"Subtracts `Year.Offset` from a `PlainDate`, rolling over excess days to the next month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L222-L227","name":"Std.Time.PlainDate.addYearsRollOver","line":222,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsRollOver","doc":"Adds `Year.Offset` to a `PlainDate`, rolling over excess days to the next month, or next year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L215-L220","name":"Std.Time.PlainDate.subMonthsRollOver","line":215,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsRollOver","doc":"Subtracts `Month.Offset` from a `PlainDate`, rolling over excess days as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L208-L213","name":"Std.Time.PlainDate.addMonthsRollOver","line":208,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsRollOver","doc":"Adds a given number of months to a `PlainDate`, rolling over any excess days into the following month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L200-L206","name":"Std.Time.PlainDate.withYearRollOver","line":200,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearRollOver","doc":"Creates a new `PlainDate` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L192-L198","name":"Std.Time.PlainDate.withYearClip","line":192,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearClip","doc":"Creates a new `PlainDate` by adjusting the year to the given `year` value. The month and day remain unchanged,\nand any invalid days for the new year will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L186-L190","name":"Std.Time.PlainDate.rollOver","line":186,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.rollOver","doc":"Creates a `PlainDate` by rolling over the extra days to the next month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.rollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">rollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(day : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L179-L184","name":"Std.Time.PlainDate.subMonthsClip","line":179,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsClip","doc":"Subtracts `Month.Offset` from a `PlainDate`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L169-L177","name":"Std.Time.PlainDate.addMonthsClip","line":169,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsClip","doc":"Adds a given number of months to a `PlainDate`, clipping the day to the last valid day of the month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L162-L167","name":"Std.Time.PlainDate.subWeeks","line":162,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subWeeks","doc":"Subtracts a given number of weeks from a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L153-L160","name":"Std.Time.PlainDate.addWeeks","line":153,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addWeeks","doc":"Adds a given number of weeks to a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L146-L151","name":"Std.Time.PlainDate.subDays","line":146,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subDays","doc":"Subtracts a given number of days from a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">subDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L138-L144","name":"Std.Time.PlainDate.addDays","line":138,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addDays","doc":"Adds a given number of days to a `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">addDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L124-L136","name":"Std.Time.PlainDate.toDaysSinceUNIXEpoch","line":124,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.toDaysSinceUNIXEpoch","doc":"Converts a `PlainDate` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L117-L122","name":"Std.Time.PlainDate.inLeapYear","line":117,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.inLeapYear","doc":"Checks if the `PlainDate` is in a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L110-L115","name":"Std.Time.PlainDate.era","line":110,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.era","doc":"Determines the era of the given `PlainDate` based on its year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L104-L108","name":"Std.Time.PlainDate.dayOfYear","line":104,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.dayOfYear","doc":"Transforms a `PlainDate` into a `Day.Ordinal.OfYear`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.year</span>.isLeap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L98-L102","name":"Std.Time.PlainDate.quarter","line":98,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.quarter","doc":"Determines the quarter of the year for the given `PlainDate`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">quarter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L92-L96","name":"Std.Time.PlainDate.weekOfMonth","line":92,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfMonth","doc":"Returns the unaligned week of the month for a `PlainDate` (day divided by 7, plus 1).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L76-L90","name":"Std.Time.PlainDate.ofDaysSinceUNIXEpoch","line":76,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofDaysSinceUNIXEpoch","doc":"Creates a `PlainDate` from the number of days since the UNIX epoch (January 1st, 1970).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(day : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L68-L74","name":"Std.Time.PlainDate.ofYearOrdinal","line":68,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearOrdinal","doc":"Creates a `PlainDate` from a year and a day ordinal within that year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearOrdinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\">year</span>.isLeap</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L59-L66","name":"Std.Time.PlainDate.ofYearMonthDay?","line":59,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDay?","doc":"Creates a new `PlainDate` from year, month, and day components.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDay?\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearMonthDay?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(day : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L56-L57","name":"Std.Time.PlainDate.instInhabited","line":56,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.instInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L47-L54","name":"Std.Time.PlainDate.ofYearMonthDayClip","line":47,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDayClip","doc":"Creates a `PlainDate` by clipping the day to ensure validity. This function forces the date to be\nvalid by adjusting the day to fit within the valid range to fit the given month and year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.ofYearMonthDayClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">ofYearMonthDayClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(day : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L42-L43","name":"Std.Time.instBEqPlainDate","line":42,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instBEqPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instBEqPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instBEqPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L39-L40","name":"Std.Time.instInhabitedPlainDate","line":39,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instInhabitedPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instInhabitedPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L37-L37","name":"Std.Time.instReprPlainDate","line":37,"kind":"instance","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.instReprPlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L36-L36","name":"Std.Time.PlainDate.valid","line":36,"kind":"theorem","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.valid","doc":"Validates the date by ensuring that the year, month, and day form a correct and valid date. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.valid\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.year</span>.Valid</span> <span class=\"fn\"><span class=\"fn\">self</span>.month</span> <span class=\"fn\"><span class=\"fn\">self</span>.day</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L33-L33","name":"Std.Time.PlainDate.day","line":33,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day","doc":"The day component of the date. It is represented as an `Ordinal` type from `Day`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">day</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L30-L30","name":"Std.Time.PlainDate.month","line":30,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month","doc":"The month component of the date. It is represented as an `Ordinal` type from `Month`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">month</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L27-L27","name":"Std.Time.PlainDate.year","line":27,"kind":"def","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year","doc":"The year component of the date. It is represented as an `Offset` type from `Year`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">year</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L24-L24","name":"Std.Time.PlainDate.mk","line":24,"kind":"ctor","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(day : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(valid : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">year</span>.Valid</span> <span class=\"fn\">month</span> <span class=\"fn\">day</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/PlainDate.lean#L20-L37","name":"Std.Time.PlainDate","line":20,"kind":"structure","docLink":"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate","doc":"`PlainDate` represents a date in the Year-Month-Day (YMD) format. It encapsulates the year, month,\nand day components, with validation to ensure the date is valid.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}