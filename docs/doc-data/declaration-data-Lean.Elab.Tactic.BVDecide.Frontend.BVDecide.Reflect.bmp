{"name":"Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.Reflect","instances":[{"typeNames":["Std.Tactic.BVDecide.BVBinOp"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinOp","className":"Lean.ToExpr"},{"typeNames":["Std.Tactic.BVDecide.BVUnOp"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVUnOp","className":"Lean.ToExpr"},{"typeNames":["Std.Tactic.BVDecide.BVExpr"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr","className":"Lean.ToExpr"},{"typeNames":["Std.Tactic.BVDecide.BVBinPred"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinPred","className":"Lean.ToExpr"},{"typeNames":["Std.Tactic.BVDecide.Gate"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprGate","className":"Lean.ToExpr"},{"typeNames":["Std.Tactic.BVDecide.BVPred"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred","className":"Lean.ToExpr"},{"typeNames":["Std.Tactic.BVDecide.BoolExpr"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr","className":"Lean.ToExpr"}],"imports":["Std.Data.HashMap","Std.Tactic.BVDecide.Bitblast.BVExpr.Basic","Lean.Meta.AppBuilder","Lean.ToExpr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L289-L293","name":"Lean.Elab.Tactic.BVDecide.Frontend.LemmaM.addLemma","line":289,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM.addLemma","doc":"Add another top level lemma.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM.addLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LemmaM</span>.<span class=\"name\">addLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lemma : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L285-L287","name":"Lean.Elab.Tactic.BVDecide.Frontend.LemmaM.run","line":285,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LemmaM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(state : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaState</a> <span class=\"fn\">{ <span class=\"fn\">lemmas</span> := <span class=\"fn\">#[]</span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L277-L281","name":"Lean.Elab.Tactic.BVDecide.Frontend.LemmaM","line":277,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM","doc":"The lemma reflection monad. It extends the usual reflection monad `M` by adding the ability to\nadd additional top level lemmas on the fly.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LemmaM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L275-L275","name":"Lean.Elab.Tactic.BVDecide.Frontend.LemmaState.lemmas","line":275,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState.lemmas","doc":"The list of top level lemmas that got created on the fly during reflection.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState.lemmas\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LemmaState</span>.<span class=\"name\">lemmas</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L271-L271","name":"Lean.Elab.Tactic.BVDecide.Frontend.LemmaState.mk","line":271,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LemmaState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lemmas : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L268-L275","name":"Lean.Elab.Tactic.BVDecide.Frontend.LemmaState","line":268,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState","doc":"The state of the lemma reflection monad.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LemmaState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L258-L264","name":"Lean.Elab.Tactic.BVDecide.Frontend.M.lookup.updateAtomsAssignment","line":258,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.lookup.updateAtomsAssignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.lookup.updateAtomsAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">M</span>.<span class=\"name\">lookup</span>.<span class=\"name\">updateAtomsAssignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L241-L264","name":"Lean.Elab.Tactic.BVDecide.Frontend.M.lookup","line":241,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.lookup","doc":"Look up an expression in the atoms, recording it if it has not previously appeared.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.lookup\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">M</span>.<span class=\"name\">lookup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(width : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(synthetic : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L235-L239","name":"Lean.Elab.Tactic.BVDecide.Frontend.M.atomsAssignment","line":235,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.atomsAssignment","doc":"Retrieve a `BitVec.Assignment` representing the atoms we found so far.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.atomsAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">M</span>.<span class=\"name\">atomsAssignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L228-L233","name":"Lean.Elab.Tactic.BVDecide.Frontend.M.atoms","line":228,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.atoms","doc":"Retrieve the atoms as pairs of their width and expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.atoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">M</span>.<span class=\"name\">atoms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L222-L226","name":"Lean.Elab.Tactic.BVDecide.Frontend.M.run","line":222,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.run","doc":"Run a reflection computation as a `MetaM` one.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">M</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L217-L217","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.expr","line":217,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.expr","doc":"A cache for `toExpr bvExpr`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L213-L213","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.satAtAtoms","line":213,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.satAtAtoms","doc":"A proof that `bvExpr.eval atomsAssignment = true`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.satAtAtoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">satAtAtoms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L209-L209","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.bvExpr","line":209,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.bvExpr","doc":"The reified expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.bvExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">bvExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">Std.Tactic.BVDecide.BVLogicalExpr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L205-L205","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.mk","line":205,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(bvExpr : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">Std.Tactic.BVDecide.BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(satAtAtoms : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L202-L217","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical","line":202,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical","doc":"A reified version of an `Expr` representing a `BVLogicalExpr` that we know to be true.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L200-L200","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.expr","line":200,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.expr","doc":"A cache for `toExpr bvExpr`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVLogical</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L196-L196","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.evalsAtAtoms","line":196,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.evalsAtAtoms","doc":"A proof that `bvExpr.eval atomsAssignment = originalBVLogicalExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.evalsAtAtoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVLogical</span>.<span class=\"name\">evalsAtAtoms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L192-L192","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.bvExpr","line":192,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.bvExpr","doc":"The reified expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.bvExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVLogical</span>.<span class=\"name\">bvExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">Std.Tactic.BVDecide.BVLogicalExpr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L188-L188","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.mk","line":188,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVLogical</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(bvExpr : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVLogicalExpr\">Std.Tactic.BVDecide.BVLogicalExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(evalsAtAtoms : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L185-L200","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical","line":185,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical","doc":"A reified version of an `Expr` representing a `BVLogicalExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVLogical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L183-L183","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.expr","line":183,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.expr","doc":"A cache for `toExpr bvPred`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVPred</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L179-L179","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.evalsAtAtoms","line":179,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.evalsAtAtoms","doc":"A proof that `bvPred.eval atomsAssignment = originalBVPredExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.evalsAtAtoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVPred</span>.<span class=\"name\">evalsAtAtoms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L175-L175","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.bvPred","line":175,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.bvPred","doc":"The reified expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.bvPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVPred</span>.<span class=\"name\">bvPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVPred\">Std.Tactic.BVDecide.BVPred</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L171-L171","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.mk","line":171,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVPred</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(bvPred : <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVPred\">Std.Tactic.BVDecide.BVPred</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(evalsAtAtoms : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L168-L183","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred","line":168,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred","doc":"A reified version of an `Expr` representing a `BVPred`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVPred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L166-L166","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.expr","line":166,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.expr","doc":"A cache for `toExpr bvExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVExpr</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L162-L162","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.evalsAtAtoms","line":162,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.evalsAtAtoms","doc":"A proof that `bvExpr.eval atomsAssignment = originalBVExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.evalsAtAtoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVExpr</span>.<span class=\"name\">evalsAtAtoms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L158-L158","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.bvExpr","line":158,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.bvExpr","doc":"The reified expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.bvExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVExpr</span>.<span class=\"name\">bvExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">Std.Tactic.BVDecide.BVExpr</a> <span class=\"fn\"><span class=\"fn\">self</span>.width</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L154-L154","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.width","line":154,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.width","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.width\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVExpr</span>.<span class=\"name\">width</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L153-L153","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.mk","line":153,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(width : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bvExpr : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">Std.Tactic.BVDecide.BVExpr</a> <span class=\"fn\">width</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(evalsAtAtoms : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L150-L166","name":"Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr","line":150,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr","doc":"A reified version of an `Expr` representing a `BVExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">ReifiedBVExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L145-L148","name":"Lean.Elab.Tactic.BVDecide.Frontend.M","line":145,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M","doc":"The reflection monad, used to track `BitVec` variables that we see as we traverse the context.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L143-L143","name":"Lean.Elab.Tactic.BVDecide.Frontend.State.atomsAssignmentCache","line":143,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State.atomsAssignmentCache","doc":"A cache for `atomsAssignment`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State.atomsAssignmentCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">atomsAssignmentCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State\">Lean.Elab.Tactic.BVDecide.Frontend.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L139-L139","name":"Lean.Elab.Tactic.BVDecide.Frontend.State.atoms","line":139,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State.atoms","doc":"The atoms encountered so far. Saved as a map from `BitVec` expressions to a (width, atomNumber)\npair.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State.atoms\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">atoms</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State\">Lean.Elab.Tactic.BVDecide.Frontend.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\">Lean.Elab.Tactic.BVDecide.Frontend.Atom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L134-L134","name":"Lean.Elab.Tactic.BVDecide.Frontend.State.mk","line":134,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(atoms : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\">Lean.Elab.Tactic.BVDecide.Frontend.Atom</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(atomsAssignmentCache : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State\">Lean.Elab.Tactic.BVDecide.Frontend.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L131-L143","name":"Lean.Elab.Tactic.BVDecide.Frontend.State","line":131,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State","doc":"The state of the reflection monad\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L129-L129","name":"Lean.Elab.Tactic.BVDecide.Frontend.Atom.synthetic","line":129,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.synthetic","doc":"Whether the atom is synthetic. The effect of this is that values for this atom are not considered\nfor the counter example deriviation. This is for example useful when we introduce an atom over\nan expression, together with additional lemmas that fully describe the behavior of the atom.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.synthetic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Atom</span>.<span class=\"name\">synthetic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\">Lean.Elab.Tactic.BVDecide.Frontend.Atom</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L123-L123","name":"Lean.Elab.Tactic.BVDecide.Frontend.Atom.atomNumber","line":123,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.atomNumber","doc":"A unique numeric identifier for the atom.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.atomNumber\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Atom</span>.<span class=\"name\">atomNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\">Lean.Elab.Tactic.BVDecide.Frontend.Atom</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L119-L119","name":"Lean.Elab.Tactic.BVDecide.Frontend.Atom.width","line":119,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.width","doc":"The width of the `BitVec` that is being abstracted.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.width\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Atom</span>.<span class=\"name\">width</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\">Lean.Elab.Tactic.BVDecide.Frontend.Atom</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L115-L115","name":"Lean.Elab.Tactic.BVDecide.Frontend.Atom.mk","line":115,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Atom</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(width : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(atomNumber : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(synthetic : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\">Lean.Elab.Tactic.BVDecide.Frontend.Atom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L112-L129","name":"Lean.Elab.Tactic.BVDecide.Frontend.Atom","line":112,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom","doc":"A `BitVec` atom.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.Atom\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Atom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L102-L107","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr.go","line":102,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBoolExpr</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BoolExpr/Basic.html#Std.Tactic.BVDecide.BoolExpr\">Std.Tactic.BVDecide.BoolExpr</a> <span class=\"fn\">α</span></span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L98-L107","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr","line":98,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBoolExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBoolExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BoolExpr/Basic.html#Std.Tactic.BVDecide.BoolExpr\">Std.Tactic.BVDecide.BoolExpr</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L91-L95","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred.go","line":91,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVPred</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVPred\">Std.Tactic.BVDecide.BVPred</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L87-L95","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred","line":87,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVPred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVPred\">Std.Tactic.BVDecide.BVPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L78-L85","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprGate","line":78,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprGate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprGate\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprGate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BoolExpr/Basic.html#Std.Tactic.BVDecide.Gate\">Std.Tactic.BVDecide.Gate</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L71-L76","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinPred","line":71,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinPred\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVBinPred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBinPred\">Std.Tactic.BVDecide.BVBinPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L49-L69","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr.go","line":49,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVExpr</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">Std.Tactic.BVDecide.BVExpr</a> <span class=\"fn\">w</span></span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L45-L69","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr","line":45,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVExpr\">Std.Tactic.BVDecide.BVExpr</a> <span class=\"fn\">w</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L34-L43","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVUnOp","line":34,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVUnOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVUnOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVUnOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVUnOp\">Std.Tactic.BVDecide.BVUnOp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.lean#L22-L32","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinOp","line":22,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprBVBinOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprBVBinOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Std/Tactic/BVDecide/Bitblast/BVExpr/Basic.html#Std.Tactic.BVDecide.BVBinOp\">Std.Tactic.BVDecide.BVBinOp</a></span></div></div>"}]}