{"name":"Std.Time.Date.Unit.Weekday","instances":[{"typeNames":["Std.Time.Weekday"],"name":"Std.Time.instReprWeekday","className":"Repr"},{"typeNames":["Std.Time.Weekday"],"name":"Std.Time.instInhabitedWeekday","className":"Inhabited"},{"typeNames":["Std.Time.Weekday"],"name":"Std.Time.instBEqWeekday","className":"BEq"},{"typeNames":["Std.Time.Weekday.Ordinal"],"name":"Std.Time.Weekday.instOfNatOrdinal","className":"OfNat"}],"imports":["Std.Internal.Rat","Std.Time.Date.Unit.Day"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L124-L130","name":"Std.Time.Weekday.isWeekend","line":124,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.isWeekend","doc":"Check if it's a weekend.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.isWeekend\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">isWeekend</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L112-L122","name":"Std.Time.Weekday.next","line":112,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.next","doc":"Gets the next `Weekday`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.next\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a> → <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L103-L110","name":"Std.Time.Weekday.ofNat!","line":103,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat!","doc":"Converts a `Nat` to a `Weekday`. Panics if the value provided is invalid.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat!\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">ofNat!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L90-L101","name":"Std.Time.Weekday.ofNat?","line":90,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat?","doc":"Converts a `Nat` to an `Option Weekday`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofNat?\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">ofNat?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L78-L88","name":"Std.Time.Weekday.toNat","line":78,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toNat","doc":"Converts a `Weekday` to a `Nat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L66-L76","name":"Std.Time.Weekday.toOrdinal","line":66,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal","doc":"Converts a `Weekday` to a `Ordinal`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.toOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">toOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a> → <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Std.Time.Weekday.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L53-L64","name":"Std.Time.Weekday.ofOrdinal","line":53,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofOrdinal","doc":"Converts a `Ordinal` representing a day index into a corresponding `Weekday`. This function is useful\nfor mapping numerical representations to days of the week.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.ofOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">ofOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Std.Time.Weekday.Ordinal</a> → <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L50-L51","name":"Std.Time.Weekday.instOfNatOrdinal","line":50,"kind":"instance","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOfNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\">Std.Time.Weekday.Ordinal</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L45-L48","name":"Std.Time.Weekday.Ordinal","line":45,"kind":"def","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal","doc":"`Ordinal` represents a bounded value for weekdays, which ranges between 1 and 7.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L41-L41","name":"Std.Time.instBEqWeekday","line":41,"kind":"instance","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instBEqWeekday","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instBEqWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instBEqWeekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L41-L41","name":"Std.Time.instInhabitedWeekday","line":41,"kind":"instance","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instInhabitedWeekday","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instInhabitedWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedWeekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L41-L41","name":"Std.Time.instReprWeekday","line":41,"kind":"instance","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.instReprWeekday","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.instReprWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprWeekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L39-L40","name":"Std.Time.Weekday.sunday","line":39,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.sunday","doc":"Sunday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.sunday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">sunday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L36-L37","name":"Std.Time.Weekday.saturday","line":36,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.saturday","doc":"Saturday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.saturday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">saturday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L33-L34","name":"Std.Time.Weekday.friday","line":33,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.friday","doc":"Friday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.friday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">friday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L30-L31","name":"Std.Time.Weekday.thursday","line":30,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.thursday","doc":"Thursday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.thursday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">thursday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L27-L28","name":"Std.Time.Weekday.wednesday","line":27,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.wednesday","doc":"Wednesday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.wednesday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">wednesday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L24-L25","name":"Std.Time.Weekday.tuesday","line":24,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.tuesday","doc":"Tuesday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.tuesday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">tuesday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L21-L22","name":"Std.Time.Weekday.monday","line":21,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.monday","doc":"Monday. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday.monday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span>.<span class=\"name\">monday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Weekday.lean#L17-L41","name":"Std.Time.Weekday","line":17,"kind":"inductive","docLink":"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday","doc":"Defines the enumeration for days of the week. Each variant corresponds to a day of the week.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Weekday</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}