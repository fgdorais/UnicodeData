{"name":"Std.Time.Date.Unit.Week","instances":[{"typeNames":["Std.Time.Week.Ordinal"],"name":"Std.Time.Week.instOrdinalRepr","className":"Repr"},{"typeNames":["Std.Time.Week.Ordinal"],"name":"Std.Time.Week.instOrdinalBEq","className":"BEq"},{"typeNames":["Std.Time.Week.Ordinal"],"name":"Std.Time.Week.instOrdinalLE","className":"LE"},{"typeNames":["Std.Time.Week.Ordinal"],"name":"Std.Time.Week.instOrdinalLT","className":"LT"},{"typeNames":["Std.Time.Week.Ordinal"],"name":"Std.Time.Week.instOfNatOrdinal","className":"OfNat"},{"typeNames":["LE.le"],"name":"Std.Time.Week.instDecidableLeOrdinal","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Week.instDecidableLtOrdinal","className":"Decidable"},{"typeNames":["Std.Time.Week.Ordinal"],"name":"Std.Time.Week.instInhabitedOrdinal","className":"Inhabited"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetRepr","className":"Repr"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetBEq","className":"BEq"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetInhabited","className":"Inhabited"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetAdd","className":"Add"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetSub","className":"Sub"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetNeg","className":"Neg"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetLE","className":"LE"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetLT","className":"LT"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOffsetToString","className":"ToString"},{"typeNames":["Std.Time.Week.Offset"],"name":"Std.Time.Week.instOfNatOffset","className":"OfNat"},{"typeNames":["Std.Time.Week.Ordinal.OfMonth"],"name":"Std.Time.Week.Ordinal.instOfMonthRepr","className":"Repr"}],"imports":["Std.Internal.Rat","Std.Time.Date.Unit.Day"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L175-L180","name":"Std.Time.Week.Offset.ofDays","line":175,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofDays","doc":"Convert `Day.Offset` into `Week.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L168-L173","name":"Std.Time.Week.Offset.toDays","line":168,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toDays","doc":"Convert `Week.Offset` into `Day.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L161-L166","name":"Std.Time.Week.Offset.ofHours","line":161,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofHours","doc":"Convert `Hour.Offset` into `Week.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hours : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L154-L159","name":"Std.Time.Week.Offset.toHours","line":154,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toHours","doc":"Convert `Week.Offset` into `Hour.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L147-L152","name":"Std.Time.Week.Offset.ofMinutes","line":147,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMinutes","doc":"Convert `Minute.Offset` into `Week.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(minutes : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L140-L145","name":"Std.Time.Week.Offset.toMinutes","line":140,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMinutes","doc":"Convert `Week.Offset` into `Minute.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L133-L138","name":"Std.Time.Week.Offset.ofSeconds","line":133,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofSeconds","doc":"Convert `Second.Offset` into `Week.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(secs : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L126-L131","name":"Std.Time.Week.Offset.toSeconds","line":126,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toSeconds","doc":"Convert `Week.Offset` into `Second.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L119-L124","name":"Std.Time.Week.Offset.ofNanoseconds","line":119,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNanoseconds","doc":"Convert `Nanosecond.Offset` into `Week.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nanos : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L112-L117","name":"Std.Time.Week.Offset.toNanoseconds","line":112,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toNanoseconds","doc":"Convert `Week.Offset` into `Nanosecond.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L105-L110","name":"Std.Time.Week.Offset.ofMilliseconds","line":105,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMilliseconds","doc":"Convert `Millisecond.Offset` into `Week.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(millis : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L98-L103","name":"Std.Time.Week.Offset.toMilliseconds","line":98,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMilliseconds","doc":"Convert `Week.Offset` into `Millisecond.Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.toMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L91-L96","name":"Std.Time.Week.Offset.ofInt","line":91,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofInt","doc":"Creates an `Offset` from an integer.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L84-L89","name":"Std.Time.Week.Offset.ofNat","line":84,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNat","doc":"Creates an `Offset` from a natural number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L74-L79","name":"Std.Time.Week.Ordinal.toOffset","line":74,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.toOffset","doc":"Converts an `Ordinal` to an `Offset`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L67-L72","name":"Std.Time.Week.Ordinal.ofFin","line":67,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofFin","doc":"Creates an `Ordinal` from a `Fin`, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">54</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L60-L65","name":"Std.Time.Week.Ordinal.ofNat","line":60,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofNat","doc":"Creates an `Ordinal` from a natural number, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">53</span></span>)</span> <a href=\"./Std/Time/Date/Unit/Week.html#_auto._@.Std.Time.Date.Unit.Week._hyg.149\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L58-L58","name":"Std.Time.Week.Ordinal.instOfMonthRepr","line":58,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instOfMonthRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.instOfMonthRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">instOfMonthRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Std.Time.Week.Ordinal.OfMonth</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L53-L58","name":"Std.Time.Week.Ordinal.OfMonth","line":53,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth","doc":"`OfMonth` represents the number of weeks within a month. It ensures that the week is within the\ncorrect bounds—either 1 to 6, representing the possible weeks in a month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">OfMonth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L46-L51","name":"Std.Time.Week.Ordinal.ofInt","line":46,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofInt","doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">data</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">53</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L42-L42","name":"Std.Time.Week.instOfNatOffset","line":42,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetToString","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetLT","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetLE","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetNeg","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetSub","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetAdd","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetInhabited","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetBEq","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L40-L40","name":"Std.Time.Week.instOffsetRepr","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOffsetRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOffsetRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L36-L40","name":"Std.Time.Week.Offset","line":36,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset","doc":"`Offset` represents an offset in weeks.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L33-L34","name":"Std.Time.Week.instInhabitedOrdinal","line":33,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instInhabitedOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L30-L31","name":"Std.Time.Week.instDecidableLtOrdinal","line":30,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLtOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L27-L28","name":"Std.Time.Week.instDecidableLeOrdinal","line":27,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLeOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L24-L25","name":"Std.Time.Week.instOfNatOrdinal","line":24,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L22-L22","name":"Std.Time.Week.instOrdinalLT","line":22,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOrdinalLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L22-L22","name":"Std.Time.Week.instOrdinalLE","line":22,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOrdinalLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L22-L22","name":"Std.Time.Week.instOrdinalBEq","line":22,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOrdinalBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L22-L22","name":"Std.Time.Week.instOrdinalRepr","line":22,"kind":"instance","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.instOrdinalRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">instOrdinalRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Week.lean#L18-L22","name":"Std.Time.Week.Ordinal","line":18,"kind":"def","docLink":"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal","doc":"`Ordinal` represents a bounded value for weeks, which ranges between 1 and 53.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Week</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}