{"name":"Std.Time.Zoned.DateTime","instances":[{"typeNames":["Std.Time.DateTime"],"name":"Std.Time.instBEqDateTime","className":"BEq"},{"typeNames":["Std.Time.DateTime"],"name":"Std.Time.instInhabitedDateTime","className":"Inhabited"},{"typeNames":["Std.Time.DateTime","Std.Time.Day.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Day.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Week.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_1","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Week.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_1","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Hour.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_2","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Hour.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_2","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Minute.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_3","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Minute.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_3","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Second.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_4","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Second.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_4","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Millisecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_5","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Millisecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_5","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Nanosecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddOffset_6","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Nanosecond.Offset","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubOffset_6","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.DateTime","Std.Time.Duration"],"name":"Std.Time.DateTime.instHSubDuration","className":"HSub"},{"typeNames":["Std.Time.DateTime","Std.Time.Duration","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHAddDuration","className":"HAdd"},{"typeNames":["Std.Time.DateTime","Std.Time.Duration","Std.Time.DateTime"],"name":"Std.Time.DateTime.instHSubDuration_1","className":"HSub"}],"imports":["Std.Time.DateTime","Std.Time.Zoned.TimeZone","Std.Internal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L511-L512","name":"Std.Time.DateTime.instHSubDuration_1","line":511,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubDuration_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Std.Time.Duration</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L508-L509","name":"Std.Time.DateTime.instHAddDuration","line":508,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddDuration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddDuration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Std.Time.Duration</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L505-L506","name":"Std.Time.DateTime.instHSubDuration","line":505,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubDuration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz₁ : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz₁</span>)</span> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Std.Time.Duration</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L502-L503","name":"Std.Time.DateTime.instHSubOffset_6","line":502,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L499-L500","name":"Std.Time.DateTime.instHAddOffset_6","line":499,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L496-L497","name":"Std.Time.DateTime.instHSubOffset_5","line":496,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L493-L494","name":"Std.Time.DateTime.instHAddOffset_5","line":493,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L490-L491","name":"Std.Time.DateTime.instHSubOffset_4","line":490,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L487-L488","name":"Std.Time.DateTime.instHAddOffset_4","line":487,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L484-L485","name":"Std.Time.DateTime.instHSubOffset_3","line":484,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L481-L482","name":"Std.Time.DateTime.instHAddOffset_3","line":481,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L478-L479","name":"Std.Time.DateTime.instHSubOffset_2","line":478,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L475-L476","name":"Std.Time.DateTime.instHAddOffset_2","line":475,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L472-L473","name":"Std.Time.DateTime.instHSubOffset_1","line":472,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L469-L470","name":"Std.Time.DateTime.instHAddOffset_1","line":469,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L466-L467","name":"Std.Time.DateTime.instHSubOffset","line":466,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L463-L464","name":"Std.Time.DateTime.instHAddOffset","line":463,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L456-L461","name":"Std.Time.DateTime.ofDaysSinceUNIXEpoch","line":456,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofDaysSinceUNIXEpoch","doc":"Converts a `DateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(time : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L449-L454","name":"Std.Time.DateTime.time","line":449,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.time","doc":"Getter for the `PlainTime` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.time\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">time</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(zdt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L442-L447","name":"Std.Time.DateTime.quarter","line":442,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.quarter","doc":"Determines the quarter of the year for the given `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">quarter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L433-L440","name":"Std.Time.DateTime.alignedWeekOfMonth","line":433,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.alignedWeekOfMonth","doc":"Determines the week of the month for the given `DateTime`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Std.Time.Week.Ordinal.OfMonth</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L427-L431","name":"Std.Time.DateTime.weekOfMonth","line":427,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfMonth","doc":"Returns the unaligned week of the month for a `DateTime` (day divided by 7, plus 1).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L420-L425","name":"Std.Time.DateTime.weekOfYear","line":420,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfYear","doc":"Determines the week of the year for the given `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L414-L418","name":"Std.Time.DateTime.dayOfYear","line":414,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.dayOfYear","doc":"Determines the ordinal day of the year for the given `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.year</span>.isLeap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L408-L412","name":"Std.Time.DateTime.inLeapYear","line":408,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.inLeapYear","doc":"Checks if the `DateTime` is in a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L402-L406","name":"Std.Time.DateTime.withWeekday","line":402,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withWeekday","doc":"Sets the `DateTime` to the specified `desiredWeekday`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(desiredWeekday : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L396-L400","name":"Std.Time.DateTime.era","line":396,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.era","doc":"Determines the era of the given `DateTime` based on its year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">era</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L389-L394","name":"Std.Time.DateTime.weekday","line":389,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekday","doc":"Gets the `Weekday` of a DateTime.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">weekday</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L382-L387","name":"Std.Time.DateTime.nanosecond","line":382,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.nanosecond","doc":"Getter for the `Nanosecond` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.nanosecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">nanosecond</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Std.Time.Nanosecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L375-L380","name":"Std.Time.DateTime.millisecond","line":375,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.millisecond","doc":"Getter for the `Milliseconds` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.millisecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">millisecond</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Std.Time.Millisecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L368-L373","name":"Std.Time.DateTime.second","line":368,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.second","doc":"Getter for the `Second` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.second\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">second</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Std.Time.Second.Ordinal</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">dt</span>.date</span>.get</span>.time</span>.second</span>.fst</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L361-L366","name":"Std.Time.DateTime.minute","line":361,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.minute","doc":"Getter for the `Minute` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.minute\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">minute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L354-L359","name":"Std.Time.DateTime.hour","line":354,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.hour","doc":"Getter for the `Hour` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.hour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">hour</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L347-L352","name":"Std.Time.DateTime.day","line":347,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.day","doc":"Getter for the `Day` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">day</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L340-L345","name":"Std.Time.DateTime.month","line":340,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.month","doc":"Getter for the `Month` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">month</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L333-L338","name":"Std.Time.DateTime.year","line":333,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.year","doc":"Getter for the `Year` inside of a `DateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">year</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L326-L331","name":"Std.Time.DateTime.toPlainDateTime","line":326,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toPlainDateTime","doc":"Converts a `Timestamp` to a `PlainDateTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">toPlainDateTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L319-L324","name":"Std.Time.DateTime.withMilliseconds","line":319,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMilliseconds","doc":"Creates a new `DateTime tz` by adjusting the `millisecond` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMilliseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(milli : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Std.Time.Millisecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L312-L317","name":"Std.Time.DateTime.withNanoseconds","line":312,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withNanoseconds","doc":"Creates a new `DateTime tz` by adjusting the `nano` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withNanoseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nano : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Std.Time.Nanosecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L305-L310","name":"Std.Time.DateTime.withSeconds","line":305,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withSeconds","doc":"Creates a new `DateTime tz` by adjusting the `second` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withSeconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(second : <span class=\"fn\"><a href=\"./Init/Core.html#Sigma\">Sigma</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Std.Time.Second.Ordinal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L298-L303","name":"Std.Time.DateTime.withMinutes","line":298,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMinutes","doc":"Creates a new `DateTime tz` by adjusting the `minute` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMinutes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(minute : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L291-L296","name":"Std.Time.DateTime.withHours","line":291,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withHours","doc":"Creates a new `DateTime tz` by adjusting the `hour` component.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withHours</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hour : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L283-L289","name":"Std.Time.DateTime.withYearRollOver","line":283,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearRollOver","doc":"Creates a new `DateTime tz` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L275-L281","name":"Std.Time.DateTime.withYearClip","line":275,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearClip","doc":"Creates a new `DateTime tz` by adjusting the year to the given `year` value. The month and day remain unchanged,\nand any invalid days for the new year will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L267-L273","name":"Std.Time.DateTime.withMonthRollOver","line":267,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthRollOver","doc":"Creates a new `DateTime tz` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L259-L265","name":"Std.Time.DateTime.withMonthClip","line":259,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthClip","doc":"Creates a new `DateTime tz` by adjusting the month to the given `month` value.\nThe day remains unchanged, and any invalid days for the new month will be handled according to the `clip` behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L251-L257","name":"Std.Time.DateTime.withDaysRollOver","line":251,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysRollOver","doc":"Creates a new `DateTime tz` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L243-L249","name":"Std.Time.DateTime.withDaysClip","line":243,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysClip","doc":"Creates a new `DateTime tz` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L236-L241","name":"Std.Time.DateTime.subYearsClip","line":236,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsClip","doc":"Subtract `Year.Offset` from to a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L228-L234","name":"Std.Time.DateTime.subYearsRollOver","line":228,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsRollOver","doc":"Subtract `Year.Offset` from a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L221-L226","name":"Std.Time.DateTime.addYearsClip","line":221,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsClip","doc":"Add `Year.Offset` to a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L213-L219","name":"Std.Time.DateTime.addYearsRollOver","line":213,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsRollOver","doc":"Add `Year.Offset` to a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L205-L211","name":"Std.Time.DateTime.subMonthsRollOver","line":205,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsRollOver","doc":"Subtract `Month.Offset` from a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L198-L203","name":"Std.Time.DateTime.addMonthsRollOver","line":198,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsRollOver","doc":"Add `Month.Offset` from a `DateTime`, this function rolls over any excess days into the following\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L191-L196","name":"Std.Time.DateTime.subMonthsClip","line":191,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsClip","doc":"Subtracts `Month.Offset` from a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L185-L189","name":"Std.Time.DateTime.addMonthsClip","line":185,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsClip","doc":"Add `Month.Offset` to a `DateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L178-L183","name":"Std.Time.DateTime.subWeeks","line":178,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subWeeks","doc":"Subtracts `Week.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L171-L176","name":"Std.Time.DateTime.addWeeks","line":171,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addWeeks","doc":"Add `Week.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L164-L169","name":"Std.Time.DateTime.subDays","line":164,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subDays","doc":"Subtracts `Day.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subDays</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L157-L162","name":"Std.Time.DateTime.addDays","line":157,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addDays","doc":"Add `Day.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addDays</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L150-L155","name":"Std.Time.DateTime.subNanoseconds","line":150,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subNanoseconds","doc":"Subtract `Nanosecond.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subNanoseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nanoseconds : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L143-L148","name":"Std.Time.DateTime.addNanoseconds","line":143,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addNanoseconds","doc":"Add `Nanosecond.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addNanoseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nanoseconds : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L136-L141","name":"Std.Time.DateTime.subMilliseconds","line":136,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMilliseconds","doc":"Subtract `Millisecond.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMilliseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(milliseconds : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L129-L134","name":"Std.Time.DateTime.addMilliseconds","line":129,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMilliseconds","doc":"Add `Millisecond.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMilliseconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(milliseconds : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L122-L127","name":"Std.Time.DateTime.subSeconds","line":122,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subSeconds","doc":"Subtract `Second.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subSeconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(seconds : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L115-L120","name":"Std.Time.DateTime.addSeconds","line":115,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addSeconds","doc":"Add `Second.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addSeconds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(seconds : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L108-L113","name":"Std.Time.DateTime.subMinutes","line":108,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMinutes","doc":"Subtract `Minute.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subMinutes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(minutes : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L101-L106","name":"Std.Time.DateTime.addMinutes","line":101,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMinutes","doc":"Add `Minute.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addMinutes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(minutes : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L94-L99","name":"Std.Time.DateTime.subHours","line":94,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subHours","doc":"Subtract `Hour.Offset` from a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.subHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">subHours</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hours : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L87-L92","name":"Std.Time.DateTime.addHours","line":87,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addHours","doc":"Add `Hour.Offset` to a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.addHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">addHours</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hours : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L78-L85","name":"Std.Time.DateTime.ofPlainDateTime","line":78,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTime","doc":"Creates a new `DateTime` from a `PlainDateTime`, assuming that the `PlainDateTime`\nis relative to the given `TimeZone`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofPlainDateTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L69-L76","name":"Std.Time.DateTime.ofPlainDateTimeAssumingUTC","line":69,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTimeAssumingUTC","doc":"Creates a new `DateTime` out of a `PlainDateTime`. It assumes that the `PlainDateTime` is relative\nto UTC.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofPlainDateTimeAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofPlainDateTimeAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L62-L67","name":"Std.Time.DateTime.convertTimeZone","line":62,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.convertTimeZone","doc":"Changes the `TimeZone` to a new one.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.convertTimeZone\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">convertTimeZone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tz₁ : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L55-L60","name":"Std.Time.DateTime.toTimestamp","line":55,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toTimestamp","doc":"Creates a `Timestamp` out of a `DateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">toTimestamp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Std.Time.Timestamp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L49-L53","name":"Std.Time.DateTime.toDaysSinceUNIXEpoch","line":49,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toDaysSinceUNIXEpoch","doc":"Converts a `DateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(date : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L42-L47","name":"Std.Time.DateTime.ofTimestamp","line":42,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofTimestamp","doc":"Creates a new `DateTime` out of a `Timestamp` that is in a `TimeZone`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.ofTimestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">ofTimestamp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tm : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Std.Time.Timestamp</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L37-L38","name":"Std.Time.instInhabitedDateTime","line":37,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.instInhabitedDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.instInhabitedDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedDateTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L34-L35","name":"Std.Time.instBEqDateTime","line":34,"kind":"instance","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.instBEqDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.instBEqDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instBEqDateTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L32-L32","name":"Std.Time.DateTime.date","line":32,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.date","doc":"`Date` is a `Thunk` containing the `PlainDateTime` that represents the local date and time, it's\nused for accessing data like `day` and `month` without having to recompute the data everytime.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.date\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">date</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L26-L26","name":"Std.Time.DateTime.timestamp","line":26,"kind":"def","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.timestamp","doc":"`Timestamp` represents the exact moment in time. It's a UTC related `Timestamp`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime.timestamp\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span>.<span class=\"name\">timestamp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\">Std.Time.DateTime</a> <span class=\"fn\">tz</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Std.Time.Timestamp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Zoned/DateTime.lean#L17-L32","name":"Std.Time.DateTime","line":17,"kind":"structure","docLink":"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime","doc":"Represents a specific point in time associated with a `TimeZone`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Zoned/DateTime.html#Std.Time.DateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">DateTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tz : <a href=\"./Std/Time/Zoned/TimeZone.html#Std.Time.TimeZone\">Std.Time.TimeZone</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}