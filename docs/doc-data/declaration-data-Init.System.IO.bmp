{"name":"Init.System.IO","instances":[{"typeNames":["EIO"],"name":"instMonadEIO","className":"Monad"},{"typeNames":["EIO"],"name":"instMonadFinallyEIO","className":"MonadFinally"},{"typeNames":["EIO"],"name":"instMonadExceptOfEIO","className":"MonadExceptOf"},{"typeNames":["EIO"],"name":"instOrElseEIO","className":"OrElse"},{"typeNames":["EIO"],"name":"instInhabitedEIO","className":"Inhabited"},{"typeNames":["BaseIO"],"name":"instMonadBaseIO","className":"Monad"},{"typeNames":["BaseIO"],"name":"instMonadFinallyBaseIO","className":"MonadFinally"},{"typeNames":["BaseIO","EIO"],"name":"instMonadLiftBaseIOEIO","className":"MonadLift"},{"typeNames":["IO.TaskState"],"name":"IO.instInhabitedTaskState","className":"Inhabited"},{"typeNames":["IO.TaskState"],"name":"IO.instReprTaskState","className":"Repr"},{"typeNames":["Eq"],"name":"IO.instDecidableEqTaskState","className":"Decidable"},{"typeNames":["IO.TaskState"],"name":"IO.instOrdTaskState","className":"Ord"},{"typeNames":["IO.TaskState"],"name":"IO.instLTTaskState","className":"LT"},{"typeNames":["IO.TaskState"],"name":"IO.instLETaskState","className":"LE"},{"typeNames":["IO.TaskState"],"name":"IO.instMinTaskState","className":"Min"},{"typeNames":["IO.TaskState"],"name":"IO.instMaxTaskState","className":"Max"},{"typeNames":["IO.TaskState"],"name":"IO.instToStringTaskState","className":"ToString"},{"typeNames":["IO.FS.Stream"],"name":"IO.FS.instInhabitedStream","className":"Inhabited"},{"typeNames":["IO.FS.DirEntry"],"name":"IO.FS.instReprDirEntry","className":"Repr"},{"typeNames":["IO.FS.FileType"],"name":"IO.FS.instReprFileType","className":"Repr"},{"typeNames":["IO.FS.FileType"],"name":"IO.FS.instBEqFileType","className":"BEq"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instReprSystemTime","className":"Repr"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instBEqSystemTime","className":"BEq"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instOrdSystemTime","className":"Ord"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instInhabitedSystemTime","className":"Inhabited"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instLTSystemTime","className":"LT"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instLESystemTime","className":"LE"},{"typeNames":["IO.FS.Metadata"],"name":"IO.FS.instReprMetadata","className":"Repr"},{"typeNames":["ST","BaseIO"],"name":"IO.instMonadLiftSTRealWorldBaseIO","className":"MonadLift"}],"imports":["Init.System.IOError","Init.System.FilePath","Init.System.ST","Init.Data.Ord"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L972-L983","name":"Runtime.markPersistent","line":972,"kind":"def","docLink":"./Init/System/IO.html#Runtime.markPersistent","doc":"Marks given value and its object graph closure as persistent. This will remove\nreference counter updates but prevent the closure from being deallocated until\nthe end of the process! It can still be useful to do eagerly when the value\nwill be marked persistent later anyway and there is available time budget to\nmark it now or it would be unnecessarily marked multi-threaded in between.\n\nThis function is only safe to use on objects (in the full closure) which are\nnot used concurrently or which are already persistent.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Runtime.markPersistent\"><span class=\"name\">Runtime</span>.<span class=\"name\">markPersistent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L963-L970","name":"Runtime.markMultiThreaded","line":963,"kind":"def","docLink":"./Init/System/IO.html#Runtime.markMultiThreaded","doc":"Marks given value and its object graph closure as multi-threaded if currently\nmarked single-threaded. This will make reference counter updates atomic and\nthus more costly. It can still be useful to do eagerly when the value will be\nshared between threads later anyway and there is available time budget to mark\nit now. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Runtime.markMultiThreaded\"><span class=\"name\">Runtime</span>.<span class=\"name\">markMultiThreaded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L957-L957","name":"termPrintln!__","line":957,"kind":"def","docLink":"./Init/System/IO.html#termPrintln!__","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#termPrintln!__\"><span class=\"name\">termPrintln!__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L941-L952","name":"IO.FS.withIsolatedStreams","line":941,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withIsolatedStreams","doc":"Run action with `stdin` emptied and `stdout+stderr` captured into a `String`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withIsolatedStreams\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withIsolatedStreams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isolateStderr : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L916-L937","name":"IO.FS.Stream.ofBuffer","line":916,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.ofBuffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.ofBuffer\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">ofBuffer</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L914-L914","name":"IO.FS.Stream.Buffer.pos","line":914,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.pos\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L913-L913","name":"IO.FS.Stream.Buffer.data","line":913,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.data","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.data\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L912-L912","name":"IO.FS.Stream.Buffer.mk","line":912,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L912-L914","name":"IO.FS.Stream.Buffer","line":912,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L903-L910","name":"IO.FS.Stream.ofHandle","line":903,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.ofHandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.ofHandle\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">ofHandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L890-L892","name":"IO.CancelToken.isSet","line":890,"kind":"def","docLink":"./Init/System/IO.html#IO.CancelToken.isSet","doc":"Checks whether the cancellation token has been activated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.isSet\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">isSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tk : <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L886-L888","name":"IO.CancelToken.set","line":886,"kind":"def","docLink":"./Init/System/IO.html#IO.CancelToken.set","doc":"Activates a cancellation token. Idempotent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.set\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">set</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tk : <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L882-L884","name":"IO.CancelToken.new","line":882,"kind":"def","docLink":"./Init/System/IO.html#IO.CancelToken.new","doc":"Creates a new cancellation token. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.new\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">new</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L877-L877","name":"IO.CancelToken.mk","line":877,"kind":"ctor","docLink":"./Init/System/IO.html#IO.CancelToken.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.mk\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L870-L878","name":"IO.CancelToken","line":870,"kind":"structure","docLink":"./Init/System/IO.html#IO.CancelToken","doc":"Mutable cell that can be passed around for purposes of cooperative task cancellation: request\ncancellation with `CancelToken.set` and check for it with `CancelToken.isSet`.\n\nThis is a more flexible alternative to `Task.cancel` as the token can be shared between multiple\ntasks.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L867-L868","name":"IO.mkRef","line":867,"kind":"def","docLink":"./Init/System/IO.html#IO.mkRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mkRef\"><span class=\"name\">IO</span>.<span class=\"name\">mkRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L865-L865","name":"IO.instMonadLiftSTRealWorldBaseIO","line":865,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO\"><span class=\"name\">IO</span>.<span class=\"name\">instMonadLiftSTRealWorldBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L862-L863","name":"IO.Ref","line":862,"kind":"def","docLink":"./Init/System/IO.html#IO.Ref","doc":"References "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Ref\"><span class=\"name\">IO</span>.<span class=\"name\">Ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L859-L860","name":"IO.setAccessRights","line":859,"kind":"def","docLink":"./Init/System/IO.html#IO.setAccessRights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setAccessRights\"><span class=\"name\">IO</span>.<span class=\"name\">setAccessRights</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(filename : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L857-L857","name":"IO.Prim.setAccessRights","line":857,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Prim.setAccessRights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Prim.setAccessRights\"><span class=\"name\">IO</span>.<span class=\"name\">Prim</span>.<span class=\"name\">setAccessRights</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(filename : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L851-L855","name":"IO.FileRight.flags","line":851,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.flags","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.flags\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">flags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L849-L849","name":"IO.FileRight.other","line":849,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.other\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L848-L848","name":"IO.FileRight.group","line":848,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.group","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.group\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L847-L847","name":"IO.FileRight.user","line":847,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.user","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.user\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">user</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L846-L846","name":"IO.FileRight.mk","line":846,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FileRight.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(user : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(group : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(other : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L846-L849","name":"IO.FileRight","line":846,"kind":"structure","docLink":"./Init/System/IO.html#IO.FileRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L840-L844","name":"IO.AccessRight.flags","line":840,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.flags","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.flags\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">flags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L838-L838","name":"IO.AccessRight.execution","line":838,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.execution","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.execution\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">execution</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L837-L837","name":"IO.AccessRight.write","line":837,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.write\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L836-L836","name":"IO.AccessRight.read","line":836,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.read","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.read\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L835-L835","name":"IO.AccessRight.mk","line":835,"kind":"ctor","docLink":"./Init/System/IO.html#IO.AccessRight.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.mk\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(read : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(write : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(execution : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L835-L838","name":"IO.AccessRight","line":835,"kind":"structure","docLink":"./Init/System/IO.html#IO.AccessRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L832-L833","name":"IO.getTID","line":832,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getTID","doc":"Returns the thread ID of the calling thread. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getTID\"><span class=\"name\">IO</span>.<span class=\"name\">getTID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L828-L828","name":"IO.Process.exit","line":828,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.exit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.exit\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">exit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L821-L826","name":"IO.Process.run","line":821,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.run","doc":"Run process to completion and return stdout on success. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.run\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L809-L819","name":"IO.Process.output","line":809,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.output","doc":"Run process to completion and capture output.\nThe process does not inherit the standard input of the caller.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.output\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">output</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L807-L807","name":"IO.Process.Output.stderr","line":807,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.stderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">stderr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L806-L806","name":"IO.Process.Output.stdout","line":806,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.stdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L805-L805","name":"IO.Process.Output.exitCode","line":805,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.exitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.exitCode\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">exitCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L804-L804","name":"IO.Process.Output.mk","line":804,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Output.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exitCode : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L804-L807","name":"IO.Process.Output","line":804,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.Output","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L795-L802","name":"IO.Process.Child.takeStdin","line":795,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.takeStdin","doc":"Extract the `stdin` field from a `Child` object, allowing them to be freed independently.\nThis operation is necessary for closing the child process' stdin while still holding on to a process handle,\ne.g. for `Child.wait`. A file handle is closed when all references to it are dropped, which without this\noperation includes the `Child` object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.takeStdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">takeStdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> →\n  <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span>.toHandleType</span> <a href=\"./Init/Prelude.html#Prod\">×</a>       <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">{ <span class=\"fn\">stdin</span> := <a href=\"./Init/System/IO.html#IO.Process.Stdio.null\">IO.Process.Stdio.null</a>, <span class=\"fn\">stdout</span> := <span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>, <span class=\"fn\">stderr</span> := <span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L791-L793","name":"IO.Process.Child.kill","line":791,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.kill","doc":"Terminates the child process using the SIGTERM signal or a platform analogue.\nIf the process was started using `SpawnArgs.setsid`, terminates the entire process group instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.kill\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">kill</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L785-L789","name":"IO.Process.Child.tryWait","line":785,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.tryWait","doc":"Check whether the child has exited yet. If it hasn't return none, otherwise its exit code.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.tryWait\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">tryWait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L780-L783","name":"IO.Process.Child.wait","line":780,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.wait","doc":"Block until the child process has exited and return its exit code.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.wait\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L778-L778","name":"IO.Process.spawn","line":778,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.spawn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.spawn\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">spawn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\"><span class=\"fn\">args</span>.toStdioConfig</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L776-L776","name":"IO.Process.Child.stderr","line":776,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stderr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span>.toHandleType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L775-L775","name":"IO.Process.Child.stdout","line":775,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stdout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>.toHandleType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L774-L774","name":"IO.Process.Child.stdin","line":774,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span>.toHandleType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L773-L773","name":"IO.Process.Child.mk","line":773,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Child.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stdin : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span>.toHandleType</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>.toHandleType</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span>.toHandleType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L773-L776","name":"IO.Process.Child","line":773,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.Child","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L770-L770","name":"IO.Process.SpawnArgs.setsid","line":770,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.setsid","doc":"Start process in new session and process group using `setsid`. Currently a no-op on non-POSIX platforms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.setsid\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">setsid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L768-L768","name":"IO.Process.SpawnArgs.env","line":768,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.env","doc":"Add or remove environment variables for the process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.env\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L766-L766","name":"IO.Process.SpawnArgs.cwd","line":766,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.cwd","doc":"Working directory for the process. Inherit from current process if `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.cwd\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">cwd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L764-L764","name":"IO.Process.SpawnArgs.args","line":764,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.args","doc":"Arguments for the process "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.args\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L762-L762","name":"IO.Process.SpawnArgs.cmd","line":762,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.cmd","doc":"Command name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.cmd\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">cmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L760-L760","name":"IO.Process.SpawnArgs.mk","line":760,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toStdioConfig : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmd : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cwd : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(setsid : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L760-L770","name":"IO.Process.SpawnArgs","line":760,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L758-L758","name":"IO.Process.StdioConfig.stderr","line":758,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stderr","doc":"Configuration for the process' stderr handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stderr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L756-L756","name":"IO.Process.StdioConfig.stdout","line":756,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stdout","doc":"Configuration for the process' stdout handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L754-L754","name":"IO.Process.StdioConfig.stdin","line":754,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stdin","doc":"Configuration for the process' stdin handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stdin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L752-L752","name":"IO.Process.StdioConfig.mk","line":752,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stdin : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L752-L758","name":"IO.Process.StdioConfig","line":752,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.StdioConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L747-L750","name":"IO.Process.Stdio.toHandleType","line":747,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Stdio.toHandleType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">toHandleType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L745-L745","name":"IO.Process.Stdio.null","line":745,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.null\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">null</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L744-L744","name":"IO.Process.Stdio.inherit","line":744,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.inherit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.inherit\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">inherit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L743-L743","name":"IO.Process.Stdio.piped","line":743,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.piped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.piped\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">piped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L742-L745","name":"IO.Process.Stdio","line":742,"kind":"inductive","docLink":"./Init/System/IO.html#IO.Process.Stdio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L739-L740","name":"IO.Process.getPID","line":739,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.getPID","doc":"Returns the process ID of the calling process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.getPID\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">getPID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L736-L737","name":"IO.Process.setCurrentDir","line":736,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.setCurrentDir","doc":"Sets the current working directory of the calling process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.setCurrentDir\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">setCurrentDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L733-L734","name":"IO.Process.getCurrentDir","line":733,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.getCurrentDir","doc":"Returns the current working directory of the calling process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.getCurrentDir\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">getCurrentDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L716-L727","name":"IO.FS.withTempDir","line":716,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withTempDir","doc":"Like `createTempDir`, but also takes care of removing the directory after usage.\n\nAll files in the directory are recursively deleted, regardless of how or when they were created.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withTempDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withTempDir</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L705-L714","name":"IO.FS.withTempFile","line":705,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withTempFile","doc":"Like `createTempFile`, but also takes care of removing the file after usage.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withTempFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withTempFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a> → <span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L694-L703","name":"IO.FS.removeDirAll","line":694,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeDirAll","doc":"Fully remove given directory by deleting all contained files and directories in an unspecified order.\nFails if any contained entry cannot be deleted or was newly created during execution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeDirAll\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeDirAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L679-L692","name":"IO.FS.createDirAll","line":679,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createDirAll","doc":"Create given path and all missing parents as directories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createDirAll\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createDirAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L671-L675","name":"IO.appDir","line":671,"kind":"def","docLink":"./Init/System/IO.html#IO.appDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.appDir\"><span class=\"name\">IO</span>.<span class=\"name\">appDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L660-L661","name":"IO.eprintln","line":660,"kind":"def","docLink":"./Init/System/IO.html#IO.eprintln","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.eprintln\"><span class=\"name\">IO</span>.<span class=\"name\">eprintln</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L656-L658","name":"IO.eprint","line":656,"kind":"def","docLink":"./Init/System/IO.html#IO.eprint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.eprint\"><span class=\"name\">IO</span>.<span class=\"name\">eprint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L653-L654","name":"IO.println","line":653,"kind":"def","docLink":"./Init/System/IO.html#IO.println","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.println\"><span class=\"name\">IO</span>.<span class=\"name\">println</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L649-L651","name":"IO.print","line":649,"kind":"def","docLink":"./Init/System/IO.html#IO.print","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.print\"><span class=\"name\">IO</span>.<span class=\"name\">print</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L645-L647","name":"IO.withStderr","line":645,"kind":"def","docLink":"./Init/System/IO.html#IO.withStderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStderr\"><span class=\"name\">IO</span>.<span class=\"name\">withStderr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L638-L643","name":"IO.withStdout","line":638,"kind":"def","docLink":"./Init/System/IO.html#IO.withStdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStdout\"><span class=\"name\">IO</span>.<span class=\"name\">withStdout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L634-L636","name":"IO.withStdin","line":634,"kind":"def","docLink":"./Init/System/IO.html#IO.withStdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStdin\"><span class=\"name\">IO</span>.<span class=\"name\">withStdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L626-L630","name":"IO.FS.readFile","line":626,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.readFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.readFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">readFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L614-L624","name":"IO.FS.readBinFile","line":614,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.readBinFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.readBinFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">readBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L590-L606","name":"System.FilePath.walkDir.go","line":590,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.walkDir.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.walkDir.go\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">walkDir</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(enter : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L584-L606","name":"System.FilePath.walkDir","line":584,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.walkDir","doc":"Return all filesystem entries of a preorder traversal of all directories satisfying `enter`, starting at `p`.\nSymbolic links are visited as well by default. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.walkDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">walkDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(enter : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L581-L582","name":"System.FilePath.pathExists","line":581,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.pathExists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.pathExists\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">pathExists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L576-L579","name":"System.FilePath.isDir","line":576,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.isDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.isDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">isDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L573-L574","name":"System.FilePath.metadata","line":573,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.metadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.metadata\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">metadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L570-L571","name":"System.FilePath.readDir","line":570,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.readDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.readDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">readDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L562-L562","name":"IO.FS.instReprMetadata","line":562,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprMetadata\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L561-L561","name":"IO.FS.Metadata.type","line":561,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.type\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L560-L560","name":"IO.FS.Metadata.byteSize","line":560,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.byteSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.byteSize\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">byteSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L559-L559","name":"IO.FS.Metadata.modified","line":559,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.modified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.modified\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L558-L558","name":"IO.FS.Metadata.accessed","line":558,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.accessed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.accessed\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">accessed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L556-L556","name":"IO.FS.Metadata.mk","line":556,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Metadata.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(accessed : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modified : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(byteSize : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L556-L562","name":"IO.FS.Metadata","line":556,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Metadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L554-L554","name":"IO.FS.instLESystemTime","line":554,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instLESystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instLESystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instLESystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L553-L553","name":"IO.FS.instLTSystemTime","line":553,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instLTSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instLTSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instLTSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L551-L551","name":"IO.FS.instInhabitedSystemTime","line":551,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instInhabitedSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instInhabitedSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instInhabitedSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L551-L551","name":"IO.FS.instOrdSystemTime","line":551,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instOrdSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instOrdSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instOrdSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L551-L551","name":"IO.FS.instBEqSystemTime","line":551,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instBEqSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instBEqSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instBEqSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L551-L551","name":"IO.FS.instReprSystemTime","line":551,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L550-L550","name":"IO.FS.SystemTime.nsec","line":550,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.SystemTime.nsec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.nsec\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">nsec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L549-L549","name":"IO.FS.SystemTime.sec","line":549,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.SystemTime.sec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.sec\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">sec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L548-L548","name":"IO.FS.SystemTime.mk","line":548,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.SystemTime.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sec : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nsec : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L548-L551","name":"IO.FS.SystemTime","line":548,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.SystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L546-L546","name":"IO.FS.instBEqFileType","line":546,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instBEqFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instBEqFileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instBEqFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L546-L546","name":"IO.FS.instReprFileType","line":546,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprFileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L545-L545","name":"IO.FS.FileType.other","line":545,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.other\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L544-L544","name":"IO.FS.FileType.symlink","line":544,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.symlink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.symlink\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">symlink</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L543-L543","name":"IO.FS.FileType.file","line":543,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.file","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.file\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">file</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L542-L542","name":"IO.FS.FileType.dir","line":542,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.dir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.dir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">dir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L541-L546","name":"IO.FS.FileType","line":541,"kind":"inductive","docLink":"./Init/System/IO.html#IO.FS.FileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L538-L539","name":"IO.FS.DirEntry.path","line":538,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.path\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(entry : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L536-L536","name":"IO.FS.instReprDirEntry","line":536,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprDirEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprDirEntry\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprDirEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L535-L535","name":"IO.FS.DirEntry.fileName","line":535,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.fileName\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L534-L534","name":"IO.FS.DirEntry.root","line":534,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.root\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L533-L533","name":"IO.FS.DirEntry.mk","line":533,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.DirEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(root : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L533-L536","name":"IO.FS.DirEntry","line":533,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.DirEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L530-L531","name":"IO.FS.Stream.putStrLn","line":530,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.putStrLn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.putStrLn\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">putStrLn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(strm : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L526-L528","name":"IO.FS.writeFile","line":526,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.writeFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.writeFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">writeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(content : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L522-L524","name":"IO.FS.writeBinFile","line":522,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.writeBinFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.writeBinFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">writeBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(content : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L510-L519","name":"IO.FS.lines.read","line":510,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.lines.read","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.lines.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">lines</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lines : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L508-L520","name":"IO.FS.lines","line":508,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.lines","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.lines\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">lines</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L502-L506","name":"IO.FS.Handle.readToEnd","line":502,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readToEnd\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readToEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L499-L500","name":"IO.FS.Handle.readBinToEnd","line":499,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEnd\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L491-L496","name":"IO.FS.Handle.readBinToEndInto.loop","line":491,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEndInto.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEndInto.loop\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEndInto</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L490-L497","name":"IO.FS.Handle.readBinToEndInto","line":490,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEndInto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEndInto\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEndInto</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(buf : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L487-L488","name":"IO.FS.Handle.putStrLn","line":487,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.putStrLn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.putStrLn\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">putStrLn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L483-L485","name":"IO.FS.withFile","line":483,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L479-L479","name":"IO.currentDir","line":479,"kind":"opaque","docLink":"./Init/System/IO.html#IO.currentDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.currentDir\"><span class=\"name\">IO</span>.<span class=\"name\">currentDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L478-L478","name":"IO.appPath","line":478,"kind":"opaque","docLink":"./Init/System/IO.html#IO.appPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.appPath\"><span class=\"name\">IO</span>.<span class=\"name\">appPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L477-L477","name":"IO.getEnv","line":477,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getEnv\"><span class=\"name\">IO</span>.<span class=\"name\">getEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(var : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L465-L473","name":"IO.FS.createTempDir","line":465,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createTempDir","doc":"Creates a temporary directory in the most secure manner possible. There are no race conditions in the\ndirectory’s creation. The directory is readable and writable only by the creating user ID.\n\nReturns the new directory's path.\n\nIt is the caller's job to remove the directory after use.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createTempDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createTempDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L455-L463","name":"IO.FS.createTempFile","line":455,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createTempFile","doc":"Creates a temporary file in the most secure manner possible. There are no race conditions in the\nfile’s creation. The file is readable and writable only by the creating user ID. Additionally\non UNIX style platforms the file is executable by nobody. The function returns both a `Handle`\nto the already opened file as well as its `FilePath`.\n\nNote that it is the caller's job to remove the file after use.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createTempFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createTempFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L447-L453","name":"IO.FS.rename","line":447,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.rename","doc":"Moves a file or directory `old` to the new location `new`.\n\nThis function coincides with the [POSIX `rename` function](https://pubs.opengroup.org/onlinepubs/9699919799/functions/rename.html),\nsee there for more information.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.rename\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">rename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(old : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(new : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L444-L444","name":"IO.FS.createDir","line":444,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L442-L443","name":"IO.FS.removeDir","line":442,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeDir","doc":"Remove given directory. Fails if not empty; see also `IO.FS.removeDirAll`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L441-L441","name":"IO.FS.removeFile","line":441,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L434-L440","name":"IO.FS.realPath","line":434,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.realPath","doc":"Resolves a pathname to an absolute pathname with no '.', '..', or symbolic links.\n\nThis function coincides with the [POSIX `realpath` function](https://pubs.opengroup.org/onlinepubs/9699919799/functions/realpath.html),\nsee there for more information.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.realPath\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">realPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L430-L430","name":"IO.FS.Handle.putStr","line":430,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.putStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.putStr\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">putStr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L424-L429","name":"IO.FS.Handle.getLine","line":424,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.getLine","doc":"Read text up to (including) the next line break from the handle.\nIf the returned string is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a handle, so further reads may block and return more data.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.getLine\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L422-L422","name":"IO.FS.Handle.write","line":422,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(buffer : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L416-L421","name":"IO.FS.Handle.read","line":416,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.read","doc":"Read up to the given number of bytes from the handle.\nIf the returned array is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a handle, so further reads may block and return more data.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bytes : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L407-L415","name":"IO.FS.Handle.truncate","line":407,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.truncate","doc":"Truncates the handle to the read/write cursor.\n\nDoes not automatically flush. Usually this is fine because the read/write\ncursor includes buffered writes. However, the combination of buffered writes,\nthen `rewind`, then `truncate`, then close may lead to a file with content.\nIf unsure, flush before truncating.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.truncate\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">truncate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L405-L406","name":"IO.FS.Handle.rewind","line":405,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.rewind","doc":"Rewinds the read/write cursor to the beginning of the handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.rewind\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">rewind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L404-L404","name":"IO.FS.Handle.flush","line":404,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.flush","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.flush\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">flush</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L401-L402","name":"IO.FS.Handle.isTty","line":401,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.isTty","doc":"Returns true if a handle refers to a Windows console or Unix terminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.isTty\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">isTty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L395-L399","name":"IO.FS.Handle.unlock","line":395,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.unlock","doc":"Releases any previously acquired lock on the handle.\nWill succeed even if no lock has been acquired.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.unlock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">unlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L387-L394","name":"IO.FS.Handle.tryLock","line":387,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.tryLock","doc":"Tries to acquire an exclusive or shared lock on the handle.\nWill NOT block for the lock, but instead return `false`.\n\n**NOTE:** Acquiring a exclusive lock while already possessing a shared lock\nwill NOT reliably succeed (i.e., it works on Unix but not on Windows).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.tryLock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">tryLock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exclusive : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L379-L386","name":"IO.FS.Handle.lock","line":379,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.lock","doc":"Acquires an exclusive or shared lock on the handle.\nWill block to wait for the lock if necessary.\n\n**NOTE:** Acquiring a exclusive lock while already possessing a shared lock\nwill NOT reliably succeed (i.e., it works on Unix but not on Windows).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.lock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">lock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exclusive : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L377-L377","name":"IO.FS.Handle.mk","line":377,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L367-L371","name":"IO.iterate","line":367,"kind":"opaque","docLink":"./Init/System/IO.html#IO.iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.iterate\"><span class=\"name\">IO</span>.<span class=\"name\">iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L364-L365","name":"IO.setStderr","line":364,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStderr","doc":"Replaces the stderr stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStderr\"><span class=\"name\">IO</span>.<span class=\"name\">setStderr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L362-L363","name":"IO.setStdout","line":362,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStdout","doc":"Replaces the stdout stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStdout\"><span class=\"name\">IO</span>.<span class=\"name\">setStdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L360-L361","name":"IO.setStdin","line":360,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStdin","doc":"Replaces the stdin stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStdin\"><span class=\"name\">IO</span>.<span class=\"name\">setStdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L358-L358","name":"IO.getStderr","line":358,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStderr\"><span class=\"name\">IO</span>.<span class=\"name\">getStderr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L357-L357","name":"IO.getStdout","line":357,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStdout\"><span class=\"name\">IO</span>.<span class=\"name\">getStdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L356-L356","name":"IO.getStdin","line":356,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStdin\"><span class=\"name\">IO</span>.<span class=\"name\">getStdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L352-L352","name":"IO.FS.instInhabitedStream","line":352,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instInhabitedStream","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instInhabitedStream\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instInhabitedStream</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L351-L351","name":"IO.FS.Stream.isTty","line":351,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.isTty","doc":"Returns true if a stream refers to a Windows console or Unix terminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.isTty\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">isTty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L349-L349","name":"IO.FS.Stream.putStr","line":349,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.putStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.putStr\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">putStr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L348-L348","name":"IO.FS.Stream.getLine","line":348,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.getLine","doc":"Read text up to (including) the next line break from the stream.\nIf the returned string is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a stream, so further reads may block and return more data.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.getLine\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L342-L342","name":"IO.FS.Stream.write","line":342,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L341-L341","name":"IO.FS.Stream.read","line":341,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.read","doc":"Read up to the given number of bytes from the stream.\nIf the returned array is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a stream, so further reads may block and return more data.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L335-L335","name":"IO.FS.Stream.flush","line":335,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.flush","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.flush\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">flush</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L334-L334","name":"IO.FS.Stream.mk","line":334,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Stream.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(flush : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(read : <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(write : <span class=\"fn\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getLine : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(putStr : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isTty : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L331-L352","name":"IO.FS.Stream","line":331,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Stream","doc":"A pure-Lean abstraction of POSIX streams. We use `Stream`s for the standard streams stdin/stdout/stderr so we can\ncapture output of `#eval` commands into memory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L329-L329","name":"IO.FS.Handle","line":329,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L319-L327","name":"IO.FS.Mode.append","line":319,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.append","doc":"File opened for writing.\nOn open, create a new file if it does not exist.\nThe stream is positioned at the end of the file.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_APPEND`\n* `fdopen` mode: `a`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.append\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L310-L318","name":"IO.FS.Mode.readWrite","line":310,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.readWrite","doc":"File opened for reading and writing.\nOn open, the stream is positioned at the beginning of the file.\nErrors if the file does not exist.\n\n* `open` flags: `O_RDWR`\n* `fdopen` mode: `r+`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.readWrite\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">readWrite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L301-L309","name":"IO.FS.Mode.writeNew","line":301,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.writeNew","doc":"New file opened for writing.\nOn open, create a new file with the stream positioned at the start.\nErrors if the file already exists.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_TRUNC | O_EXCL`\n* `fdopen` mode: `w`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.writeNew\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">writeNew</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L292-L300","name":"IO.FS.Mode.write","line":292,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.write","doc":"File opened for writing.\nOn open, truncate an existing file to zero length or create a new file.\nThe stream is positioned at the beginning of the file.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_TRUNC`\n* `fdopen` mode: `w`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L283-L291","name":"IO.FS.Mode.read","line":283,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.read","doc":"File opened for reading.\nOn open, the stream is positioned at the beginning of the file.\nErrors if the file does not exist.\n\n* `open` flags: `O_RDONLY`\n* `fdopen` mode: `r`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L267-L327","name":"IO.FS.Mode","line":267,"kind":"inductive","docLink":"./Init/System/IO.html#IO.FS.Mode","doc":"The mode of a file handle (i.e., a set of `open` flags and an `fdopen` mode).\n\nAll modes do not translate line endings (i.e., `O_BINARY` on Windows) and\nare not inherited across process creation (i.e., `O_NOINHERIT` on Windows,\n`O_CLOEXEC` elsewhere).\n\n**References:**\n* Windows:\n  [`_open`](https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/open-wopen?view=msvc-170),\n  [`_fdopen`](https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fdopen-wfdopen?view=msvc-170)\n* Linux:\n  [`open`](https://linux.die.net/man/2/open),\n  [`fdopen`](https://linux.die.net/man/3/fdopen)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L260-L265","name":"IO.addHeartbeats","line":260,"kind":"opaque","docLink":"./Init/System/IO.html#IO.addHeartbeats","doc":"Adjusts the heartbeat counter of the current thread by the given amount. This can be useful to give\nallocation-avoiding code additional \"weight\" and is also used to adjust the counter after resuming\nfrom a snapshot.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.addHeartbeats\"><span class=\"name\">IO</span>.<span class=\"name\">addHeartbeats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(count : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L257-L258","name":"IO.getNumHeartbeats","line":257,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getNumHeartbeats","doc":"Helper method for implementing \"deterministic\" timeouts. It is the number of \"small\" memory allocations performed by the current execution thread. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getNumHeartbeats\"><span class=\"name\">IO</span>.<span class=\"name\">getNumHeartbeats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L252-L255","name":"IO.waitAny","line":252,"kind":"opaque","docLink":"./Init/System/IO.html#IO.waitAny","doc":"Wait until any of the tasks in the given list has finished, then return its result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.waitAny\"><span class=\"name\">IO</span>.<span class=\"name\">waitAny</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">tasks</span>.length</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span>)</span> <a href=\"./Init/System/IO.html#_auto._@.Init.System.IO._hyg.1713\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L248-L250","name":"IO.wait","line":248,"kind":"opaque","docLink":"./Init/System/IO.html#IO.wait","doc":"Wait for the task to finish, then return its result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.wait\"><span class=\"name\">IO</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L244-L246","name":"IO.hasFinished","line":244,"kind":"def","docLink":"./Init/System/IO.html#IO.hasFinished","doc":"Check if the task has finished execution, at which point calling `Task.get` will return immediately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.hasFinished\"><span class=\"name\">IO</span>.<span class=\"name\">hasFinished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(task : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L241-L242","name":"IO.getTaskState","line":241,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getTaskState","doc":"Returns current state of the `Task` in the Lean runtime's task manager. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">getTaskState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L239-L239","name":"IO.instToStringTaskState","line":239,"kind":"instance","docLink":"./Init/System/IO.html#IO.instToStringTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instToStringTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instToStringTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L234-L237","name":"IO.TaskState.toString","line":234,"kind":"def","docLink":"./Init/System/IO.html#IO.TaskState.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.toString\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L232-L232","name":"IO.instMaxTaskState","line":232,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMaxTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMaxTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instMaxTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L231-L231","name":"IO.instMinTaskState","line":231,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMinTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMinTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instMinTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L230-L230","name":"IO.instLETaskState","line":230,"kind":"instance","docLink":"./Init/System/IO.html#IO.instLETaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instLETaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instLETaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L229-L229","name":"IO.instLTTaskState","line":229,"kind":"instance","docLink":"./Init/System/IO.html#IO.instLTTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instLTTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instLTTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L227-L227","name":"IO.instOrdTaskState","line":227,"kind":"instance","docLink":"./Init/System/IO.html#IO.instOrdTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instOrdTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instOrdTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L227-L227","name":"IO.instDecidableEqTaskState","line":227,"kind":"instance","docLink":"./Init/System/IO.html#IO.instDecidableEqTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instDecidableEqTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instDecidableEqTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L227-L227","name":"IO.instReprTaskState","line":227,"kind":"instance","docLink":"./Init/System/IO.html#IO.instReprTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instReprTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instReprTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L227-L227","name":"IO.instInhabitedTaskState","line":227,"kind":"instance","docLink":"./Init/System/IO.html#IO.instInhabitedTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instInhabitedTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instInhabitedTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L222-L226","name":"IO.TaskState.finished","line":222,"kind":"ctor","docLink":"./Init/System/IO.html#IO.TaskState.finished","doc":"The `Task` has finished running and its result is available.\nCalling `Task.get` or `IO.wait` on the task will not block.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.finished\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">finished</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L217-L221","name":"IO.TaskState.running","line":217,"kind":"ctor","docLink":"./Init/System/IO.html#IO.TaskState.running","doc":"The `Task` is actively running on a thread or,\nin the case of a `Promise`, waiting for a call to `IO.Promise.resolve`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.running\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">running</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L211-L216","name":"IO.TaskState.waiting","line":211,"kind":"ctor","docLink":"./Init/System/IO.html#IO.TaskState.waiting","doc":"The `Task` is waiting to be run.\nIt can be waiting for dependencies to complete or\nsitting in the task manager queue waiting for a thread to run on.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.waiting\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">waiting</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L209-L227","name":"IO.TaskState","line":209,"kind":"inductive","docLink":"./Init/System/IO.html#IO.TaskState","doc":"The current state of a `Task` in the Lean runtime's task manager. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L206-L207","name":"IO.cancel","line":206,"kind":"opaque","docLink":"./Init/System/IO.html#IO.cancel","doc":"Request cooperative cancellation of the task. The task must explicitly call `IO.checkCanceled` to react to the cancellation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.cancel\"><span class=\"name\">IO</span>.<span class=\"name\">cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L203-L204","name":"IO.checkCanceled","line":203,"kind":"opaque","docLink":"./Init/System/IO.html#IO.checkCanceled","doc":"Check if the task's cancellation flag has been set by calling `IO.cancel` or dropping the last reference to the task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.checkCanceled\"><span class=\"name\">IO</span>.<span class=\"name\">checkCanceled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L198-L201","name":"IO.mapTasks","line":198,"kind":"def","docLink":"./Init/System/IO.html#IO.mapTasks","doc":"`IO` specialization of `EIO.mapTasks`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mapTasks\"><span class=\"name\">IO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L193-L196","name":"IO.bindTask","line":193,"kind":"def","docLink":"./Init/System/IO.html#IO.bindTask","doc":"`IO` specialization of `EIO.bindTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.bindTask\"><span class=\"name\">IO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L188-L191","name":"IO.mapTask","line":188,"kind":"def","docLink":"./Init/System/IO.html#IO.mapTask","doc":"`IO` specialization of `EIO.mapTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mapTask\"><span class=\"name\">IO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L184-L186","name":"IO.asTask","line":184,"kind":"def","docLink":"./Init/System/IO.html#IO.asTask","doc":"`IO` specialization of `EIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.asTask\"><span class=\"name\">IO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">α</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L180-L182","name":"IO.sleep","line":180,"kind":"def","docLink":"./Init/System/IO.html#IO.sleep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.sleep\"><span class=\"name\">IO</span>.<span class=\"name\">sleep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ms : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L176-L178","name":"IO.getRandomBytes","line":176,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getRandomBytes","doc":"Read bytes from a system entropy source. Not guaranteed to be cryptographically secure.\nIf `nBytes = 0`, return immediately with an empty buffer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getRandomBytes\"><span class=\"name\">IO</span>.<span class=\"name\">getRandomBytes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nBytes : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L173-L174","name":"IO.monoNanosNow","line":173,"kind":"opaque","docLink":"./Init/System/IO.html#IO.monoNanosNow","doc":"Monotonically increasing time since an unspecified past point in nanoseconds. No relation to wall clock time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.monoNanosNow\"><span class=\"name\">IO</span>.<span class=\"name\">monoNanosNow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L170-L171","name":"IO.monoMsNow","line":170,"kind":"opaque","docLink":"./Init/System/IO.html#IO.monoMsNow","doc":"Monotonically increasing time since an unspecified past point in milliseconds. No relation to wall clock time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.monoMsNow\"><span class=\"name\">IO</span>.<span class=\"name\">monoMsNow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L167-L168","name":"IO.lazyPure","line":167,"kind":"def","docLink":"./Init/System/IO.html#IO.lazyPure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.lazyPure\"><span class=\"name\">IO</span>.<span class=\"name\">lazyPure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L162-L165","name":"IO.ofExcept","line":162,"kind":"def","docLink":"./Init/System/IO.html#IO.ofExcept","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.ofExcept\"><span class=\"name\">IO</span>.<span class=\"name\">ofExcept</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">ε</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L153-L156","name":"EIO.mapTasks","line":153,"kind":"def","docLink":"./Init/System/IO.html#EIO.mapTasks","doc":"`EIO` specialization of `BaseIO.mapTasks`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.mapTasks\"><span class=\"name\">EIO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L147-L151","name":"EIO.bindTask","line":147,"kind":"def","docLink":"./Init/System/IO.html#EIO.bindTask","doc":"`EIO` specialization of `BaseIO.bindTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.bindTask\"><span class=\"name\">EIO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L142-L145","name":"EIO.mapTask","line":142,"kind":"def","docLink":"./Init/System/IO.html#EIO.mapTask","doc":"`EIO` specialization of `BaseIO.mapTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.mapTask\"><span class=\"name\">EIO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L138-L140","name":"EIO.asTask","line":138,"kind":"def","docLink":"./Init/System/IO.html#EIO.asTask","doc":"`EIO` specialization of `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.asTask\"><span class=\"name\">EIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L129-L132","name":"BaseIO.mapTasks.go","line":129,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.mapTasks.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTasks.go\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTasks</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L125-L132","name":"BaseIO.mapTasks","line":125,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.mapTasks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTasks\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L119-L123","name":"BaseIO.bindTask","line":119,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.bindTask","doc":"See `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.bindTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L113-L117","name":"BaseIO.mapTask","line":113,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.mapTask","doc":"See `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L101-L111","name":"BaseIO.asTask","line":101,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.asTask","doc":"Run `act` in a separate `Task`.\nThis is similar to Haskell's [`unsafeInterleaveIO`](http://hackage.haskell.org/package/base-4.14.0.0/docs/System-IO-Unsafe.html#v:unsafeInterleaveIO),\nexcept that the `Task` is started eagerly as usual. Thus pure accesses to the `Task` do not influence the impure `act`\ncomputation.\nUnlike with pure tasks created by `Task.spawn`, tasks created by this function will be run even if the last reference\nto the task is dropped. The `act` should manually check for cancellation via `IO.checkCanceled` if it wants to react\nto that. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.asTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L92-L97","name":"IO.initializing","line":92,"kind":"opaque","docLink":"./Init/System/IO.html#IO.initializing","doc":"Programs can execute IO actions during initialization that occurs before\nthe `main` function is executed. The attribute `[init <action>]` specifies\nwhich IO action is executed to set the value of an opaque constant.\n\nThe action `initializing` returns `true` iff it is invoked during initialization. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.initializing\"><span class=\"name\">IO</span>.<span class=\"name\">initializing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L90-L90","name":"allocprof","line":90,"kind":"opaque","docLink":"./Init/System/IO.html#allocprof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#allocprof\"><span class=\"name\">allocprof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L89-L89","name":"timeit","line":89,"kind":"opaque","docLink":"./Init/System/IO.html#timeit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#timeit\"><span class=\"name\">timeit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L86-L87","name":"unsafeIO","line":86,"kind":"def","docLink":"./Init/System/IO.html#unsafeIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeIO\"><span class=\"name\">unsafeIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L83-L84","name":"unsafeEIO","line":83,"kind":"def","docLink":"./Init/System/IO.html#unsafeEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeEIO\"><span class=\"name\">unsafeEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L79-L81","name":"unsafeBaseIO","line":79,"kind":"def","docLink":"./Init/System/IO.html#unsafeBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeBaseIO\"><span class=\"name\">unsafeBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L72-L73","name":"IO.toEIO","line":72,"kind":"def","docLink":"./Init/System/IO.html#IO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.toEIO\"><span class=\"name\">IO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> → <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L69-L70","name":"EIO.toIO'","line":69,"kind":"def","docLink":"./Init/System/IO.html#EIO.toIO'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toIO'\"><span class=\"name\">EIO</span>.<span class=\"name\">toIO'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L66-L67","name":"EIO.toIO","line":66,"kind":"def","docLink":"./Init/System/IO.html#EIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toIO\"><span class=\"name\">EIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ε</span> → <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L63-L64","name":"BaseIO.toIO","line":63,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.toIO\"><span class=\"name\">BaseIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L61-L61","name":"IO","line":61,"kind":"def","docLink":"./Init/System/IO.html#IO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO\"><span class=\"name\">IO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L54-L58","name":"EIO.catchExceptions","line":54,"kind":"def","docLink":"./Init/System/IO.html#EIO.catchExceptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.catchExceptions\"><span class=\"name\">EIO</span>.<span class=\"name\">catchExceptions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L48-L52","name":"EIO.toBaseIO","line":48,"kind":"def","docLink":"./Init/System/IO.html#EIO.toBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toBaseIO\"><span class=\"name\">EIO</span>.<span class=\"name\">toBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L46-L46","name":"instMonadLiftBaseIOEIO","line":46,"kind":"instance","docLink":"./Init/System/IO.html#instMonadLiftBaseIOEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadLiftBaseIOEIO\"><span class=\"name\">instMonadLiftBaseIOEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L41-L44","name":"BaseIO.toEIO","line":41,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.toEIO\"><span class=\"name\">BaseIO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L39-L39","name":"instMonadFinallyBaseIO","line":39,"kind":"instance","docLink":"./Init/System/IO.html#instMonadFinallyBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadFinallyBaseIO\"><span class=\"name\">instMonadFinallyBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L38-L38","name":"instMonadBaseIO","line":38,"kind":"instance","docLink":"./Init/System/IO.html#instMonadBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadBaseIO\"><span class=\"name\">instMonadBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L35-L36","name":"BaseIO","line":35,"kind":"def","docLink":"./Init/System/IO.html#BaseIO","doc":"An `EIO` monad that cannot throw exceptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO\"><span class=\"name\">BaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L33-L33","name":"instInhabitedEIO","line":33,"kind":"instance","docLink":"./Init/System/IO.html#instInhabitedEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instInhabitedEIO\"><span class=\"name\">instInhabitedEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">ε</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L32-L32","name":"instOrElseEIO","line":32,"kind":"instance","docLink":"./Init/System/IO.html#instOrElseEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instOrElseEIO\"><span class=\"name\">instOrElseEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L31-L31","name":"instMonadExceptOfEIO","line":31,"kind":"instance","docLink":"./Init/System/IO.html#instMonadExceptOfEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadExceptOfEIO\"><span class=\"name\">instMonadExceptOfEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L30-L30","name":"instMonadFinallyEIO","line":30,"kind":"instance","docLink":"./Init/System/IO.html#instMonadFinallyEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadFinallyEIO\"><span class=\"name\">instMonadFinallyEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L29-L29","name":"instMonadEIO","line":29,"kind":"instance","docLink":"./Init/System/IO.html#instMonadEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadEIO\"><span class=\"name\">instMonadEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L27-L27","name":"EIO","line":27,"kind":"def","docLink":"./Init/System/IO.html#EIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO\"><span class=\"name\">EIO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/System/IO.lean#L14-L18","name":"IO.RealWorld","line":14,"kind":"def","docLink":"./Init/System/IO.html#IO.RealWorld","doc":"Like <https://hackage.haskell.org/package/ghc-Prim-0.5.2.0/docs/GHC-Prim.html#t:RealWorld>.\nMakes sure we never reorder `IO` operations.\n\nTODO: mark opaque "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.RealWorld\"><span class=\"name\">IO</span>.<span class=\"name\">RealWorld</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}