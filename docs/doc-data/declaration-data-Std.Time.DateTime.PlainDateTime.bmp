{"name":"Std.Time.DateTime.PlainDateTime","instances":[{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instInhabitedPlainDateTime","className":"Inhabited"},{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instBEqPlainDateTime","className":"BEq"},{"typeNames":["Std.Time.PlainDateTime"],"name":"Std.Time.instReprPlainDateTime","className":"Repr"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Day.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Day.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Week.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_1","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Week.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_1","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Hour.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_2","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Hour.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_2","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Minute.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_3","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Minute.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_3","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Millisecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_4","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Millisecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_4","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Second.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_5","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Second.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_5","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Nanosecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddOffset_6","className":"HAdd"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Nanosecond.Offset","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHSubOffset_6","className":"HSub"},{"typeNames":["Std.Time.PlainDateTime","Std.Time.Duration","Std.Time.PlainDateTime"],"name":"Std.Time.PlainDateTime.instHAddDuration","className":"HAdd"}],"imports":["Std.Time.Date","Std.Time.Time","Std.Time.Internal","Std.Time.DateTime.Timestamp"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L592-L597","name":"Std.Time.PlainTime.atDate","line":592,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainTime.atDate","doc":"Combines a `PlainTime` and `PlainDate` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainTime.atDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainTime</span>.<span class=\"name\">atDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(time : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L582-L587","name":"Std.Time.PlainDate.atTime","line":582,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDate.atTime","doc":"Combines a `PlainDate` and `PlainTime` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDate.atTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDate</span>.<span class=\"name\">atTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a> → <span class=\"fn\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a> → <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L576-L577","name":"Std.Time.PlainDateTime.instHAddDuration","line":576,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddDuration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddDuration\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddDuration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Duration.html#Std.Time.Duration\">Std.Time.Duration</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L573-L574","name":"Std.Time.PlainDateTime.instHSubOffset_6","line":573,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L570-L571","name":"Std.Time.PlainDateTime.instHAddOffset_6","line":570,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_6\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_6</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L567-L568","name":"Std.Time.PlainDateTime.instHSubOffset_5","line":567,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_5</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L564-L565","name":"Std.Time.PlainDateTime.instHAddOffset_5","line":564,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_5\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_5</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L561-L562","name":"Std.Time.PlainDateTime.instHSubOffset_4","line":561,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L558-L559","name":"Std.Time.PlainDateTime.instHAddOffset_4","line":558,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_4\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L555-L556","name":"Std.Time.PlainDateTime.instHSubOffset_3","line":555,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L552-L553","name":"Std.Time.PlainDateTime.instHAddOffset_3","line":552,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_3\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L549-L550","name":"Std.Time.PlainDateTime.instHSubOffset_2","line":549,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L546-L547","name":"Std.Time.PlainDateTime.instHAddOffset_2","line":546,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_2\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L543-L544","name":"Std.Time.PlainDateTime.instHSubOffset_1","line":543,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L540-L541","name":"Std.Time.PlainDateTime.instHAddOffset_1","line":540,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset_1\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L537-L538","name":"Std.Time.PlainDateTime.instHSubOffset","line":537,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHSubOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHSubOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HSub\">HSub</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L534-L535","name":"Std.Time.PlainDateTime.instHAddOffset","line":534,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.instHAddOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">instHAddOffset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAdd\">HAdd</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a> <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L527-L532","name":"Std.Time.PlainDateTime.atDate","line":527,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atDate","doc":"Combines a `PlainTime` and `PlainDate` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atDate\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">atDate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(time : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L520-L525","name":"Std.Time.PlainDateTime.atTime","line":520,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atTime","doc":"Combines a `PlainDate` and `PlainTime` into a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.atTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">atTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a> → <span class=\"fn\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a> → <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L513-L518","name":"Std.Time.PlainDateTime.quarter","line":513,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.quarter","doc":"Determines the quarter of the year for the given `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.quarter\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">quarter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L506-L511","name":"Std.Time.PlainDateTime.dayOfYear","line":506,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.dayOfYear","doc":"Transforms a tuple of a `PlainDateTime` into a `Day.Ordinal.OfYear`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.dayOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">dayOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal.OfYear\">Std.Time.Day.Ordinal.OfYear</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">date</span>.year</span>.isLeap</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L497-L504","name":"Std.Time.PlainDateTime.alignedWeekOfMonth","line":497,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.alignedWeekOfMonth","doc":"Determines the week of the month for the given `PlainDateTime`. The week of the month is calculated based\non the day of the month and the weekday. Each week starts on Monday because the entire library is\nbased on the Gregorian Calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.alignedWeekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">alignedWeekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal.OfMonth\">Std.Time.Week.Ordinal.OfMonth</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L491-L495","name":"Std.Time.PlainDateTime.weekOfMonth","line":491,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfMonth","doc":"Returns the unaligned week of the month for a `PlainDateTime` (day divided by 7, plus 1).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfMonth\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekOfMonth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L484-L489","name":"Std.Time.PlainDateTime.weekOfYear","line":484,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfYear","doc":"Determines the week of the year for the given `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekOfYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekOfYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Ordinal\">Std.Time.Week.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L477-L482","name":"Std.Time.PlainDateTime.inLeapYear","line":477,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.inLeapYear","doc":"Checks if the `PlainDateTime` is in a leap year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.inLeapYear\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">inLeapYear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L470-L475","name":"Std.Time.PlainDateTime.era","line":470,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.era","doc":"Determines the era of the given `PlainDateTime` based on its year.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L463-L468","name":"Std.Time.PlainDateTime.nanosecond","line":463,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.nanosecond","doc":"Getter for the `Nanosecond.Ordinal` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.nanosecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">nanosecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Std.Time.Nanosecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L456-L461","name":"Std.Time.PlainDateTime.second","line":456,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.second","doc":"Getter for the `Second` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.second\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">second</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Std.Time.Second.Ordinal</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">dt</span>.time</span>.second</span>.fst</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L449-L454","name":"Std.Time.PlainDateTime.millisecond","line":449,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.millisecond","doc":"Getter for the `Millisecond` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.millisecond\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">millisecond</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Std.Time.Millisecond.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L442-L447","name":"Std.Time.PlainDateTime.minute","line":442,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.minute","doc":"Getter for the `Minute` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.minute\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">minute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L435-L440","name":"Std.Time.PlainDateTime.hour","line":435,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.hour","doc":"Getter for the `Hour` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.hour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">hour</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L428-L433","name":"Std.Time.PlainDateTime.weekday","line":428,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekday","doc":"Getter for the `Weekday` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.weekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">weekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L421-L426","name":"Std.Time.PlainDateTime.day","line":421,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.day","doc":"Getter for the `Day` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.day\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">day</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L414-L419","name":"Std.Time.PlainDateTime.month","line":414,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.month","doc":"Getter for the `Month` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.month\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">month</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L407-L412","name":"Std.Time.PlainDateTime.year","line":407,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year","doc":"Getter for the `Year` inside of a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.year\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">year</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L400-L405","name":"Std.Time.PlainDateTime.subNanoseconds","line":400,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subNanoseconds","doc":"Subtracts a `Nanosecond.Offset` from a `PlainDateTime`, adjusting the seconds, minutes, hours, and date if the nanoseconds underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nanos : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L388-L398","name":"Std.Time.PlainDateTime.addNanoseconds","line":388,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addNanoseconds","doc":"Adds a `Nanosecond.Offset` to a `PlainDateTime`, adjusting the seconds, minutes, hours, and date if the nanoseconds overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nanos : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Offset\">Std.Time.Nanosecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L381-L386","name":"Std.Time.PlainDateTime.subMilliseconds","line":381,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMilliseconds","doc":"Subtracts a `Millisecond.Offset` from a `PlainDateTime`, adjusting the second, minute, hour, and date if the milliseconds underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(milliseconds : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L371-L379","name":"Std.Time.PlainDateTime.addMilliseconds","line":371,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMilliseconds","doc":"Adds a `Millisecond.Offset` to a `PlainDateTime`, adjusting the second, minute, hour, and date if the milliseconds overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(milliseconds : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Offset\">Std.Time.Millisecond.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L364-L369","name":"Std.Time.PlainDateTime.subSeconds","line":364,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subSeconds","doc":"Subtracts a `Second.Offset` from a `PlainDateTime`, adjusting the minute, hour, and date if the seconds underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(seconds : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L354-L362","name":"Std.Time.PlainDateTime.addSeconds","line":354,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addSeconds","doc":"Adds a `Second.Offset` to a `PlainDateTime`, adjusting the minute, hour, and date if the seconds overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(seconds : <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Offset\">Std.Time.Second.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L347-L352","name":"Std.Time.PlainDateTime.subMinutes","line":347,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMinutes","doc":"Subtracts a `Minute.Offset` from a `PlainDateTime`, adjusting the hour and date if the minutes underflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(minutes : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L337-L345","name":"Std.Time.PlainDateTime.addMinutes","line":337,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMinutes","doc":"Adds a `Minute.Offset` to a `PlainDateTime`, adjusting the hour and date if the minutes overflow.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(minutes : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Offset\">Std.Time.Minute.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L330-L335","name":"Std.Time.PlainDateTime.subHours","line":330,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subHours","doc":"Subtracts an `Hour.Offset` from a `PlainDateTime`, adjusting the date if the hour underflows.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hours : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L320-L328","name":"Std.Time.PlainDateTime.addHours","line":320,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addHours","doc":"Adds an `Hour.Offset` to a `PlainDateTime`, adjusting the date if the hour overflows.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hours : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L311-L317","name":"Std.Time.PlainDateTime.subYearsClip","line":311,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsClip","doc":"Subtracts a `Year.Offset` from a `PlainDateTime`, adjusting the day to the last valid day of the\nresulting month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L303-L309","name":"Std.Time.PlainDateTime.subYearsRollOver","line":303,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsRollOver","doc":"Subtracts a `Year.Offset` from a `PlainDateTime`, this function rolls over any excess days into the\nfollowing month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L295-L301","name":"Std.Time.PlainDateTime.addYearsClip","line":295,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsClip","doc":"Subtracts a `Month.Offset` from a `PlainDateTime`, rolling over excess days to the following month if\nneeded.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addYearsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L288-L293","name":"Std.Time.PlainDateTime.addYearsRollOver","line":288,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsRollOver","doc":"Adds a `Month.Offset` to a `PlainDateTime`, rolling over excess days to the following month if needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addYearsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addYearsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(years : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L280-L286","name":"Std.Time.PlainDateTime.subMonthsRollOver","line":280,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsRollOver","doc":"Subtracts a `Month.Offset` from a `PlainDateTime`, adjusting the day to the last valid day of the\nresulting month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L274-L278","name":"Std.Time.PlainDateTime.addMonthsRollOver","line":274,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsRollOver","doc":"Adds a `Month.Offset` to a `PlainDateTime`, rolling over excess days to the following month if needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMonthsRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L267-L272","name":"Std.Time.PlainDateTime.subMonthsClip","line":267,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsClip","doc":"Subtracts `Month.Offset` from a `PlainDateTime`, it clips the day to the last valid day of that month.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L260-L265","name":"Std.Time.PlainDateTime.addMonthsClip","line":260,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsClip","doc":"Adds a `Month.Offset` to a `PlainDateTime`, adjusting the day to the last valid day of the resulting\nmonth.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addMonthsClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addMonthsClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(months : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L253-L258","name":"Std.Time.PlainDateTime.subWeeks","line":253,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subWeeks","doc":"Subtracts a `Week.Offset` from a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L246-L251","name":"Std.Time.PlainDateTime.addWeeks","line":246,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addWeeks","doc":"Adds a `Week.Offset` to a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addWeeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addWeeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(weeks : <a href=\"./Std/Time/Date/Unit/Week.html#Std.Time.Week.Offset\">Std.Time.Week.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L239-L244","name":"Std.Time.PlainDateTime.subDays","line":239,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subDays","doc":"Subtracts a `Day.Offset` from a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.subDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">subDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L232-L237","name":"Std.Time.PlainDateTime.addDays","line":232,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addDays","doc":"Adds a `Day.Offset` to a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.addDays\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">addDays</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L225-L230","name":"Std.Time.PlainDateTime.withNanoseconds","line":225,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withNanoseconds","doc":"Creates a new `PlainDateTime` by adjusting the `nano` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withNanoseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withNanoseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nano : <a href=\"./Std/Time/Time/Unit/Nanosecond.html#Std.Time.Nanosecond.Ordinal\">Std.Time.Nanosecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L218-L223","name":"Std.Time.PlainDateTime.withMilliseconds","line":218,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMilliseconds","doc":"Creates a new `PlainDateTime` by adjusting the milliseconds component inside the `nano` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMilliseconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMilliseconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(millis : <a href=\"./Std/Time/Time/Unit/Millisecond.html#Std.Time.Millisecond.Ordinal\">Std.Time.Millisecond.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L211-L216","name":"Std.Time.PlainDateTime.withSeconds","line":211,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withSeconds","doc":"Creates a new `PlainDateTime` by adjusting the `second` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withSeconds\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withSeconds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(second : <span class=\"fn\"><a href=\"./Init/Core.html#Sigma\">Sigma</a> <a href=\"./Std/Time/Time/Unit/Second.html#Std.Time.Second.Ordinal\">Std.Time.Second.Ordinal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L204-L209","name":"Std.Time.PlainDateTime.withMinutes","line":204,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMinutes","doc":"Creates a new `PlainDateTime` by adjusting the `minute` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMinutes\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMinutes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(minute : <a href=\"./Std/Time/Time/Unit/Minute.html#Std.Time.Minute.Ordinal\">Std.Time.Minute.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L197-L202","name":"Std.Time.PlainDateTime.withHours","line":197,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withHours","doc":"Creates a new `PlainDateTime` by adjusting the `hour` component of its `time` to the given value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withHours\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withHours</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hour : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L189-L195","name":"Std.Time.PlainDateTime.withYearRollOver","line":189,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearRollOver","doc":"Creates a new `PlainDateTime` by adjusting the year to the given `year` value. The month and day are rolled\nover to the next valid month and day if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withYearRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L181-L187","name":"Std.Time.PlainDateTime.withYearClip","line":181,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearClip","doc":"Creates a new `PlainDateTime` by adjusting the year to the given `year` value. The month and day\nremain unchanged, with any out-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withYearClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withYearClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L173-L179","name":"Std.Time.PlainDateTime.withMonthRollOver","line":173,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthRollOver","doc":"Creates a new `PlainDateTime` by adjusting the month to the given `month` value.\nThe day is rolled over to the next valid month if necessary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMonthRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L165-L171","name":"Std.Time.PlainDateTime.withMonthClip","line":165,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthClip","doc":"Creates a new `PlainDateTime` by adjusting the month to the given `month` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withMonthClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withMonthClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L157-L163","name":"Std.Time.PlainDateTime.withDaysRollOver","line":157,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysRollOver","doc":"Creates a new `PlainDateTime` by adjusting the day of the month to the given `days` value, with any\nout-of-range days rolled over to the next month or year as needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysRollOver\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withDaysRollOver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L149-L155","name":"Std.Time.PlainDateTime.withDaysClip","line":149,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysClip","doc":"Creates a new `PlainDateTime` by adjusting the day of the month to the given `days` value, with any\nout-of-range days clipped to the nearest valid date.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withDaysClip\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withDaysClip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L143-L147","name":"Std.Time.PlainDateTime.withWeekday","line":143,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withWeekday","doc":"Sets the `PlainDateTime` to the specified `desiredWeekday`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.withWeekday\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">withWeekday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(desiredWeekday : <a href=\"./Std/Time/Date/Unit/Weekday.html#Std.Time.Weekday\">Std.Time.Weekday</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L136-L141","name":"Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch","line":136,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch","doc":"Converts a `PlainDateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ofDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(days : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(time : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L129-L134","name":"Std.Time.PlainDateTime.toDaysSinceUNIXEpoch","line":129,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toDaysSinceUNIXEpoch","doc":"Converts a `PlainDateTime` to the number of days since the UNIX epoch.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toDaysSinceUNIXEpoch\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">toDaysSinceUNIXEpoch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pdt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Offset\">Std.Time.Day.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L46-L127","name":"Std.Time.PlainDateTime.ofTimestampAssumingUTC","line":46,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofTimestampAssumingUTC","doc":"Converts a `Timestamp` to a `PlainDateTime`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.ofTimestampAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">ofTimestampAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stamp : <a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Std.Time.Timestamp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L37-L44","name":"Std.Time.PlainDateTime.toTimestampAssumingUTC","line":37,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toTimestampAssumingUTC","doc":"Converts a `PlainDateTime` to a `Timestamp`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.toTimestampAssumingUTC\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">toTimestampAssumingUTC</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dt : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/Timestamp.html#Std.Time.Timestamp\">Std.Time.Timestamp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33","name":"Std.Time.instReprPlainDateTime","line":33,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instReprPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instReprPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33","name":"Std.Time.instBEqPlainDateTime","line":33,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instBEqPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instBEqPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instBEqPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L33-L33","name":"Std.Time.instInhabitedPlainDateTime","line":33,"kind":"instance","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.instInhabitedPlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">instInhabitedPlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L31-L31","name":"Std.Time.PlainDateTime.time","line":31,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time","doc":"The `Time` component of a `PlainTime`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.time\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">time</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L26-L26","name":"Std.Time.PlainDateTime.date","line":26,"kind":"def","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date","doc":"The `Date` component of a `PlainDate`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.date\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">date</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L21-L21","name":"Std.Time.PlainDateTime.mk","line":21,"kind":"ctor","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime.mk\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(date : <a href=\"./Std/Time/Date/PlainDate.html#Std.Time.PlainDate\">Std.Time.PlainDate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(time : <a href=\"./Std/Time/Time/PlainTime.html#Std.Time.PlainTime\">Std.Time.PlainTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\">Std.Time.PlainDateTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/DateTime/PlainDateTime.lean#L18-L33","name":"Std.Time.PlainDateTime","line":18,"kind":"structure","docLink":"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime","doc":"Represents a date and time with components for Year, Month, Day, Hour, Minute, Second, and Nanosecond.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/DateTime/PlainDateTime.html#Std.Time.PlainDateTime\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">PlainDateTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}