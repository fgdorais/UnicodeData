{"name":"Lean.Meta.Tactic.LinearArith.Solver","instances":[{"typeNames":["Lean.Meta.Linear.Var"],"name":"Lean.Meta.Linear.instInhabitedVar","className":"Inhabited"},{"typeNames":["Lean.Meta.Linear.Var"],"name":"Lean.Meta.Linear.instOrdVar","className":"Ord"},{"typeNames":["Eq"],"name":"Lean.Meta.Linear.instDecidableEqVar","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.Var"],"name":"Lean.Meta.Linear.instReprVar","className":"Repr"},{"typeNames":["Lean.Meta.Linear.Var"],"name":"Lean.Meta.Linear.instLTVar","className":"LT"},{"typeNames":["LT.lt"],"name":"Lean.Meta.Linear.instDecidableLtVar","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.Assignment"],"name":"Lean.Meta.Linear.instInhabitedAssignment","className":"Inhabited"},{"typeNames":["Lean.Meta.Linear.Poly"],"name":"Lean.Meta.Linear.instInhabitedPoly","className":"Inhabited"},{"typeNames":["Lean.Meta.Linear.Poly"],"name":"Lean.Meta.Linear.instReprPoly","className":"Repr"},{"typeNames":["Eq"],"name":"Lean.Meta.Linear.instDecidableEqPoly","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.AssumptionId"],"name":"Lean.Meta.Linear.instInhabitedAssumptionId","className":"Inhabited"},{"typeNames":["Eq"],"name":"Lean.Meta.Linear.instDecidableEqAssumptionId","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.AssumptionId"],"name":"Lean.Meta.Linear.instReprAssumptionId","className":"Repr"},{"typeNames":["Lean.Meta.Linear.Justification"],"name":"Lean.Meta.Linear.instInhabitedJustification","className":"Inhabited"},{"typeNames":["Eq"],"name":"Lean.Meta.Linear.instDecidableEqJustification","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.Justification"],"name":"Lean.Meta.Linear.instBEqJustification","className":"BEq"},{"typeNames":["Lean.Meta.Linear.Justification"],"name":"Lean.Meta.Linear.instReprJustification","className":"Repr"},{"typeNames":["Lean.Meta.Linear.CnstrKind"],"name":"Lean.Meta.Linear.instInhabitedCnstrKind","className":"Inhabited"},{"typeNames":["Eq"],"name":"Lean.Meta.Linear.instDecidableEqCnstrKind","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.CnstrKind"],"name":"Lean.Meta.Linear.instBEqCnstrKind","className":"BEq"},{"typeNames":["Lean.Meta.Linear.CnstrKind"],"name":"Lean.Meta.Linear.instReprCnstrKind","className":"Repr"},{"typeNames":["Lean.Meta.Linear.Cnstr"],"name":"Lean.Meta.Linear.instInhabitedCnstr","className":"Inhabited"},{"typeNames":["Eq"],"name":"Lean.Meta.Linear.instDecidableEqCnstr","className":"Decidable"},{"typeNames":["Lean.Meta.Linear.Cnstr"],"name":"Lean.Meta.Linear.instBEqCnstr","className":"BEq"},{"typeNames":["Lean.Meta.Linear.Cnstr"],"name":"Lean.Meta.Linear.instReprCnstr","className":"Repr"},{"typeNames":["Lean.Meta.Linear.State"],"name":"Lean.Meta.Linear.instInhabitedState","className":"Inhabited"}],"imports":["Init.Data.Ord","Init.Data.Array.DecidableEq","Std.Internal.Rat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L254-L271","name":"Lean.Meta.Linear.solve","line":254,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.solve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.solve\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">solve</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\">Lean.Meta.Linear.Result</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L225-L252","name":"Lean.Meta.Linear.resolve","line":225,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.resolve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.resolve\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">resolve</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cl : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cu : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\">Lean.Meta.Linear.Result</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L213-L223","name":"Lean.Meta.Linear.pickAssignment?","line":213,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.pickAssignment?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.pickAssignment?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">pickAssignment?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lower : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lowerIsStrict : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(upper : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(upperIsStrict : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L210-L211","name":"Lean.Meta.Linear.State.assignCurr","line":210,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.assignCurr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.assignCurr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">assignCurr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L207-L208","name":"Lean.Meta.Linear.State.getBestUpperBound?","line":207,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getBestUpperBound?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getBestUpperBound?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">getBestUpperBound?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L204-L205","name":"Lean.Meta.Linear.State.getBestLowerBound?","line":204,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getBestLowerBound?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getBestLowerBound?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">getBestLowerBound?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L202-L202","name":"Lean.Meta.Linear.State.currVar","line":202,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.currVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.currVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">currVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L200-L200","name":"Lean.Meta.Linear.State.getNumVars","line":200,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getNumVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.getNumVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">getNumVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L198-L198","name":"Lean.Meta.Linear.instInhabitedState","line":198,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L197-L197","name":"Lean.Meta.Linear.State.assignment","line":197,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.assignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.assignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">assignment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L196-L196","name":"Lean.Meta.Linear.State.int","line":196,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.int\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L195-L195","name":"Lean.Meta.Linear.State.uppers","line":195,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.uppers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.uppers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">uppers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L194-L194","name":"Lean.Meta.Linear.State.lowers","line":194,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.lowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.lowers\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">lowers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L193-L193","name":"Lean.Meta.Linear.State.mk","line":193,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lowers : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(uppers : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(int : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(assignment : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\">Lean.Meta.Linear.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L193-L198","name":"Lean.Meta.Linear.State","line":193,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L191-L191","name":"Lean.Meta.Linear.Context.int","line":191,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context.int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context.int\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span>.<span class=\"name\">int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context\">Lean.Meta.Linear.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L190-L190","name":"Lean.Meta.Linear.Context.mk","line":190,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(int : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context\">Lean.Meta.Linear.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L190-L191","name":"Lean.Meta.Linear.Context","line":190,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L188-L188","name":"Lean.Meta.Linear.Result.sat","line":188,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.sat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.sat\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Result</span>.<span class=\"name\">sat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\">Lean.Meta.Linear.Result</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L187-L187","name":"Lean.Meta.Linear.Result.timeout","line":187,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.timeout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.timeout\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Result</span>.<span class=\"name\">timeout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\">Lean.Meta.Linear.Result</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L186-L186","name":"Lean.Meta.Linear.Result.unsupported","line":186,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.unsupported","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.unsupported\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Result</span>.<span class=\"name\">unsupported</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\">Lean.Meta.Linear.Result</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L185-L185","name":"Lean.Meta.Linear.Result.unsat","line":185,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.unsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result.unsat\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Result</span>.<span class=\"name\">unsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\">Lean.Meta.Linear.Result</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L184-L188","name":"Lean.Meta.Linear.Result","line":184,"kind":"inductive","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Result\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Result</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L169-L182","name":"Lean.Meta.Linear.getBestBound?","line":169,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.getBestBound?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.getBestBound?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">getBestBound?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isLower : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isInt : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L159-L167","name":"Lean.Meta.Linear.Cnstr.isUnsat","line":159,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.isUnsat\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L148-L157","name":"Lean.Meta.Linear.Cnstr.getBound","line":148,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.getBound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.getBound\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">getBound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L145-L146","name":"Lean.Meta.Linear.Cnstr.isStrict","line":145,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.isStrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.isStrict\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">isStrict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L143-L143","name":"Lean.Meta.Linear.instReprCnstr","line":143,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReprCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L143-L143","name":"Lean.Meta.Linear.instBEqCnstr","line":143,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L143-L143","name":"Lean.Meta.Linear.instDecidableEqCnstr","line":143,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableEqCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L143-L143","name":"Lean.Meta.Linear.instInhabitedCnstr","line":143,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L142-L142","name":"Lean.Meta.Linear.Cnstr.jst","line":142,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.jst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.jst\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">jst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L141-L141","name":"Lean.Meta.Linear.Cnstr.rhs","line":141,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.rhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L140-L140","name":"Lean.Meta.Linear.Cnstr.lhs","line":140,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.lhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L139-L139","name":"Lean.Meta.Linear.Cnstr.kind","line":139,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L138-L138","name":"Lean.Meta.Linear.Cnstr.mk","line":138,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(jst : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\">Lean.Meta.Linear.Cnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L138-L143","name":"Lean.Meta.Linear.Cnstr","line":138,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Cnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Cnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L136-L136","name":"Lean.Meta.Linear.instReprCnstrKind","line":136,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprCnstrKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprCnstrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReprCnstrKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L136-L136","name":"Lean.Meta.Linear.instBEqCnstrKind","line":136,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqCnstrKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqCnstrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqCnstrKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L136-L136","name":"Lean.Meta.Linear.instDecidableEqCnstrKind","line":136,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqCnstrKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqCnstrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableEqCnstrKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L136-L136","name":"Lean.Meta.Linear.instInhabitedCnstrKind","line":136,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedCnstrKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedCnstrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedCnstrKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L135-L135","name":"Lean.Meta.Linear.CnstrKind.le","line":135,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.le\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">CnstrKind</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L135-L135","name":"Lean.Meta.Linear.CnstrKind.lt","line":135,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">CnstrKind</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L135-L135","name":"Lean.Meta.Linear.CnstrKind.div","line":135,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.div\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">CnstrKind</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L135-L135","name":"Lean.Meta.Linear.CnstrKind.eq","line":135,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind.eq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">CnstrKind</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\">Lean.Meta.Linear.CnstrKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L134-L136","name":"Lean.Meta.Linear.CnstrKind","line":134,"kind":"inductive","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.CnstrKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">CnstrKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L132-L132","name":"Lean.Meta.Linear.instReprJustification","line":132,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprJustification","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprJustification\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReprJustification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L132-L132","name":"Lean.Meta.Linear.instBEqJustification","line":132,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqJustification","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instBEqJustification\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqJustification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L132-L132","name":"Lean.Meta.Linear.instDecidableEqJustification","line":132,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqJustification","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqJustification\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableEqJustification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L132-L132","name":"Lean.Meta.Linear.instInhabitedJustification","line":132,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedJustification","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedJustification\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedJustification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L131-L131","name":"Lean.Meta.Linear.Justification.assumption","line":131,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification.assumption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification.assumption\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Justification</span>.<span class=\"name\">assumption</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\">Lean.Meta.Linear.AssumptionId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L130-L130","name":"Lean.Meta.Linear.Justification.combine","line":130,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification.combine\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Justification</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j₁ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j₂ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\">Lean.Meta.Linear.Justification</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L129-L132","name":"Lean.Meta.Linear.Justification","line":129,"kind":"inductive","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Justification\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Justification</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L127-L127","name":"Lean.Meta.Linear.instReprAssumptionId","line":127,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprAssumptionId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprAssumptionId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReprAssumptionId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\">Lean.Meta.Linear.AssumptionId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L127-L127","name":"Lean.Meta.Linear.instDecidableEqAssumptionId","line":127,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqAssumptionId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqAssumptionId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableEqAssumptionId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\">Lean.Meta.Linear.AssumptionId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L127-L127","name":"Lean.Meta.Linear.instInhabitedAssumptionId","line":127,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedAssumptionId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedAssumptionId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedAssumptionId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\">Lean.Meta.Linear.AssumptionId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L126-L126","name":"Lean.Meta.Linear.AssumptionId.id","line":126,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId.id\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">AssumptionId</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\">Lean.Meta.Linear.AssumptionId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L125-L125","name":"Lean.Meta.Linear.AssumptionId.mk","line":125,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">AssumptionId</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\">Lean.Meta.Linear.AssumptionId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L125-L127","name":"Lean.Meta.Linear.AssumptionId","line":125,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.AssumptionId\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">AssumptionId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L116-L123","name":"Lean.Meta.Linear.Poly.eval?","line":116,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.eval?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.eval?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">eval?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L89-L111","name":"Lean.Meta.Linear.Poly.combine.go","line":89,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.combine.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.combine.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combine</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d₁ : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d₂ : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L88-L114","name":"Lean.Meta.Linear.Poly.combine","line":88,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.combine\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d₁ : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d₂ : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L63-L83","name":"Lean.Meta.Linear.Poly.add.go","line":63,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.add.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.add.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">add</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L62-L86","name":"Lean.Meta.Linear.Poly.add","line":62,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L59-L60","name":"Lean.Meta.Linear.Poly.scale","line":59,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.scale","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.scale\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">scale</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L56-L57","name":"Lean.Meta.Linear.Poly.get","line":56,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.get\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">e</span>.size</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L53-L54","name":"Lean.Meta.Linear.Poly.getMaxVar","line":53,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.getMaxVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.getMaxVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">getMaxVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L50-L51","name":"Lean.Meta.Linear.Poly.getMaxVarCoeff","line":50,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.getMaxVarCoeff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.getMaxVarCoeff\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">getMaxVarCoeff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L47-L48","name":"Lean.Meta.Linear.Poly.size","line":47,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L45-L45","name":"Lean.Meta.Linear.instDecidableEqPoly","line":45,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqPoly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableEqPoly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L45-L45","name":"Lean.Meta.Linear.instReprPoly","line":45,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprPoly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReprPoly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L45-L45","name":"Lean.Meta.Linear.instInhabitedPoly","line":45,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedPoly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedPoly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L44-L44","name":"Lean.Meta.Linear.Poly.val","line":44,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L43-L43","name":"Lean.Meta.Linear.Poly.mk","line":43,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\">Lean.Meta.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L43-L45","name":"Lean.Meta.Linear.Poly","line":43,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Poly\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L40-L41","name":"Lean.Meta.Linear.Assignment.take","line":40,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.take","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.take\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span>.<span class=\"name\">take</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L37-L38","name":"Lean.Meta.Linear.Assignment.push","line":37,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.push\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L31-L35","name":"Lean.Meta.Linear.Assignment.get?","line":31,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.get?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.get?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span>.<span class=\"name\">get?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L28-L29","name":"Lean.Meta.Linear.Assignment.size","line":28,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L26-L26","name":"Lean.Meta.Linear.instInhabitedAssignment","line":26,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedAssignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedAssignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedAssignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L25-L25","name":"Lean.Meta.Linear.Assignment.val","line":25,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L24-L24","name":"Lean.Meta.Linear.Assignment.mk","line":24,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Internal/Rat.html#Std.Internal.Rat\">Std.Internal.Rat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\">Lean.Meta.Linear.Assignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L24-L26","name":"Lean.Meta.Linear.Assignment","line":24,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Assignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Assignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L21-L22","name":"Lean.Meta.Linear.instDecidableLtVar","line":21,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableLtVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableLtVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableLtVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L18-L19","name":"Lean.Meta.Linear.instLTVar","line":18,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instLTVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instLTVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instLTVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L16-L16","name":"Lean.Meta.Linear.instReprVar","line":16,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instReprVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instReprVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L16-L16","name":"Lean.Meta.Linear.instDecidableEqVar","line":16,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instDecidableEqVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instDecidableEqVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L16-L16","name":"Lean.Meta.Linear.instOrdVar","line":16,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instOrdVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instOrdVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instOrdVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L16-L16","name":"Lean.Meta.Linear.instInhabitedVar","line":16,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.instInhabitedVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L15-L15","name":"Lean.Meta.Linear.Var.id","line":15,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var.id\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L14-L14","name":"Lean.Meta.Linear.Var.mk","line":14,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\">Lean.Meta.Linear.Var</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Solver.lean#L14-L16","name":"Lean.Meta.Linear.Var","line":14,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Solver.html#Lean.Meta.Linear.Var\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}