{"name":"Std.Time.Date.Unit.Year","instances":[{"typeNames":["Std.Time.Year.Era"],"name":"Std.Time.Year.instReprEra","className":"Repr"},{"typeNames":["Std.Time.Year.Era"],"name":"Std.Time.Year.instInhabitedEra","className":"Inhabited"},{"typeNames":["Std.Time.Year.Era"],"name":"Std.Time.Year.instToStringEra","className":"ToString"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetRepr","className":"Repr"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetBEq","className":"BEq"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetInhabited","className":"Inhabited"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetAdd","className":"Add"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetSub","className":"Sub"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetNeg","className":"Neg"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetLE","className":"LE"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetLT","className":"LT"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOffsetToString","className":"ToString"},{"typeNames":["LE.le"],"name":"Std.Time.Year.instDecidableLeOffset","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Year.instDecidableLtOffset","className":"Decidable"},{"typeNames":["Std.Time.Year.Offset"],"name":"Std.Time.Year.instOfNatOffset","className":"OfNat"}],"imports":["Std.Time.Internal","Std.Internal.Rat","Std.Time.Date.Unit.Day","Std.Time.Date.Unit.Month"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L118-L123","name":"Std.Time.Year.Offset.Valid","line":118,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid","doc":"Checks if the given date is valid for the specified year, month, and day.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.Valid\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">Valid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(month : <a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Ordinal\">Std.Time.Month.Ordinal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(day : <a href=\"./Std/Time/Date/Unit/Day.html#Std.Time.Day.Ordinal\">Std.Time.Day.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L105-L116","name":"Std.Time.Year.Offset.weeks","line":105,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.weeks","doc":"Calculates the number of weeks in the specified `year`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.weeks\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">weeks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">52</span> <span class=\"fn\">53</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L97-L103","name":"Std.Time.Year.Offset.days","line":97,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.days","doc":"Calculates the number of days in the specified `year`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.days\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">days</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">365</span> <span class=\"fn\">366</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L89-L95","name":"Std.Time.Year.Offset.era","line":89,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.era","doc":"Returns the `Era` of the `Year`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">era</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(year : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L82-L87","name":"Std.Time.Year.Offset.isLeap","line":82,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap","doc":"Determines if a year is a leap year in the proleptic Gregorian calendar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.isLeap\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">isLeap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L75-L80","name":"Std.Time.Year.Offset.toMonths","line":75,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toMonths","doc":"Converts the `Year` offset to a `Month` offset.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toMonths\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toMonths</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Month.html#Std.Time.Month.Offset\">Std.Time.Month.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L68-L73","name":"Std.Time.Year.Offset.toInt","line":68,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toInt","doc":"Converts the `Year` offset to an `Int`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.toInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(offset : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L61-L66","name":"Std.Time.Year.Offset.ofInt","line":61,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofInt","doc":"Creates an `Offset` from an integer.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L54-L59","name":"Std.Time.Year.Offset.ofNat","line":54,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofNat","doc":"Creates an `Offset` from a natural number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L50-L50","name":"Std.Time.Year.instOfNatOffset","line":50,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOfNatOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L46-L48","name":"Std.Time.Year.instDecidableLtOffset","line":46,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLtOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLtOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instDecidableLtOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L42-L44","name":"Std.Time.Year.instDecidableLeOffset","line":42,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLeOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instDecidableLeOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instDecidableLeOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetToString","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetLT","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetLE","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetNeg","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetSub","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetAdd","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetInhabited","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetBEq","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L40-L40","name":"Std.Time.Year.instOffsetRepr","line":40,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instOffsetRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instOffsetRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\">Std.Time.Year.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L36-L40","name":"Std.Time.Year.Offset","line":36,"kind":"def","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset","doc":"`Offset` represents a year offset, defined as an `Int`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L31-L34","name":"Std.Time.Year.instToStringEra","line":31,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instToStringEra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instToStringEra\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instToStringEra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L29-L29","name":"Std.Time.Year.instInhabitedEra","line":29,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedEra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instInhabitedEra\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instInhabitedEra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L29-L29","name":"Std.Time.Year.instReprEra","line":29,"kind":"instance","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprEra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.instReprEra\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">instReprEra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L27-L28","name":"Std.Time.Year.Era.ce","line":27,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.ce","doc":"The Common Era (CE), represents dates from year 0 onwards. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.ce\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Era</span>.<span class=\"name\">ce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L24-L25","name":"Std.Time.Year.Era.bce","line":24,"kind":"ctor","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.bce","doc":"The era before the Common Era (BCE), always represents a date before year 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era.bce\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Era</span>.<span class=\"name\">bce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\">Std.Time.Year.Era</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Date/Unit/Year.lean#L20-L29","name":"Std.Time.Year.Era","line":20,"kind":"inductive","docLink":"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era","doc":"Defines the different eras.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Date/Unit/Year.html#Std.Time.Year.Era\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Year</span>.<span class=\"name\">Era</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}