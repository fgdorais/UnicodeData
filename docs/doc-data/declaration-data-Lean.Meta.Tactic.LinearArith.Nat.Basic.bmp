{"name":"Lean.Meta.Tactic.LinearArith.Nat.Basic","instances":[{"typeNames":["Nat.Linear.Expr"],"name":"Lean.Meta.Linear.Nat.instReprExpr_lean","className":"Repr"},{"typeNames":["Nat.Linear.ExprCnstr"],"name":"Lean.Meta.Linear.Nat.instReprExprCnstr_lean","className":"Repr"},{"typeNames":["Nat.Linear.PolyCnstr"],"name":"Lean.Meta.Linear.Nat.instReprPolyCnstr_lean","className":"Repr"},{"typeNames":["Lean.Meta.Linear.Nat.LinearExpr"],"name":"Lean.Meta.Linear.Nat.instToExprLinearExpr","className":"Lean.ToExpr"},{"typeNames":["Lean.Meta.Linear.Nat.LinearCnstr"],"name":"Lean.Meta.Linear.Nat.instToExprLinearCnstr","className":"Lean.ToExpr"}],"imports":["Lean.Meta.Check","Lean.Meta.Offset","Lean.Meta.AppBuilder","Lean.Meta.KExprMap","Lean.Data.RArray"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L151-L152","name":"Lean.Meta.Linear.Nat.reflTrue","line":151,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.reflTrue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.reflTrue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">reflTrue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L145-L149","name":"Lean.Meta.Linear.Nat.toContextExpr","line":145,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.toContextExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.toContextExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">toContextExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L137-L139","name":"Lean.Meta.Linear.Nat.ToLinear.run","line":137,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L114-L135","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?","line":114,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L86-L112","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit","line":86,"kind":"opaque","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearExpr</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L77-L112","name":"Lean.Meta.Linear.Nat.ToLinear.toLinearExpr","line":77,"kind":"opaque","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.toLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L68-L75","name":"Lean.Meta.Linear.Nat.ToLinear.addAsVar","line":68,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.addAsVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.addAsVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">addAsVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\">Lean.Meta.Linear.Nat.ToLinear.M</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L64-L64","name":"Lean.Meta.Linear.Nat.ToLinear.M","line":64,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L62-L62","name":"Lean.Meta.Linear.Nat.ToLinear.State.vars","line":62,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\">Lean.Meta.Linear.Nat.ToLinear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L61-L61","name":"Lean.Meta.Linear.Nat.ToLinear.State.varMap","line":61,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.varMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.varMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">varMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\">Lean.Meta.Linear.Nat.ToLinear.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap\">Lean.Meta.KExprMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L60-L60","name":"Lean.Meta.Linear.Nat.ToLinear.State.mk","line":60,"kind":"ctor","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(varMap : <span class=\"fn\"><a href=\"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap\">Lean.Meta.KExprMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\">Lean.Meta.Linear.Nat.ToLinear.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L60-L62","name":"Lean.Meta.Linear.Nat.ToLinear.State","line":60,"kind":"structure","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.ToLinear.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L52-L56","name":"Lean.Meta.Linear.Nat.LinearCnstr.toArith","line":52,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toArith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toArith\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span>.<span class=\"name\">toArith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L44-L50","name":"Lean.Meta.Linear.Nat.LinearExpr.toArith","line":44,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toArith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toArith\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span>.<span class=\"name\">toArith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L39-L41","name":"Lean.Meta.Linear.Nat.instToExprLinearCnstr","line":39,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instToExprLinearCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L36-L37","name":"Lean.Meta.Linear.Nat.LinearCnstr.toExpr","line":36,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\">Lean.Meta.Linear.Nat.LinearCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L32-L34","name":"Lean.Meta.Linear.Nat.instToExprLinearExpr","line":32,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instToExprLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instToExprLinearExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L23-L30","name":"Lean.Meta.Linear.Nat.LinearExpr.toExpr","line":23,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\">Lean.Meta.Linear.Nat.LinearExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L21-L21","name":"Lean.Meta.Linear.Nat.PolyExpr","line":21,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.PolyExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.PolyExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">PolyExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L20-L20","name":"Lean.Meta.Linear.Nat.LinearCnstr","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L19-L19","name":"Lean.Meta.Linear.Nat.LinearExpr","line":19,"kind":"def","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.LinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L17-L17","name":"Lean.Meta.Linear.Nat.instReprPolyCnstr_lean","line":17,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprPolyCnstr_lean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprPolyCnstr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprPolyCnstr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L16-L16","name":"Lean.Meta.Linear.Nat.instReprExprCnstr_lean","line":16,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExprCnstr_lean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExprCnstr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExprCnstr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Lean/Meta/Tactic/LinearArith/Nat/Basic.lean#L15-L15","name":"Lean.Meta.Linear.Nat.instReprExpr_lean","line":15,"kind":"instance","docLink":"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExpr_lean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/LinearArith/Nat/Basic.html#Lean.Meta.Linear.Nat.instReprExpr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExpr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></span></div></div>"}]}