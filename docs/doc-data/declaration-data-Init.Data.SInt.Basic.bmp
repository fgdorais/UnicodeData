{"name":"Init.Data.SInt.Basic","instances":[{"typeNames":["Int8"],"name":"instToStringInt8","className":"ToString"},{"typeNames":["Int8"],"name":"instOfNatInt8","className":"OfNat"},{"typeNames":["Int8"],"name":"instNegInt8","className":"Neg"},{"typeNames":["Int8"],"name":"instInhabitedInt8","className":"Inhabited"},{"typeNames":["Int8"],"name":"instAddInt8","className":"Add"},{"typeNames":["Int8"],"name":"instSubInt8","className":"Sub"},{"typeNames":["Int8"],"name":"instMulInt8","className":"Mul"},{"typeNames":["Int8"],"name":"instModInt8","className":"Mod"},{"typeNames":["Int8"],"name":"instDivInt8","className":"Div"},{"typeNames":["Int8"],"name":"instLTInt8","className":"LT"},{"typeNames":["Int8"],"name":"instLEInt8","className":"LE"},{"typeNames":["Int8"],"name":"instComplementInt8","className":"Complement"},{"typeNames":["Int8"],"name":"instAndOpInt8","className":"AndOp"},{"typeNames":["Int8"],"name":"instOrOpInt8","className":"OrOp"},{"typeNames":["Int8"],"name":"instXorInt8","className":"Xor"},{"typeNames":["Int8"],"name":"instShiftLeftInt8","className":"ShiftLeft"},{"typeNames":["Int8"],"name":"instShiftRightInt8","className":"ShiftRight"},{"typeNames":["Eq"],"name":"instDecidableEqInt8","className":"Decidable"},{"typeNames":["LT.lt"],"name":"instDecidableLtInt8","className":"Decidable"},{"typeNames":["LE.le"],"name":"instDecidableLeInt8","className":"Decidable"},{"typeNames":["Int8"],"name":"instMaxInt8","className":"Max"},{"typeNames":["Int8"],"name":"instMinInt8","className":"Min"},{"typeNames":["Int16"],"name":"instToStringInt16","className":"ToString"},{"typeNames":["Int16"],"name":"instOfNatInt16","className":"OfNat"},{"typeNames":["Int16"],"name":"instNegInt16","className":"Neg"},{"typeNames":["Int16"],"name":"instInhabitedInt16","className":"Inhabited"},{"typeNames":["Int16"],"name":"instAddInt16","className":"Add"},{"typeNames":["Int16"],"name":"instSubInt16","className":"Sub"},{"typeNames":["Int16"],"name":"instMulInt16","className":"Mul"},{"typeNames":["Int16"],"name":"instModInt16","className":"Mod"},{"typeNames":["Int16"],"name":"instDivInt16","className":"Div"},{"typeNames":["Int16"],"name":"instLTInt16","className":"LT"},{"typeNames":["Int16"],"name":"instLEInt16","className":"LE"},{"typeNames":["Int16"],"name":"instComplementInt16","className":"Complement"},{"typeNames":["Int16"],"name":"instAndOpInt16","className":"AndOp"},{"typeNames":["Int16"],"name":"instOrOpInt16","className":"OrOp"},{"typeNames":["Int16"],"name":"instXorInt16","className":"Xor"},{"typeNames":["Int16"],"name":"instShiftLeftInt16","className":"ShiftLeft"},{"typeNames":["Int16"],"name":"instShiftRightInt16","className":"ShiftRight"},{"typeNames":["Eq"],"name":"instDecidableEqInt16","className":"Decidable"},{"typeNames":["LT.lt"],"name":"instDecidableLtInt16","className":"Decidable"},{"typeNames":["LE.le"],"name":"instDecidableLeInt16","className":"Decidable"},{"typeNames":["Int16"],"name":"instMaxInt16","className":"Max"},{"typeNames":["Int16"],"name":"instMinInt16","className":"Min"},{"typeNames":["Int32"],"name":"instToStringInt32","className":"ToString"},{"typeNames":["Int32"],"name":"instOfNatInt32","className":"OfNat"},{"typeNames":["Int32"],"name":"instNegInt32","className":"Neg"},{"typeNames":["Int32"],"name":"instInhabitedInt32","className":"Inhabited"},{"typeNames":["Int32"],"name":"instAddInt32","className":"Add"},{"typeNames":["Int32"],"name":"instSubInt32","className":"Sub"},{"typeNames":["Int32"],"name":"instMulInt32","className":"Mul"},{"typeNames":["Int32"],"name":"instModInt32","className":"Mod"},{"typeNames":["Int32"],"name":"instDivInt32","className":"Div"},{"typeNames":["Int32"],"name":"instLTInt32","className":"LT"},{"typeNames":["Int32"],"name":"instLEInt32","className":"LE"},{"typeNames":["Int32"],"name":"instComplementInt32","className":"Complement"},{"typeNames":["Int32"],"name":"instAndOpInt32","className":"AndOp"},{"typeNames":["Int32"],"name":"instOrOpInt32","className":"OrOp"},{"typeNames":["Int32"],"name":"instXorInt32","className":"Xor"},{"typeNames":["Int32"],"name":"instShiftLeftInt32","className":"ShiftLeft"},{"typeNames":["Int32"],"name":"instShiftRightInt32","className":"ShiftRight"},{"typeNames":["Eq"],"name":"instDecidableEqInt32","className":"Decidable"},{"typeNames":["LT.lt"],"name":"instDecidableLtInt32","className":"Decidable"},{"typeNames":["LE.le"],"name":"instDecidableLeInt32","className":"Decidable"},{"typeNames":["Int32"],"name":"instMaxInt32","className":"Max"},{"typeNames":["Int32"],"name":"instMinInt32","className":"Min"},{"typeNames":["Int64"],"name":"instToStringInt64","className":"ToString"},{"typeNames":["Int64"],"name":"instOfNatInt64","className":"OfNat"},{"typeNames":["Int64"],"name":"instNegInt64","className":"Neg"},{"typeNames":["Int64"],"name":"instInhabitedInt64","className":"Inhabited"},{"typeNames":["Int64"],"name":"instAddInt64","className":"Add"},{"typeNames":["Int64"],"name":"instSubInt64","className":"Sub"},{"typeNames":["Int64"],"name":"instMulInt64","className":"Mul"},{"typeNames":["Int64"],"name":"instModInt64","className":"Mod"},{"typeNames":["Int64"],"name":"instDivInt64","className":"Div"},{"typeNames":["Int64"],"name":"instLTInt64","className":"LT"},{"typeNames":["Int64"],"name":"instLEInt64","className":"LE"},{"typeNames":["Int64"],"name":"instComplementInt64","className":"Complement"},{"typeNames":["Int64"],"name":"instAndOpInt64","className":"AndOp"},{"typeNames":["Int64"],"name":"instOrOpInt64","className":"OrOp"},{"typeNames":["Int64"],"name":"instXorInt64","className":"Xor"},{"typeNames":["Int64"],"name":"instShiftLeftInt64","className":"ShiftLeft"},{"typeNames":["Int64"],"name":"instShiftRightInt64","className":"ShiftRight"},{"typeNames":["Eq"],"name":"instDecidableEqInt64","className":"Decidable"},{"typeNames":["LT.lt"],"name":"instDecidableLtInt64","className":"Decidable"},{"typeNames":["LE.le"],"name":"instDecidableLeInt64","className":"Decidable"},{"typeNames":["Int64"],"name":"instMaxInt64","className":"Max"},{"typeNames":["Int64"],"name":"instMinInt64","className":"Min"},{"typeNames":["ISize"],"name":"instToStringISize","className":"ToString"},{"typeNames":["ISize"],"name":"instOfNatISize","className":"OfNat"},{"typeNames":["ISize"],"name":"instNegISize","className":"Neg"},{"typeNames":["ISize"],"name":"instInhabitedISize","className":"Inhabited"},{"typeNames":["ISize"],"name":"instAddISize","className":"Add"},{"typeNames":["ISize"],"name":"instSubISize","className":"Sub"},{"typeNames":["ISize"],"name":"instMulISize","className":"Mul"},{"typeNames":["ISize"],"name":"instModISize","className":"Mod"},{"typeNames":["ISize"],"name":"instDivISize","className":"Div"},{"typeNames":["ISize"],"name":"instLTISize","className":"LT"},{"typeNames":["ISize"],"name":"instLEISize","className":"LE"},{"typeNames":["ISize"],"name":"instComplementISize","className":"Complement"},{"typeNames":["ISize"],"name":"instAndOpISize","className":"AndOp"},{"typeNames":["ISize"],"name":"instOrOpISize","className":"OrOp"},{"typeNames":["ISize"],"name":"instXorISize","className":"Xor"},{"typeNames":["ISize"],"name":"instShiftLeftISize","className":"ShiftLeft"},{"typeNames":["ISize"],"name":"instShiftRightISize","className":"ShiftRight"},{"typeNames":["Eq"],"name":"instDecidableEqISize","className":"Decidable"},{"typeNames":["LT.lt"],"name":"instDecidableLtISize","className":"Decidable"},{"typeNames":["LE.le"],"name":"instDecidableLeISize","className":"Decidable"},{"typeNames":["ISize"],"name":"instMaxISize","className":"Max"},{"typeNames":["ISize"],"name":"instMinISize","className":"Min"}],"imports":["Init.Data.UInt.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L603-L603","name":"instMinISize","line":603,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMinISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMinISize\"><span class=\"name\">instMinISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L602-L602","name":"instMaxISize","line":602,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMaxISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMaxISize\"><span class=\"name\">instMaxISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L601-L601","name":"instDecidableLeISize","line":601,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLeISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLeISize\"><span class=\"name\">instDecidableLeISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L600-L600","name":"instDecidableLtISize","line":600,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLtISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLtISize\"><span class=\"name\">instDecidableLtISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L596-L598","name":"ISize.decLe","line":596,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.decLe\"><span class=\"name\">ISize</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L592-L594","name":"ISize.decLt","line":592,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.decLt\"><span class=\"name\">ISize</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L589-L590","name":"Bool.toISize","line":589,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Bool.toISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Bool.toISize\"><span class=\"name\">Bool</span>.<span class=\"name\">toISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L587-L587","name":"instDecidableEqISize","line":587,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableEqISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableEqISize\"><span class=\"name\">instDecidableEqISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L586-L586","name":"instShiftRightISize","line":586,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftRightISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftRightISize\"><span class=\"name\">instShiftRightISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftRight\">ShiftRight</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L585-L585","name":"instShiftLeftISize","line":585,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftLeftISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftLeftISize\"><span class=\"name\">instShiftLeftISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftLeft\">ShiftLeft</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L584-L584","name":"instXorISize","line":584,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instXorISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instXorISize\"><span class=\"name\">instXorISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Xor\">Xor</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L583-L583","name":"instOrOpISize","line":583,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOrOpISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOrOpISize\"><span class=\"name\">instOrOpISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrOp\">OrOp</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L582-L582","name":"instAndOpISize","line":582,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAndOpISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAndOpISize\"><span class=\"name\">instAndOpISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndOp\">AndOp</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L581-L581","name":"instComplementISize","line":581,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instComplementISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instComplementISize\"><span class=\"name\">instComplementISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Complement\">Complement</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L580-L580","name":"instLEISize","line":580,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLEISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLEISize\"><span class=\"name\">instLEISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L579-L579","name":"instLTISize","line":579,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLTISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLTISize\"><span class=\"name\">instLTISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L578-L578","name":"instDivISize","line":578,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDivISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDivISize\"><span class=\"name\">instDivISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L577-L577","name":"instModISize","line":577,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instModISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instModISize\"><span class=\"name\">instModISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L576-L576","name":"instMulISize","line":576,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMulISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMulISize\"><span class=\"name\">instMulISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L575-L575","name":"instSubISize","line":575,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instSubISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instSubISize\"><span class=\"name\">instSubISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L574-L574","name":"instAddISize","line":574,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAddISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAddISize\"><span class=\"name\">instAddISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L571-L572","name":"instInhabitedISize","line":571,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instInhabitedISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instInhabitedISize\"><span class=\"name\">instInhabitedISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L569-L569","name":"ISize.le","line":569,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.le\"><span class=\"name\">ISize</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L568-L568","name":"ISize.lt","line":568,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.lt\"><span class=\"name\">ISize</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L559-L566","name":"ISize.decEq","line":559,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.decEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.decEq\"><span class=\"name\">ISize</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L556-L557","name":"ISize.complement","line":556,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.complement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.complement\"><span class=\"name\">ISize</span>.<span class=\"name\">complement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L554-L555","name":"ISize.shiftRight","line":554,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.shiftRight\"><span class=\"name\">ISize</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L552-L553","name":"ISize.shiftLeft","line":552,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.shiftLeft\"><span class=\"name\">ISize</span>.<span class=\"name\">shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L550-L551","name":"ISize.xor","line":550,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.xor\"><span class=\"name\">ISize</span>.<span class=\"name\">xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L548-L549","name":"ISize.lor","line":548,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.lor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.lor\"><span class=\"name\">ISize</span>.<span class=\"name\">lor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L546-L547","name":"ISize.land","line":546,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.land","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.land\"><span class=\"name\">ISize</span>.<span class=\"name\">land</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L544-L545","name":"ISize.mod","line":544,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.mod\"><span class=\"name\">ISize</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L542-L543","name":"ISize.div","line":542,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.div\"><span class=\"name\">ISize</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L540-L541","name":"ISize.mul","line":540,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.mul\"><span class=\"name\">ISize</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L538-L539","name":"ISize.sub","line":538,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.sub\"><span class=\"name\">ISize</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L536-L537","name":"ISize.add","line":536,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.add\"><span class=\"name\">ISize</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L533-L534","name":"instNegISize","line":533,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instNegISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instNegISize\"><span class=\"name\">instNegISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L532-L532","name":"instOfNatISize","line":532,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOfNatISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOfNatISize\"><span class=\"name\">instOfNatISize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L529-L530","name":"instToStringISize","line":529,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instToStringISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instToStringISize\"><span class=\"name\">instToStringISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L526-L527","name":"ISize.neg","line":526,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.neg\"><span class=\"name\">ISize</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L524-L525","name":"Int64.toISize","line":524,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toISize\"><span class=\"name\">Int64</span>.<span class=\"name\">toISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L519-L523","name":"Int32.toISize","line":519,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toISize","doc":"Upcast `Int32` to `ISize`. This function is losless as `ISize` is either `Int32` or `Int64`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toISize\"><span class=\"name\">Int32</span>.<span class=\"name\">toISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L514-L518","name":"ISize.toInt64","line":514,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.toInt64","doc":"Upcast `ISize` to `Int64`. This function is losless as `ISize` is either `Int32` or `Int64`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.toInt64\"><span class=\"name\">ISize</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L512-L513","name":"ISize.toInt32","line":512,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.toInt32\"><span class=\"name\">ISize</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L507-L511","name":"ISize.toNat","line":507,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.toNat","doc":"This function has the same behavior as `Int.toNat` for negative numbers.\nIf you want to obtain the 2's complement representation use `toBitVec`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.toNat\"><span class=\"name\">ISize</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L505-L506","name":"ISize.toInt","line":505,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.toInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.toInt\"><span class=\"name\">ISize</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L504-L504","name":"Nat.toISize","line":504,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Nat.toISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Nat.toISize\"><span class=\"name\">Nat</span>.<span class=\"name\">toISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L503-L503","name":"Int.toISize","line":503,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int.toISize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int.toISize\"><span class=\"name\">Int</span>.<span class=\"name\">toISize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L501-L502","name":"ISize.ofNat","line":501,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.ofNat\"><span class=\"name\">ISize</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L499-L500","name":"ISize.ofInt","line":499,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.ofInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.ofInt\"><span class=\"name\">ISize</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L494-L497","name":"ISize.toBitVec","line":494,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.toBitVec","doc":"Obtain the `BitVec` that contains the 2's complement representation of the `ISize`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.toBitVec\"><span class=\"name\">ISize</span>.<span class=\"name\">toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L491-L492","name":"ISize.size","line":491,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.size","doc":"The size of type `ISize`, that is, `2^System.Platform.numBits`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.size\"><span class=\"name\">ISize</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L489-L489","name":"instMinInt64","line":489,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMinInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMinInt64\"><span class=\"name\">instMinInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L488-L488","name":"instMaxInt64","line":488,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMaxInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMaxInt64\"><span class=\"name\">instMaxInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L487-L487","name":"instDecidableLeInt64","line":487,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLeInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLeInt64\"><span class=\"name\">instDecidableLeInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L486-L486","name":"instDecidableLtInt64","line":486,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLtInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLtInt64\"><span class=\"name\">instDecidableLtInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L482-L484","name":"Int64.decLe","line":482,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.decLe\"><span class=\"name\">Int64</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L478-L480","name":"Int64.decLt","line":478,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.decLt\"><span class=\"name\">Int64</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L475-L476","name":"Bool.toInt64","line":475,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Bool.toInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Bool.toInt64\"><span class=\"name\">Bool</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L473-L473","name":"instDecidableEqInt64","line":473,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableEqInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableEqInt64\"><span class=\"name\">instDecidableEqInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L472-L472","name":"instShiftRightInt64","line":472,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftRightInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftRightInt64\"><span class=\"name\">instShiftRightInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftRight\">ShiftRight</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L471-L471","name":"instShiftLeftInt64","line":471,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftLeftInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftLeftInt64\"><span class=\"name\">instShiftLeftInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftLeft\">ShiftLeft</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L470-L470","name":"instXorInt64","line":470,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instXorInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instXorInt64\"><span class=\"name\">instXorInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Xor\">Xor</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L469-L469","name":"instOrOpInt64","line":469,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOrOpInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOrOpInt64\"><span class=\"name\">instOrOpInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrOp\">OrOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L468-L468","name":"instAndOpInt64","line":468,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAndOpInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAndOpInt64\"><span class=\"name\">instAndOpInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndOp\">AndOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L467-L467","name":"instComplementInt64","line":467,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instComplementInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instComplementInt64\"><span class=\"name\">instComplementInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Complement\">Complement</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L466-L466","name":"instLEInt64","line":466,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLEInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLEInt64\"><span class=\"name\">instLEInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L465-L465","name":"instLTInt64","line":465,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLTInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLTInt64\"><span class=\"name\">instLTInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L464-L464","name":"instDivInt64","line":464,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDivInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDivInt64\"><span class=\"name\">instDivInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L463-L463","name":"instModInt64","line":463,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instModInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instModInt64\"><span class=\"name\">instModInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L462-L462","name":"instMulInt64","line":462,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMulInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMulInt64\"><span class=\"name\">instMulInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L461-L461","name":"instSubInt64","line":461,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instSubInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instSubInt64\"><span class=\"name\">instSubInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L460-L460","name":"instAddInt64","line":460,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAddInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAddInt64\"><span class=\"name\">instAddInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L457-L458","name":"instInhabitedInt64","line":457,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instInhabitedInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instInhabitedInt64\"><span class=\"name\">instInhabitedInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L455-L455","name":"Int64.le","line":455,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.le\"><span class=\"name\">Int64</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L454-L454","name":"Int64.lt","line":454,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.lt\"><span class=\"name\">Int64</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L445-L452","name":"Int64.decEq","line":445,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.decEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.decEq\"><span class=\"name\">Int64</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L442-L443","name":"Int64.complement","line":442,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.complement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.complement\"><span class=\"name\">Int64</span>.<span class=\"name\">complement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L440-L441","name":"Int64.shiftRight","line":440,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.shiftRight\"><span class=\"name\">Int64</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L438-L439","name":"Int64.shiftLeft","line":438,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.shiftLeft\"><span class=\"name\">Int64</span>.<span class=\"name\">shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L436-L437","name":"Int64.xor","line":436,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.xor\"><span class=\"name\">Int64</span>.<span class=\"name\">xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L434-L435","name":"Int64.lor","line":434,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.lor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.lor\"><span class=\"name\">Int64</span>.<span class=\"name\">lor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L432-L433","name":"Int64.land","line":432,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.land","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.land\"><span class=\"name\">Int64</span>.<span class=\"name\">land</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L430-L431","name":"Int64.mod","line":430,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.mod\"><span class=\"name\">Int64</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L428-L429","name":"Int64.div","line":428,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.div\"><span class=\"name\">Int64</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L426-L427","name":"Int64.mul","line":426,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.mul\"><span class=\"name\">Int64</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L424-L425","name":"Int64.sub","line":424,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.sub\"><span class=\"name\">Int64</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L422-L423","name":"Int64.add","line":422,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.add\"><span class=\"name\">Int64</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L419-L420","name":"instNegInt64","line":419,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instNegInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instNegInt64\"><span class=\"name\">instNegInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L418-L418","name":"instOfNatInt64","line":418,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOfNatInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOfNatInt64\"><span class=\"name\">instOfNatInt64</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L415-L416","name":"instToStringInt64","line":415,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instToStringInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instToStringInt64\"><span class=\"name\">instToStringInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L412-L413","name":"Int64.neg","line":412,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.neg\"><span class=\"name\">Int64</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L410-L411","name":"Int32.toInt64","line":410,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toInt64\"><span class=\"name\">Int32</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L408-L409","name":"Int16.toInt64","line":408,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toInt64\"><span class=\"name\">Int16</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L406-L407","name":"Int8.toInt64","line":406,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toInt64\"><span class=\"name\">Int8</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L404-L405","name":"Int64.toInt32","line":404,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toInt32\"><span class=\"name\">Int64</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L402-L403","name":"Int64.toInt16","line":402,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toInt16\"><span class=\"name\">Int64</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L400-L401","name":"Int64.toInt8","line":400,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toInt8\"><span class=\"name\">Int64</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L395-L399","name":"Int64.toNat","line":395,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toNat","doc":"This function has the same behavior as `Int.toNat` for negative numbers.\nIf you want to obtain the 2's complement representation use `toBitVec`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toNat\"><span class=\"name\">Int64</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L393-L394","name":"Int64.toInt","line":393,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toInt\"><span class=\"name\">Int64</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L392-L392","name":"Nat.toInt64","line":392,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Nat.toInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Nat.toInt64\"><span class=\"name\">Nat</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L391-L391","name":"Int.toInt64","line":391,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int.toInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int.toInt64\"><span class=\"name\">Int</span>.<span class=\"name\">toInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L389-L390","name":"Int64.ofNat","line":389,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.ofNat\"><span class=\"name\">Int64</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L387-L388","name":"Int64.ofInt","line":387,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.ofInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.ofInt\"><span class=\"name\">Int64</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L382-L385","name":"Int64.toBitVec","line":382,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toBitVec","doc":"Obtain the `BitVec` that contains the 2's complement representation of the `Int64`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toBitVec\"><span class=\"name\">Int64</span>.<span class=\"name\">toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L379-L380","name":"Int64.size","line":379,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.size","doc":"The size of type `Int64`, that is, `2^64 = 18446744073709551616`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.size\"><span class=\"name\">Int64</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L377-L377","name":"instMinInt32","line":377,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMinInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMinInt32\"><span class=\"name\">instMinInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L376-L376","name":"instMaxInt32","line":376,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMaxInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMaxInt32\"><span class=\"name\">instMaxInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L375-L375","name":"instDecidableLeInt32","line":375,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLeInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLeInt32\"><span class=\"name\">instDecidableLeInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L374-L374","name":"instDecidableLtInt32","line":374,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLtInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLtInt32\"><span class=\"name\">instDecidableLtInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L370-L372","name":"Int32.decLe","line":370,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.decLe\"><span class=\"name\">Int32</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L366-L368","name":"Int32.decLt","line":366,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.decLt\"><span class=\"name\">Int32</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L363-L364","name":"Bool.toInt32","line":363,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Bool.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Bool.toInt32\"><span class=\"name\">Bool</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L361-L361","name":"instDecidableEqInt32","line":361,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableEqInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableEqInt32\"><span class=\"name\">instDecidableEqInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L360-L360","name":"instShiftRightInt32","line":360,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftRightInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftRightInt32\"><span class=\"name\">instShiftRightInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftRight\">ShiftRight</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L359-L359","name":"instShiftLeftInt32","line":359,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftLeftInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftLeftInt32\"><span class=\"name\">instShiftLeftInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftLeft\">ShiftLeft</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L358-L358","name":"instXorInt32","line":358,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instXorInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instXorInt32\"><span class=\"name\">instXorInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Xor\">Xor</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L357-L357","name":"instOrOpInt32","line":357,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOrOpInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOrOpInt32\"><span class=\"name\">instOrOpInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrOp\">OrOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L356-L356","name":"instAndOpInt32","line":356,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAndOpInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAndOpInt32\"><span class=\"name\">instAndOpInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndOp\">AndOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L355-L355","name":"instComplementInt32","line":355,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instComplementInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instComplementInt32\"><span class=\"name\">instComplementInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Complement\">Complement</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L354-L354","name":"instLEInt32","line":354,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLEInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLEInt32\"><span class=\"name\">instLEInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L353-L353","name":"instLTInt32","line":353,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLTInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLTInt32\"><span class=\"name\">instLTInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L352-L352","name":"instDivInt32","line":352,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDivInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDivInt32\"><span class=\"name\">instDivInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L351-L351","name":"instModInt32","line":351,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instModInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instModInt32\"><span class=\"name\">instModInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L350-L350","name":"instMulInt32","line":350,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMulInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMulInt32\"><span class=\"name\">instMulInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L349-L349","name":"instSubInt32","line":349,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instSubInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instSubInt32\"><span class=\"name\">instSubInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L348-L348","name":"instAddInt32","line":348,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAddInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAddInt32\"><span class=\"name\">instAddInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L345-L346","name":"instInhabitedInt32","line":345,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instInhabitedInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instInhabitedInt32\"><span class=\"name\">instInhabitedInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L343-L343","name":"Int32.le","line":343,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.le\"><span class=\"name\">Int32</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L342-L342","name":"Int32.lt","line":342,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.lt\"><span class=\"name\">Int32</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L333-L340","name":"Int32.decEq","line":333,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.decEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.decEq\"><span class=\"name\">Int32</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L330-L331","name":"Int32.complement","line":330,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.complement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.complement\"><span class=\"name\">Int32</span>.<span class=\"name\">complement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L328-L329","name":"Int32.shiftRight","line":328,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.shiftRight\"><span class=\"name\">Int32</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L326-L327","name":"Int32.shiftLeft","line":326,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.shiftLeft\"><span class=\"name\">Int32</span>.<span class=\"name\">shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L324-L325","name":"Int32.xor","line":324,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.xor\"><span class=\"name\">Int32</span>.<span class=\"name\">xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L322-L323","name":"Int32.lor","line":322,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.lor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.lor\"><span class=\"name\">Int32</span>.<span class=\"name\">lor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L320-L321","name":"Int32.land","line":320,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.land","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.land\"><span class=\"name\">Int32</span>.<span class=\"name\">land</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L318-L319","name":"Int32.mod","line":318,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.mod\"><span class=\"name\">Int32</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L316-L317","name":"Int32.div","line":316,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.div\"><span class=\"name\">Int32</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L314-L315","name":"Int32.mul","line":314,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.mul\"><span class=\"name\">Int32</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L312-L313","name":"Int32.sub","line":312,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.sub\"><span class=\"name\">Int32</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L310-L311","name":"Int32.add","line":310,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.add\"><span class=\"name\">Int32</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L307-L308","name":"instNegInt32","line":307,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instNegInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instNegInt32\"><span class=\"name\">instNegInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L306-L306","name":"instOfNatInt32","line":306,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOfNatInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOfNatInt32\"><span class=\"name\">instOfNatInt32</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L303-L304","name":"instToStringInt32","line":303,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instToStringInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instToStringInt32\"><span class=\"name\">instToStringInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L300-L301","name":"Int32.neg","line":300,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.neg\"><span class=\"name\">Int32</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L298-L299","name":"Int16.toInt32","line":298,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toInt32\"><span class=\"name\">Int16</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L296-L297","name":"Int8.toInt32","line":296,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toInt32\"><span class=\"name\">Int8</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L294-L295","name":"Int32.toInt16","line":294,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toInt16\"><span class=\"name\">Int32</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L292-L293","name":"Int32.toInt8","line":292,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toInt8\"><span class=\"name\">Int32</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L287-L291","name":"Int32.toNat","line":287,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toNat","doc":"This function has the same behavior as `Int.toNat` for negative numbers.\nIf you want to obtain the 2's complement representation use `toBitVec`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toNat\"><span class=\"name\">Int32</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L285-L286","name":"Int32.toInt","line":285,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toInt\"><span class=\"name\">Int32</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L284-L284","name":"Nat.toInt32","line":284,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Nat.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Nat.toInt32\"><span class=\"name\">Nat</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L283-L283","name":"Int.toInt32","line":283,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int.toInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int.toInt32\"><span class=\"name\">Int</span>.<span class=\"name\">toInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L281-L282","name":"Int32.ofNat","line":281,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.ofNat\"><span class=\"name\">Int32</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L279-L280","name":"Int32.ofInt","line":279,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.ofInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.ofInt\"><span class=\"name\">Int32</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L274-L277","name":"Int32.toBitVec","line":274,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toBitVec","doc":"Obtain the `BitVec` that contains the 2's complement representation of the `Int32`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toBitVec\"><span class=\"name\">Int32</span>.<span class=\"name\">toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L271-L272","name":"Int32.size","line":271,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.size","doc":"The size of type `Int32`, that is, `2^32 = 4294967296`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.size\"><span class=\"name\">Int32</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L269-L269","name":"instMinInt16","line":269,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMinInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMinInt16\"><span class=\"name\">instMinInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L268-L268","name":"instMaxInt16","line":268,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMaxInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMaxInt16\"><span class=\"name\">instMaxInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L267-L267","name":"instDecidableLeInt16","line":267,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLeInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLeInt16\"><span class=\"name\">instDecidableLeInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L266-L266","name":"instDecidableLtInt16","line":266,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLtInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLtInt16\"><span class=\"name\">instDecidableLtInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L262-L264","name":"Int16.decLe","line":262,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.decLe\"><span class=\"name\">Int16</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L258-L260","name":"Int16.decLt","line":258,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.decLt\"><span class=\"name\">Int16</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L255-L256","name":"Bool.toInt16","line":255,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Bool.toInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Bool.toInt16\"><span class=\"name\">Bool</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L253-L253","name":"instDecidableEqInt16","line":253,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableEqInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableEqInt16\"><span class=\"name\">instDecidableEqInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L252-L252","name":"instShiftRightInt16","line":252,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftRightInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftRightInt16\"><span class=\"name\">instShiftRightInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftRight\">ShiftRight</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L251-L251","name":"instShiftLeftInt16","line":251,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftLeftInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftLeftInt16\"><span class=\"name\">instShiftLeftInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftLeft\">ShiftLeft</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L250-L250","name":"instXorInt16","line":250,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instXorInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instXorInt16\"><span class=\"name\">instXorInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Xor\">Xor</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L249-L249","name":"instOrOpInt16","line":249,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOrOpInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOrOpInt16\"><span class=\"name\">instOrOpInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrOp\">OrOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L248-L248","name":"instAndOpInt16","line":248,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAndOpInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAndOpInt16\"><span class=\"name\">instAndOpInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndOp\">AndOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L247-L247","name":"instComplementInt16","line":247,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instComplementInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instComplementInt16\"><span class=\"name\">instComplementInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Complement\">Complement</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L246-L246","name":"instLEInt16","line":246,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLEInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLEInt16\"><span class=\"name\">instLEInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L245-L245","name":"instLTInt16","line":245,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLTInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLTInt16\"><span class=\"name\">instLTInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L244-L244","name":"instDivInt16","line":244,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDivInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDivInt16\"><span class=\"name\">instDivInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L243-L243","name":"instModInt16","line":243,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instModInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instModInt16\"><span class=\"name\">instModInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L242-L242","name":"instMulInt16","line":242,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMulInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMulInt16\"><span class=\"name\">instMulInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L241-L241","name":"instSubInt16","line":241,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instSubInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instSubInt16\"><span class=\"name\">instSubInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L240-L240","name":"instAddInt16","line":240,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAddInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAddInt16\"><span class=\"name\">instAddInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L237-L238","name":"instInhabitedInt16","line":237,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instInhabitedInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instInhabitedInt16\"><span class=\"name\">instInhabitedInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L235-L235","name":"Int16.le","line":235,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.le\"><span class=\"name\">Int16</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L234-L234","name":"Int16.lt","line":234,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.lt\"><span class=\"name\">Int16</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L225-L232","name":"Int16.decEq","line":225,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.decEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.decEq\"><span class=\"name\">Int16</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L222-L223","name":"Int16.complement","line":222,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.complement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.complement\"><span class=\"name\">Int16</span>.<span class=\"name\">complement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L220-L221","name":"Int16.shiftRight","line":220,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.shiftRight\"><span class=\"name\">Int16</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L218-L219","name":"Int16.shiftLeft","line":218,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.shiftLeft\"><span class=\"name\">Int16</span>.<span class=\"name\">shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L216-L217","name":"Int16.xor","line":216,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.xor\"><span class=\"name\">Int16</span>.<span class=\"name\">xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L214-L215","name":"Int16.lor","line":214,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.lor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.lor\"><span class=\"name\">Int16</span>.<span class=\"name\">lor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L212-L213","name":"Int16.land","line":212,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.land","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.land\"><span class=\"name\">Int16</span>.<span class=\"name\">land</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L210-L211","name":"Int16.mod","line":210,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.mod\"><span class=\"name\">Int16</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L208-L209","name":"Int16.div","line":208,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.div\"><span class=\"name\">Int16</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L206-L207","name":"Int16.mul","line":206,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.mul\"><span class=\"name\">Int16</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L204-L205","name":"Int16.sub","line":204,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.sub\"><span class=\"name\">Int16</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L202-L203","name":"Int16.add","line":202,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.add\"><span class=\"name\">Int16</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L199-L200","name":"instNegInt16","line":199,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instNegInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instNegInt16\"><span class=\"name\">instNegInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L198-L198","name":"instOfNatInt16","line":198,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOfNatInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOfNatInt16\"><span class=\"name\">instOfNatInt16</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L195-L196","name":"instToStringInt16","line":195,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instToStringInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instToStringInt16\"><span class=\"name\">instToStringInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L192-L193","name":"Int16.neg","line":192,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.neg\"><span class=\"name\">Int16</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L190-L191","name":"Int8.toInt16","line":190,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toInt16\"><span class=\"name\">Int8</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L188-L189","name":"Int16.toInt8","line":188,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toInt8\"><span class=\"name\">Int16</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L183-L187","name":"Int16.toNat","line":183,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toNat","doc":"This function has the same behavior as `Int.toNat` for negative numbers.\nIf you want to obtain the 2's complement representation use `toBitVec`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toNat\"><span class=\"name\">Int16</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L181-L182","name":"Int16.toInt","line":181,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toInt\"><span class=\"name\">Int16</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L180-L180","name":"Nat.toInt16","line":180,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Nat.toInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Nat.toInt16\"><span class=\"name\">Nat</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L179-L179","name":"Int.toInt16","line":179,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int.toInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int.toInt16\"><span class=\"name\">Int</span>.<span class=\"name\">toInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L177-L178","name":"Int16.ofNat","line":177,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.ofNat\"><span class=\"name\">Int16</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L175-L176","name":"Int16.ofInt","line":175,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.ofInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.ofInt\"><span class=\"name\">Int16</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L170-L173","name":"Int16.toBitVec","line":170,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toBitVec","doc":"Obtain the `BitVec` that contains the 2's complement representation of the `Int16`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toBitVec\"><span class=\"name\">Int16</span>.<span class=\"name\">toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L167-L168","name":"Int16.size","line":167,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.size","doc":"The size of type `Int16`, that is, `2^16 = 65536`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.size\"><span class=\"name\">Int16</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L165-L165","name":"instMinInt8","line":165,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMinInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMinInt8\"><span class=\"name\">instMinInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L164-L164","name":"instMaxInt8","line":164,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMaxInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMaxInt8\"><span class=\"name\">instMaxInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L163-L163","name":"instDecidableLeInt8","line":163,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLeInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLeInt8\"><span class=\"name\">instDecidableLeInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L162-L162","name":"instDecidableLtInt8","line":162,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableLtInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableLtInt8\"><span class=\"name\">instDecidableLtInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L158-L160","name":"Int8.decLe","line":158,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.decLe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.decLe\"><span class=\"name\">Int8</span>.<span class=\"name\">decLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L154-L156","name":"Int8.decLt","line":154,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.decLt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.decLt\"><span class=\"name\">Int8</span>.<span class=\"name\">decLt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L151-L152","name":"Bool.toInt8","line":151,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Bool.toInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Bool.toInt8\"><span class=\"name\">Bool</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L149-L149","name":"instDecidableEqInt8","line":149,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDecidableEqInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDecidableEqInt8\"><span class=\"name\">instDecidableEqInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L148-L148","name":"instShiftRightInt8","line":148,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftRightInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftRightInt8\"><span class=\"name\">instShiftRightInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftRight\">ShiftRight</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L147-L147","name":"instShiftLeftInt8","line":147,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instShiftLeftInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instShiftLeftInt8\"><span class=\"name\">instShiftLeftInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftLeft\">ShiftLeft</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L146-L146","name":"instXorInt8","line":146,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instXorInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instXorInt8\"><span class=\"name\">instXorInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Xor\">Xor</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L145-L145","name":"instOrOpInt8","line":145,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOrOpInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOrOpInt8\"><span class=\"name\">instOrOpInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrOp\">OrOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L144-L144","name":"instAndOpInt8","line":144,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAndOpInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAndOpInt8\"><span class=\"name\">instAndOpInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndOp\">AndOp</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L143-L143","name":"instComplementInt8","line":143,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instComplementInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instComplementInt8\"><span class=\"name\">instComplementInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Complement\">Complement</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L142-L142","name":"instLEInt8","line":142,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLEInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLEInt8\"><span class=\"name\">instLEInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L141-L141","name":"instLTInt8","line":141,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instLTInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instLTInt8\"><span class=\"name\">instLTInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L140-L140","name":"instDivInt8","line":140,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instDivInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instDivInt8\"><span class=\"name\">instDivInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L139-L139","name":"instModInt8","line":139,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instModInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instModInt8\"><span class=\"name\">instModInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L138-L138","name":"instMulInt8","line":138,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instMulInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instMulInt8\"><span class=\"name\">instMulInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L137-L137","name":"instSubInt8","line":137,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instSubInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instSubInt8\"><span class=\"name\">instSubInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L136-L136","name":"instAddInt8","line":136,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instAddInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instAddInt8\"><span class=\"name\">instAddInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L133-L134","name":"instInhabitedInt8","line":133,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instInhabitedInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instInhabitedInt8\"><span class=\"name\">instInhabitedInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L131-L131","name":"Int8.le","line":131,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.le\"><span class=\"name\">Int8</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L130-L130","name":"Int8.lt","line":130,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.lt\"><span class=\"name\">Int8</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L121-L128","name":"Int8.decEq","line":121,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.decEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.decEq\"><span class=\"name\">Int8</span>.<span class=\"name\">decEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L118-L119","name":"Int8.complement","line":118,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.complement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.complement\"><span class=\"name\">Int8</span>.<span class=\"name\">complement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L116-L117","name":"Int8.shiftRight","line":116,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.shiftRight\"><span class=\"name\">Int8</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L114-L115","name":"Int8.shiftLeft","line":114,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.shiftLeft\"><span class=\"name\">Int8</span>.<span class=\"name\">shiftLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L112-L113","name":"Int8.xor","line":112,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.xor\"><span class=\"name\">Int8</span>.<span class=\"name\">xor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L110-L111","name":"Int8.lor","line":110,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.lor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.lor\"><span class=\"name\">Int8</span>.<span class=\"name\">lor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L108-L109","name":"Int8.land","line":108,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.land","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.land\"><span class=\"name\">Int8</span>.<span class=\"name\">land</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L106-L107","name":"Int8.mod","line":106,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.mod\"><span class=\"name\">Int8</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L104-L105","name":"Int8.div","line":104,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.div\"><span class=\"name\">Int8</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L102-L103","name":"Int8.mul","line":102,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.mul\"><span class=\"name\">Int8</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L100-L101","name":"Int8.sub","line":100,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.sub\"><span class=\"name\">Int8</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L98-L99","name":"Int8.add","line":98,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.add\"><span class=\"name\">Int8</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L95-L96","name":"instNegInt8","line":95,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instNegInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instNegInt8\"><span class=\"name\">instNegInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L94-L94","name":"instOfNatInt8","line":94,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instOfNatInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instOfNatInt8\"><span class=\"name\">instOfNatInt8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L91-L92","name":"instToStringInt8","line":91,"kind":"instance","docLink":"./Init/Data/SInt/Basic.html#instToStringInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#instToStringInt8\"><span class=\"name\">instToStringInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L88-L89","name":"Int8.neg","line":88,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.neg\"><span class=\"name\">Int8</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L83-L87","name":"Int8.toNat","line":83,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toNat","doc":"This function has the same behavior as `Int.toNat` for negative numbers.\nIf you want to obtain the 2's complement representation use `toBitVec`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toNat\"><span class=\"name\">Int8</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L81-L82","name":"Int8.toInt","line":81,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toInt\"><span class=\"name\">Int8</span>.<span class=\"name\">toInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L80-L80","name":"Nat.toInt8","line":80,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Nat.toInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Nat.toInt8\"><span class=\"name\">Nat</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L79-L79","name":"Int.toInt8","line":79,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int.toInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int.toInt8\"><span class=\"name\">Int</span>.<span class=\"name\">toInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L77-L78","name":"Int8.ofNat","line":77,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.ofNat\"><span class=\"name\">Int8</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L75-L76","name":"Int8.ofInt","line":75,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.ofInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.ofInt\"><span class=\"name\">Int8</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L70-L73","name":"Int8.toBitVec","line":70,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toBitVec","doc":"Obtain the `BitVec` that contains the 2's complement representation of the `Int8`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toBitVec\"><span class=\"name\">Int8</span>.<span class=\"name\">toBitVec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L67-L68","name":"Int8.size","line":67,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.size","doc":"The size of type `Int8`, that is, `2^8 = 256`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.size\"><span class=\"name\">Int8</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L65-L65","name":"ISize.toUSize","line":65,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#ISize.toUSize","doc":"Obtain the `USize` that is 2's complement equivalent to the `ISize`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.toUSize\"><span class=\"name\">ISize</span>.<span class=\"name\">toUSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L61-L61","name":"ISize.mk","line":61,"kind":"ctor","docLink":"./Init/Data/SInt/Basic.html#ISize.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize.mk\"><span class=\"name\">ISize</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toUSize : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#ISize\">ISize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L55-L65","name":"ISize","line":55,"kind":"structure","docLink":"./Init/Data/SInt/Basic.html#ISize","doc":"A `ISize` is a signed integer with the size of a word for the platform's architecture.\n\nFor example, if running on a 32-bit machine, ISize is equivalent to `Int32`.\nOr on a 64-bit machine, `Int64`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#ISize\"><span class=\"name\">ISize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L53-L53","name":"Int64.toUInt64","line":53,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int64.toUInt64","doc":"Obtain the `UInt64` that is 2's complement equivalent to the `Int64`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.toUInt64\"><span class=\"name\">Int64</span>.<span class=\"name\">toUInt64</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L49-L49","name":"Int64.mk","line":49,"kind":"ctor","docLink":"./Init/Data/SInt/Basic.html#Int64.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64.mk\"><span class=\"name\">Int64</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toUInt64 : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int64\">Int64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L45-L53","name":"Int64","line":45,"kind":"structure","docLink":"./Init/Data/SInt/Basic.html#Int64","doc":"The type of signed 64-bit integers. This type has special support in the\ncompiler to make it actually 64 bits rather than wrapping a `Nat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int64\"><span class=\"name\">Int64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L43-L43","name":"Int32.toUInt32","line":43,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int32.toUInt32","doc":"Obtain the `UInt32` that is 2's complement equivalent to the `Int32`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.toUInt32\"><span class=\"name\">Int32</span>.<span class=\"name\">toUInt32</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L39-L39","name":"Int32.mk","line":39,"kind":"ctor","docLink":"./Init/Data/SInt/Basic.html#Int32.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32.mk\"><span class=\"name\">Int32</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toUInt32 : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int32\">Int32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L35-L43","name":"Int32","line":35,"kind":"structure","docLink":"./Init/Data/SInt/Basic.html#Int32","doc":"The type of signed 32-bit integers. This type has special support in the\ncompiler to make it actually 32 bits rather than wrapping a `Nat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int32\"><span class=\"name\">Int32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L33-L33","name":"Int16.toUInt16","line":33,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int16.toUInt16","doc":"Obtain the `UInt16` that is 2's complement equivalent to the `Int16`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.toUInt16\"><span class=\"name\">Int16</span>.<span class=\"name\">toUInt16</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16\">UInt16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L29-L29","name":"Int16.mk","line":29,"kind":"ctor","docLink":"./Init/Data/SInt/Basic.html#Int16.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16.mk\"><span class=\"name\">Int16</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toUInt16 : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int16\">Int16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L25-L33","name":"Int16","line":25,"kind":"structure","docLink":"./Init/Data/SInt/Basic.html#Int16","doc":"The type of signed 16-bit integers. This type has special support in the\ncompiler to make it actually 16 bits rather than wrapping a `Nat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int16\"><span class=\"name\">Int16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L23-L23","name":"Int8.toUInt8","line":23,"kind":"def","docLink":"./Init/Data/SInt/Basic.html#Int8.toUInt8","doc":"Obtain the `UInt8` that is 2's complement equivalent to the `Int8`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.toUInt8\"><span class=\"name\">Int8</span>.<span class=\"name\">toUInt8</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L19-L19","name":"Int8.mk","line":19,"kind":"ctor","docLink":"./Init/Data/SInt/Basic.html#Int8.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8.mk\"><span class=\"name\">Int8</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toUInt8 : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/SInt/Basic.html#Int8\">Int8</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Data/SInt/Basic.lean#L15-L23","name":"Int8","line":15,"kind":"structure","docLink":"./Init/Data/SInt/Basic.html#Int8","doc":"The type of signed 8-bit integers. This type has special support in the\ncompiler to make it actually 8 bits rather than wrapping a `Nat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/SInt/Basic.html#Int8\"><span class=\"name\">Int8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}