{"name":"Init.Syntax","instances":[],"imports":["Init.Data.Array.Set"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Syntax.lean#L27-L34","name":"Lean.Syntax.setArg","line":27,"kind":"def","docLink":"./Init/Syntax.html#Lean.Syntax.setArg","doc":"Updates the `i`'th argument of the syntax.\nDoes nothing for non-`node` nodes, or if `i` is out of bounds of the node list.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Syntax.html#Lean.Syntax.setArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Syntax</span>.<span class=\"name\">setArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arg : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Init/Syntax.lean#L18-L25","name":"Lean.Syntax.setArgs","line":18,"kind":"def","docLink":"./Init/Syntax.html#Lean.Syntax.setArgs","doc":"Updates the argument list without changing the node kind.\nDoes nothing for non-`node` nodes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Syntax.html#Lean.Syntax.setArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Syntax</span>.<span class=\"name\">setArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"}]}