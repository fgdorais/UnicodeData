{"name":"Std.Time.Time.Unit.Hour","instances":[{"typeNames":["Std.Time.Hour.Ordinal"],"name":"Std.Time.Hour.instOrdinalRepr","className":"Repr"},{"typeNames":["Std.Time.Hour.Ordinal"],"name":"Std.Time.Hour.instOrdinalBEq","className":"BEq"},{"typeNames":["Std.Time.Hour.Ordinal"],"name":"Std.Time.Hour.instOrdinalLE","className":"LE"},{"typeNames":["Std.Time.Hour.Ordinal"],"name":"Std.Time.Hour.instOrdinalLT","className":"LT"},{"typeNames":["Std.Time.Hour.Ordinal"],"name":"Std.Time.Hour.instOfNatOrdinal","className":"OfNat"},{"typeNames":["Std.Time.Hour.Ordinal"],"name":"Std.Time.Hour.instInhabitedOrdinal","className":"Inhabited"},{"typeNames":["LE.le"],"name":"Std.Time.Hour.instDecidableLeOrdinal","className":"Decidable"},{"typeNames":["LT.lt"],"name":"Std.Time.Hour.instDecidableLtOrdinal","className":"Decidable"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetRepr","className":"Repr"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetBEq","className":"BEq"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetInhabited","className":"Inhabited"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetAdd","className":"Add"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetSub","className":"Sub"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetNeg","className":"Neg"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOffsetToString","className":"ToString"},{"typeNames":["Std.Time.Hour.Offset"],"name":"Std.Time.Hour.instOfNatOffset","className":"OfNat"}],"imports":["Std.Internal.Rat","Std.Time.Internal","Std.Time.Time.Unit.Minute","Std.Time.Time.Unit.Second"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L101-L106","name":"Std.Time.Hour.Offset.ofInt","line":101,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofInt","doc":"Creates an `Offset` from an integer.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L94-L99","name":"Std.Time.Hour.Offset.ofNat","line":94,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofNat","doc":"Creates an `Offset` from a natural number.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Offset</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L84-L89","name":"Std.Time.Hour.Ordinal.toOffset","line":84,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toOffset","doc":"Converts an `Ordinal` to an `Offset`, which represents the duration in hours as an integer value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toOffset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L77-L82","name":"Std.Time.Hour.Ordinal.ofFin","line":77,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofFin","doc":"Creates an `Ordinal` from a `Fin` value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofFin\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">24</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L70-L75","name":"Std.Time.Hour.Ordinal.ofNat","line":70,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofNat","doc":"Creates an `Ordinal` from a natural number, ensuring the value is within the valid bounds for hours.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofNat\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">â‰¤</a> <span class=\"fn\">23</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L63-L69","name":"Std.Time.Hour.Ordinal.shiftTo1BasedHour","line":63,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.shiftTo1BasedHour","doc":"Converts an Ordinal into a 1-based hour representation within the range of 1 to 24.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.shiftTo1BasedHour\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">shiftTo1BasedHour</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">24</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L57-L61","name":"Std.Time.Hour.Ordinal.toRelative","line":57,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toRelative","doc":"Converts an `Ordinal` into a relative hour in the range of 1 to 12.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.toRelative\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">toRelative</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ordinal : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Time/Internal/Bounded.html#Std.Time.Internal.Bounded.LE\">Std.Time.Internal.Bounded.LE</a> <span class=\"fn\">1</span> <span class=\"fn\">12</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L50-L55","name":"Std.Time.Hour.Ordinal.ofInt","line":50,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofInt","doc":"Creates an `Ordinal` from an integer, ensuring the value is within bounds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal.ofInt\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span>.<span class=\"name\">ofInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">â‰¤</a> <span class=\"fn\">data</span></span> <a href=\"./Init/Prelude.html#And\">âˆ§</a> <span class=\"fn\"><span class=\"fn\">data</span> <a href=\"./Init/Prelude.html#LE.le\">â‰¤</a> <span class=\"fn\">23</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L45-L46","name":"Std.Time.Hour.instOfNatOffset","line":45,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOffset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOfNatOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetToString","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetToString\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetNeg","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetNeg\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetSub","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetSub\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetAdd","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetAdd\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetInhabited","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetInhabited\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetBEq","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L43-L43","name":"Std.Time.Hour.instOffsetRepr","line":43,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOffsetRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOffsetRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\">Std.Time.Hour.Offset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L38-L43","name":"Std.Time.Hour.Offset","line":38,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset","doc":"`Offset` represents an offset in hours, defined as an `Int`. This can be used to express durations\nor differences in hours.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Offset\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Offset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L35-L36","name":"Std.Time.Hour.instDecidableLtOrdinal","line":35,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLtOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLtOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableLtOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L32-L33","name":"Std.Time.Hour.instDecidableLeOrdinal","line":32,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLeOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instDecidableLeOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instDecidableLeOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">â‰¤</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L29-L30","name":"Std.Time.Hour.instInhabitedOrdinal","line":29,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instInhabitedOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instInhabitedOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instInhabitedOrdinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L26-L27","name":"Std.Time.Hour.instOfNatOrdinal","line":26,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOrdinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOfNatOrdinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOfNatOrdinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L24-L24","name":"Std.Time.Hour.instOrdinalLT","line":24,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalLT\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOrdinalLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L24-L24","name":"Std.Time.Hour.instOrdinalLE","line":24,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalLE\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOrdinalLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L24-L24","name":"Std.Time.Hour.instOrdinalBEq","line":24,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalBEq\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOrdinalBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L24-L24","name":"Std.Time.Hour.instOrdinalRepr","line":24,"kind":"instance","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.instOrdinalRepr\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">instOrdinalRepr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\">Std.Time.Hour.Ordinal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/11651562caae0a0b3973811508db2ab8903d3854/src/Std/Time/Time/Unit/Hour.lean#L20-L24","name":"Std.Time.Hour.Ordinal","line":20,"kind":"def","docLink":"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal","doc":"`Ordinal` represents a bounded value for hours, ranging from 0 to 23.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Time/Time/Unit/Hour.html#Std.Time.Hour.Ordinal\"><span class=\"name\">Std</span>.<span class=\"name\">Time</span>.<span class=\"name\">Hour</span>.<span class=\"name\">Ordinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}